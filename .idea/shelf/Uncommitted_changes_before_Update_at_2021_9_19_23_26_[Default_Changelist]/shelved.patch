Index: src/comp1110/ass2/gui/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp1110.ass2.gui;\r\n\r\nimport comp1110.ass2.Games;\r\nimport comp1110.ass2.Location;\r\nimport comp1110.ass2.Piece;\r\nimport comp1110.ass2.Puzzle;\r\nimport javafx.animation.KeyFrame;\r\nimport javafx.animation.Timeline;\r\nimport javafx.application.Application;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.geometry.Insets;\r\nimport javafx.scene.Group;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.Button;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.control.Slider;\r\nimport javafx.scene.input.*;\r\nimport javafx.scene.layout.Background;\r\nimport javafx.scene.layout.BackgroundFill;\r\nimport javafx.scene.layout.CornerRadii;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.shape.Rectangle;\r\nimport javafx.scene.text.Font;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.util.Random;\r\nimport java.util.Set;\r\n\r\n\r\npublic class Board extends Application {\r\n\r\n\r\n    private static final int BOARD_WIDTH = 933;\r\n    private static final int BOARD_HEIGHT = 700;\r\n    private static final int WHITE_EDGE = 10;\r\n    private static final int SHADOW = 5;\r\n    private static final double STAR_WIDTH = 80;\r\n    private static final double STAR_HEIGHT = STAR_WIDTH * Math.sqrt(3) / 2; //69.282\r\n    private static final double MARGIN = 0.175 * STAR_WIDTH; //14\r\n    private static final double RECTA_WIDTH = 2 * MARGIN + 7 * STAR_WIDTH; //588\r\n    private static final double RECTA_HEIGHT = 2 * MARGIN + 4 * STAR_HEIGHT; //305.128\r\n    private static final Color BLACKBLUE = new Color(0.172, 0.172, 0.27, 1.0);\r\n    private static final double PIECE_BOARD_HEIGHT = BOARD_HEIGHT - 3 * WHITE_EDGE - RECTA_HEIGHT;\r\n    private static final int MARGIN_IN_PIECE_BOARD = 9;\r\n    private static final double X_PIECE_PLACE = WHITE_EDGE + MARGIN_IN_PIECE_BOARD + 2;\r\n    private static final double Y_PIECE_PLACE = 2 * WHITE_EDGE + RECTA_HEIGHT + MARGIN_IN_PIECE_BOARD + 2;\r\n\r\n\r\n    private final Group root = new Group();\r\n\r\n    private final Group blankBoard = new Group();\r\n    private final comp1110.ass2.Board gameBoard = new comp1110.ass2.Board();\r\n    private final Star[][] stars = new Star[4][];//place on blank board\r\n\r\n    private final Group pieceBoard = new Group();\r\n    private final Star[][] pieceBoardStars = new Star[5][];//place on piece board\r\n    private final Button[][] selects = new Button[4][];\r\n    private Piece piecePreview;\r\n    private VisualPiece visualPiecePriview;\r\n\r\n    private final Group controlBoard = new Group();\r\n    private final Slider difficultyControl = new Slider();\r\n    // hint\r\n    private Button button3;\r\n    private String hintPieceStr = \"\";\r\n    private boolean showHint=false;\r\n    private int hintUse;\r\n\r\n    private Timeline timeline;\r\n    private int tmp = 0;\r\n    private Label timer;\r\n\r\n    private final Group helpBoard = new Group();\r\n    private Label help1,help2;\r\n    private final String[] help = new String[]{\r\n            \"How to start?\",\r\n            \"\"\"\r\n1. Select difficulty by slider. There are 5 levels:\r\n\r\n   1   Starter, provide 4 or 5 pieces on the board.\r\n\r\n   2   Junior, provide 3 or 2 pieces on the board.\r\n\r\n   3   Expert, provide 2 pieces on the board.\r\n\r\n   4   Master, provide 1 piece on the board.\r\n\r\n   5   Wizard, provide a few stars on the board.\r\n\r\n2. Both \"Start\" and \"Random\" can start a game,\r\n\r\n   there will be more puzzles if you use \"Random\".\r\n\r\n\r\n                                   1 / 2\"\"\",\r\n            \"How to play?\",\r\n            \"\"\"\r\n1. Click and select the piece you want.\r\n\r\n2. Drag and place it to the right position.\r\n\r\n3. Use mouse wheel to rotate the piece.\r\n\r\n4. If you want to remove the piece, click the\r\n\r\n   piece on board or click the pieces below.\r\n\r\n5. Press '?' or button \"hint\" for hint, it will\r\n\r\n   show you where you should place the piece.\r\n\r\n   (except all pieces cannot be placed correctly)\r\n\r\n\r\n                                   2 / 2\"\"\"\r\n    };\r\n\r\n    private void initializeBlankBoard(){\r\n        // back board\r\n        Rectangle boardShadow = new Rectangle(WHITE_EDGE + SHADOW, WHITE_EDGE + SHADOW, RECTA_WIDTH, RECTA_HEIGHT);\r\n        boardShadow.setArcWidth(15);\r\n        boardShadow.setArcHeight(15);\r\n        boardShadow.setFill(new Color(0,0,0,0.5));\r\n        blankBoard.getChildren().add(boardShadow);\r\n        Rectangle board = new Rectangle(WHITE_EDGE, WHITE_EDGE, RECTA_WIDTH, RECTA_HEIGHT);\r\n        board.setArcWidth(15);\r\n        board.setArcHeight(15);\r\n        board.setFill(BLACKBLUE);\r\n        blankBoard.getChildren().add(board);\r\n\r\n        // set empty stars\r\n        comp1110.ass2.Board state = new comp1110.ass2.Board();\r\n        stars[0] = new Star[7];\r\n        stars[1] = new Star[6];\r\n        stars[2] = new Star[7];\r\n        stars[3] = new Star[6];\r\n        double starX, starY;\r\n        for (int i = 0; i < 4; i++) {\r\n            starY = WHITE_EDGE + MARGIN + (2 * i + 1) / 2.0 * (Math.sqrt(3) / 2) * STAR_WIDTH;\r\n            for (int j = 0; j < state.getColors()[i].length; j++) {\r\n                if (i % 2 == 0)\r\n                    starX = WHITE_EDGE + MARGIN + (2 * j + 1) / 2.0 * STAR_WIDTH;\r\n                else starX = WHITE_EDGE + MARGIN + (j + 1) * STAR_WIDTH;\r\n                stars[i][j] = new Star(starX, starY, STAR_WIDTH);\r\n                stars[i][j].setEmptyStar();\r\n                blankBoard.getChildren().add(stars[i][j]);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void initializePieceBoard(){\r\n        // back board\r\n        Rectangle boardShadow = new Rectangle(WHITE_EDGE + SHADOW, 2 * WHITE_EDGE + RECTA_HEIGHT + SHADOW, RECTA_WIDTH, PIECE_BOARD_HEIGHT);\r\n        boardShadow.setArcHeight(15);\r\n        boardShadow.setArcWidth(15);\r\n        boardShadow.setFill(new Color(0,0,0,0.5));\r\n        pieceBoard.getChildren().add(boardShadow);\r\n        Rectangle board = new Rectangle(WHITE_EDGE, 2 * WHITE_EDGE + RECTA_HEIGHT, RECTA_WIDTH, PIECE_BOARD_HEIGHT);\r\n        board.setArcHeight(15);\r\n        board.setArcWidth(15);\r\n        board.setFill(BLACKBLUE);\r\n        pieceBoard.getChildren().add(board);\r\n        //\r\n        Rectangle piecePlaceShadow = new Rectangle(X_PIECE_PLACE - 3, Y_PIECE_PLACE - 3, 5 * STAR_WIDTH + 3, 5 * STAR_HEIGHT + 3);\r\n        piecePlaceShadow.setArcHeight(15);\r\n        piecePlaceShadow.setArcWidth(15);\r\n        piecePlaceShadow.setFill(BLACKBLUE.brighter().brighter());\r\n        pieceBoard.getChildren().add(piecePlaceShadow);\r\n        Rectangle piecePlace = new Rectangle(X_PIECE_PLACE, Y_PIECE_PLACE, 5 * STAR_WIDTH, 5 * STAR_HEIGHT);\r\n        piecePlace.setArcHeight(15);\r\n        piecePlace.setArcWidth(15);\r\n        piecePlace.setFill(BLACKBLUE);\r\n        piecePlace.setStroke(BLACKBLUE.darker().darker());\r\n        pieceBoard.getChildren().add(piecePlace);\r\n        // set stars\r\n        pieceBoardStars[0] = new Star[5];\r\n        pieceBoardStars[1] = new Star[4];\r\n        pieceBoardStars[2] = new Star[5];\r\n        pieceBoardStars[3] = new Star[4];\r\n        pieceBoardStars[4] = new Star[5];\r\n        double starX, starY;\r\n        for (int i = 0; i < 5; i++) {\r\n            starY = Y_PIECE_PLACE + (2*i+1) * STAR_HEIGHT / 2;\r\n            for (int j = 0; j < pieceBoardStars[i].length; j++) {\r\n                if (i % 2 == 0)\r\n                    starX = X_PIECE_PLACE + (2 * j + 1) / 2.0 * STAR_WIDTH;\r\n                else starX = X_PIECE_PLACE + (j + 1) * STAR_WIDTH;\r\n                pieceBoardStars[i][j] = new Star(starX, starY, STAR_WIDTH);\r\n                pieceBoardStars[i][j].setEmptyStar();\r\n                pieceBoardStars[i][j].setStroke(BLACKBLUE.darker());\r\n                pieceBoard.getChildren().add(pieceBoardStars[i][j]);\r\n            }\r\n        }\r\n\r\n        //set select color buttons\r\n        double startX,startY;\r\n        VisualPiece[][] pieces = new VisualPiece[4][];\r\n        pieces[0] = new VisualPiece[2];\r\n        pieces[1] = new VisualPiece[2];\r\n        pieces[2] = new VisualPiece[2];\r\n        pieces[3] = new VisualPiece[1];\r\n\r\n        selects[0] = new Button[2];\r\n        selects[1] = new Button[2];\r\n        selects[2] = new Button[2];\r\n        selects[3] = new Button[1];\r\n        for (int i = 0; i < 4; i++) {\r\n            startY = Y_PIECE_PLACE + i * STAR_HEIGHT * (4.0 / 3);\r\n            for (int j = 0; j < pieces[i].length; j++) {\r\n                startX = X_PIECE_PLACE + (5 + j) * STAR_WIDTH + 2;\r\n                pieces[i][j] = new VisualPiece(0 ,0 , STAR_WIDTH/3);\r\n                selects[i][j] = new Button();\r\n                selects[i][j].setPrefSize(STAR_WIDTH-5,STAR_HEIGHT-5);\r\n                selects[i][j].setLayoutX(startX);\r\n                selects[i][j].setLayoutY(startY);\r\n                selects[i][j].setGraphic(pieces[i][j]);\r\n                selects[i][j].setBackground(new Background(new BackgroundFill(new Color(0,0,0,0.1),new CornerRadii(5), Insets.EMPTY)));\r\n                pieceBoard.getChildren().add(selects[i][j]);\r\n            }\r\n        }\r\n        pieces[0][0].setPiece(new Piece('r'));\r\n        pieces[0][1].setPiece(new Piece('b'));\r\n        pieces[1][0].setPiece(new Piece('o'));\r\n        pieces[1][1].setPiece(new Piece('i'));\r\n        pieces[2][0].setPiece(new Piece('y'));\r\n        pieces[2][1].setPiece(new Piece('p'));\r\n        pieces[3][0].setPiece(new Piece('g'));\r\n        movePiece(selects[0][0], 'r');\r\n        movePiece(selects[1][0], 'o');\r\n        movePiece(selects[2][0], 'y');\r\n        movePiece(selects[3][0], 'g');\r\n        movePiece(selects[0][1], 'b');\r\n        movePiece(selects[1][1], 'i');\r\n        movePiece(selects[2][1], 'p');\r\n\r\n        visualPiecePriview = new VisualPiece(X_PIECE_PLACE + 2.5 * STAR_WIDTH, Y_PIECE_PLACE + 2.5 * STAR_HEIGHT, STAR_WIDTH);\r\n        pieceBoard.getChildren().add(visualPiecePriview);\r\n    }\r\n\r\n    private void initializeControlBorad(){\r\n        Rectangle rectangle1 = new Rectangle(615,450,315,240);\r\n        rectangle1.setFill(new Color(0,0,0,0.3));\r\n        rectangle1.setArcHeight(15);\r\n        rectangle1.setArcWidth(15);\r\n        Rectangle rectangle2 = new Rectangle(610, 445, 315, 240);\r\n        rectangle2.setFill(Color.LIGHTSALMON);\r\n        rectangle2.setArcHeight(15);\r\n        rectangle2.setArcWidth(15);\r\n        controlBoard.getChildren().addAll(rectangle1,rectangle2);\r\n        // difficulty slider\r\n        Label label1 = new Label(\"Difficulty\");\r\n        label1.setLayoutX(630);\r\n        label1.setLayoutY(470);\r\n        label1.setFont(new Font(24));\r\n\r\n        controlBoard.getChildren().add(label1);\r\n        difficultyControl.setLayoutX(740);\r\n        difficultyControl.setLayoutY(480);\r\n        difficultyControl.setMin(1);\r\n        difficultyControl.setMax(5);\r\n        difficultyControl.setShowTickLabels(true);\r\n        difficultyControl.setShowTickMarks(false);\r\n        difficultyControl.setValue(0);\r\n        difficultyControl.setMajorTickUnit(1);\r\n        difficultyControl.setMinorTickCount(0);\r\n        difficultyControl.setSnapToTicks(true);\r\n        controlBoard.getChildren().add(difficultyControl);\r\n        //button\r\n        Rectangle rec1 = new Rectangle(774,554,100,40);\r\n        rec1.setArcHeight(7);\r\n        rec1.setArcWidth(7);\r\n        rec1.setFill(new Color(0.97058825F, 0.5647059F, 0.49019608F,1.0));\r\n        controlBoard.getChildren().add(rec1);\r\n        Button button1 = new Button(\"Start\");\r\n        button1.setPrefSize(100, 40);\r\n        button1.setLayoutX(770);\r\n        button1.setLayoutY(550);\r\n        button1.setFont(new Font(20));\r\n        button1.setBackground(new Background(new BackgroundFill(Color.LIGHTCORAL,new CornerRadii(7), Insets.EMPTY)));\r\n        controlBoard.getChildren().add(button1);\r\n        button1.setOnAction(new EventHandler<ActionEvent>() {\r\n            @Override\r\n            public void handle(ActionEvent actionEvent) {\r\n                int difficulty = (int) difficultyControl.getValue();\r\n                Random random = new Random();\r\n                int num;\r\n                do {\r\n                    gameBoard.setEmpty();\r\n                    num = difficulty * 24 - 24 + random.nextInt(24);\r\n                }while (Games.ALL_CHALLENGES[num].equals(gameBoard.getPuzzle()));\r\n                gameBoard.setPuzzle(Games.ALL_CHALLENGES[num]);\r\n                gameBoard.setSolution(Games.ALL_CHALLENGES_SOLUTIONS[num].substring(0,28));\r\n                setBoardStars();\r\n\r\n                initializeStart();\r\n\r\n            }\r\n        });\r\n        button1.setOnMousePressed(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button1.setLayoutX(772);\r\n                button1.setLayoutY(552);\r\n            }\r\n        });\r\n        button1.setOnMouseReleased(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button1.setLayoutX(770);\r\n                button1.setLayoutY(550);\r\n            }\r\n        });\r\n\r\n        Rectangle rec2 = new Rectangle(644,624,100,40);\r\n        rec2.setArcHeight(7);\r\n        rec2.setArcWidth(7);\r\n        rec2.setFill(new Color(0.97058825F, 0.5647059F, 0.49019608F,1.0));\r\n        controlBoard.getChildren().add(rec2);\r\n        Button button2 = new Button(\"Restart\");\r\n        button2.setPrefSize(100, 40);\r\n        button2.setLayoutX(640);\r\n        button2.setLayoutY(620);\r\n        button2.setFont(new Font(20));\r\n        button2.setBackground(new Background(new BackgroundFill(Color.LIGHTCORAL,new CornerRadii(7), Insets.EMPTY)));\r\n        controlBoard.getChildren().add(button2);\r\n        button2.setOnAction(new EventHandler<ActionEvent>() {\r\n            @Override\r\n            public void handle(ActionEvent actionEvent) {\r\n                gameBoard.setEmpty();\r\n                if (!gameBoard.getPuzzle().equals(\"\"))\r\n                gameBoard.setPuzzle(gameBoard.getPuzzle());\r\n                setBoardStars();\r\n                resetPiecePreview();\r\n            }\r\n        });\r\n        button2.setOnMousePressed(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button2.setLayoutX(642);\r\n                button2.setLayoutY(622);\r\n            }\r\n        });\r\n        button2.setOnMouseReleased(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button2.setLayoutX(640);\r\n                button2.setLayoutY(620);\r\n            }\r\n        });\r\n\r\n        Rectangle rec3 = new Rectangle(774,624,100,40);\r\n        rec3.setArcHeight(7);\r\n        rec3.setArcWidth(7);\r\n        rec3.setFill(new Color(0.97058825F, 0.5647059F, 0.49019608F,1.0));\r\n        controlBoard.getChildren().add(rec3);\r\n        button3 = new Button(\"Hint(\"+hintUse+\")\");\r\n        button3.setPrefSize(100, 40);\r\n        button3.setLayoutX(770);\r\n        button3.setLayoutY(620);\r\n        button3.setFont(new Font(20));\r\n        button3.setBackground(new Background(new BackgroundFill(Color.LIGHTCORAL,new CornerRadii(7), Insets.EMPTY)));\r\n        controlBoard.getChildren().add(button3);\r\n        button3.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (mouseEvent.getButton() == MouseButton.PRIMARY) {\r\n                    button3.setLayoutX(772);\r\n                    button3.setLayoutY(622);\r\n                    showHint();\r\n                }\r\n            }\r\n        });\r\n        button3.addEventFilter(MouseEvent.MOUSE_RELEASED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (mouseEvent.getButton() == MouseButton.PRIMARY) {\r\n                    button3.setLayoutX(770);\r\n                    button3.setLayoutY(620);\r\n                    hideHint();\r\n                }\r\n            }\r\n        });\r\n\r\n        Rectangle rec4 = new Rectangle(644,554,100,40);\r\n        rec4.setArcHeight(7);\r\n        rec4.setArcWidth(7);\r\n        rec4.setFill(new Color(0.97058825F, 0.5647059F, 0.49019608F,1.0));\r\n        controlBoard.getChildren().add(rec4);\r\n        Button button4 = new Button(\"Radom\");\r\n        button4.setPrefSize(100, 40);\r\n        button4.setLayoutX(640);\r\n        button4.setLayoutY(550);\r\n        button4.setFont(new Font(20));\r\n        button4.setBackground(new Background(new BackgroundFill(Color.LIGHTCORAL,new CornerRadii(7), Insets.EMPTY)));\r\n        controlBoard.getChildren().add(button4);\r\n        button4.setOnAction(new EventHandler<ActionEvent>() {\r\n            @Override\r\n            public void handle(ActionEvent actionEvent) {\r\n                gameBoard.setEmpty();\r\n                int difficulty = (int) difficultyControl.getValue();\r\n                Random random = new Random();\r\n                if (difficulty == 4){\r\n                    int num = random.nextInt(32);\r\n                    gameBoard.setPuzzle(Puzzle.masters[num]);\r\n                    gameBoard.setSolution(Puzzle.getMasterSolution(num));\r\n                }else if (difficulty == 3){\r\n                    int num = random.nextInt(2308);\r\n                    gameBoard.setPuzzle(Puzzle.experts[num]);\r\n                    gameBoard.setSolution(Puzzle.getExpertSolution(num));\r\n                }else if (difficulty == 2){\r\n                    int num = random.nextInt(2308);\r\n                    gameBoard.setPuzzle(Puzzle.experts[num]);\r\n                    gameBoard.setSolution(Puzzle.getExpertSolution(num));\r\n                    char color = gameBoard.getUnusedColor().toString().charAt(1);\r\n                    int index = gameBoard.getSolution().indexOf(color);\r\n                    gameBoard.placePiece(gameBoard.getSolution().substring(index,index+4));\r\n                    gameBoard.setPuzzle(gameBoard.toString());\r\n                }else if (difficulty == 1){\r\n                    int num = random.nextInt(2308);\r\n                    gameBoard.setPuzzle(Puzzle.experts[num]);\r\n                    gameBoard.setSolution(Puzzle.getExpertSolution(num));\r\n                    char color = gameBoard.getUnusedColor().toString().charAt(1);\r\n                    int index = gameBoard.getSolution().indexOf(color);\r\n                    gameBoard.placePiece(gameBoard.getSolution().substring(index,index+4));\r\n                    color = gameBoard.getUnusedColor().toString().charAt(1);\r\n                    index = gameBoard.getSolution().indexOf(color);\r\n                    gameBoard.placePiece(gameBoard.getSolution().substring(index,index+4));\r\n                    if (random.nextBoolean()){\r\n                        color = gameBoard.getUnusedColor().toString().charAt(1);\r\n                        index = gameBoard.getSolution().indexOf(color);\r\n                        gameBoard.placePiece(gameBoard.getSolution().substring(index,index+4));\r\n                    }\r\n                    gameBoard.setPuzzle(gameBoard.toString());\r\n                }else if (difficulty == 5){\r\n                    String wizardPuzzle = Puzzle.wizards[random.nextInt(1017)];\r\n                    gameBoard.setPuzzle(wizardPuzzle.substring(wizardPuzzle.indexOf('W')));\r\n                    gameBoard.setSolution(Puzzle.solutions[Integer.parseInt(wizardPuzzle.substring(0,wizardPuzzle.indexOf('W')))].substring(0,28));\r\n\r\n                }\r\n\r\n\r\n                //gameBoard.setPuzzle(gameBoard.getPuzzle());\r\n                setBoardStars();\r\n                initializeStart();\r\n            }\r\n        });\r\n        button4.setOnMousePressed(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button4.setLayoutX(642);\r\n                button4.setLayoutY(552);\r\n            }\r\n        });\r\n        button4.setOnMouseReleased(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                button4.setLayoutX(640);\r\n                button4.setLayoutY(550);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void setTimer(){\r\n        timer = new Label(\"         00 : 00 . 0     \");\r\n        timer.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(7),Insets.EMPTY)));\r\n        timer.setFont(new Font(36));\r\n        timer.setLayoutX(610);\r\n        timer.setLayoutY(392);\r\n        timeline = new Timeline(new KeyFrame(Duration.millis(100), actionEvent -> timeLabel()));\r\n        timeline.setCycleCount(Timeline.INDEFINITE);\r\n    }\r\n\r\n    private void setHelp(){\r\n        Rectangle rectangle1 = new Rectangle(615, 15, 315, 370);\r\n        rectangle1.setFill(new Color(0,0,0,0.3));\r\n        helpBoard.getChildren().add(rectangle1);\r\n        Rectangle rectangle2 = new Rectangle(610, 10, 315, 370);\r\n        rectangle2.setFill(Color.LEMONCHIFFON);\r\n        helpBoard.getChildren().add(rectangle2);\r\n        rectangle2.setFill(Color.LEMONCHIFFON);\r\n        help1 = new Label(this.help[0]);\r\n        help1.setLayoutY(30);\r\n        help1.setLayoutX(640);\r\n        help1.setFont(new Font(36));\r\n        helpBoard.getChildren().add(help1);\r\n        help2 = new Label(this.help[1]);\r\n        help2.setLayoutY(90);\r\n        help2.setLayoutX(620);\r\n        help2.setFont(new Font(12));\r\n        helpBoard.getChildren().add(help2);\r\n        Button button = new Button();\r\n        button.setLayoutY(10);\r\n        button.setLayoutX(610);\r\n        button.setPrefWidth(315);\r\n        button.setPrefHeight(370);\r\n        button.setBackground(new Background(new BackgroundFill(new Color(0,0,0,0), new CornerRadii(0), Insets.EMPTY)));\r\n        button.setOnMousePressed(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                changeHelp();\r\n            }\r\n        });\r\n        helpBoard.getChildren().add(button);\r\n    }\r\n\r\n    private void setPiece(char color){\r\n        piecePreview = new Piece(color);\r\n        visualPiecePriview.setPiece(piecePreview);\r\n    }\r\n\r\n    // rotate selected Piece\r\n    private void rotatePiece(int rotation){\r\n        if (piecePreview != null) {\r\n            piecePreview.rotatePiece(rotation);\r\n            visualPiecePriview.setPiece(piecePreview);\r\n        }\r\n    }\r\n\r\n    // show the game state\r\n    private void setBoardStars(){\r\n        char[][] colors = gameBoard.getColors();\r\n        for (int i = 0; i < 4; i++) {\r\n            for (int j = 0; j < colors[i].length; j++) {\r\n                if (colors[i][j] > 'a' && colors[i][j] < 'z' && colors[i][j] != 'n'){\r\n                    stars[i][j].setPieceStar(colors[i][j]);\r\n                }\r\n                if (colors[i][j] == 'n'){\r\n                    stars[i][j].setEmptyStar();\r\n                }\r\n                if (colors[i][j] > 'A' && colors[i][j] < 'Z'){\r\n                    stars[i][j].setWizardStar((char)(colors[i][j] + 32));\r\n                }\r\n            }\r\n        }\r\n\r\n        Set<Character> unusedColor = gameBoard.getUnusedColor();\r\n        if (unusedColor.contains('r'))\r\n            selects[0][0].setOpacity(1.0);\r\n        else selects[0][0].setOpacity(0.3);\r\n        if (unusedColor.contains('o'))\r\n            selects[1][0].setOpacity(1.0);\r\n        else selects[1][0].setOpacity(0.3);\r\n        if (unusedColor.contains('y'))\r\n            selects[2][0].setOpacity(1.0);\r\n        else selects[2][0].setOpacity(0.3);\r\n        if (unusedColor.contains('g'))\r\n            selects[3][0].setOpacity(1.0);\r\n        else selects[3][0].setOpacity(0.3);\r\n        if (unusedColor.contains('b'))\r\n            selects[0][1].setOpacity(1.0);\r\n        else selects[0][1].setOpacity(0.3);\r\n        if (unusedColor.contains('i'))\r\n            selects[1][1].setOpacity(1.0);\r\n        else selects[1][1].setOpacity(0.3);\r\n        if (unusedColor.contains('p'))\r\n            selects[2][1].setOpacity(1.0);\r\n        else selects[2][1].setOpacity(0.3);\r\n        if (unusedColor.isEmpty() && !showHint )\r\n            timeline.stop();\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    // clear some information when start a new game\r\n    private void initializeStart(){\r\n        showHint = false;\r\n        hintPieceStr = \"\";\r\n        hintUse = 0;\r\n        button3.setText(\"Hint(\"+hintUse+\")\");\r\n        tmp = -1;\r\n        timeLabel();\r\n        timeline.play();\r\n        resetPiecePreview();\r\n    }\r\n\r\n    private void showHint() {\r\n        if (!gameBoard.getUnusedColor().isEmpty() && !showHint && gameBoard.getSolution().length() == 28) {\r\n            showHint = true;\r\n            if (hintPieceStr.length() == 4 && gameBoard.isPieceValid(hintPieceStr)){\r\n                gameBoard.placePiece(hintPieceStr);\r\n                setBoardStars();\r\n                switch (hintPieceStr.charAt(0)) {\r\n                    case 'r' -> selects[0][0].setOpacity(1.0);\r\n                    case 'o' -> selects[1][0].setOpacity(1.0);\r\n                    case 'y' -> selects[2][0].setOpacity(1.0);\r\n                    case 'g' -> selects[3][0].setOpacity(1.0);\r\n                    case 'b' -> selects[0][1].setOpacity(1.0);\r\n                    case 'i' -> selects[1][1].setOpacity(1.0);\r\n                    case 'p' -> selects[2][1].setOpacity(1.0);\r\n                }\r\n            }else {\r\n                hintUse = hintUse + 1;\r\n                if (hintUse > 9)\r\n                    hintUse = 9;\r\n                button3.setText(\"Hint(\" + hintUse + \")\");\r\n                if (piecePreview != null)\r\n                    switch (piecePreview.getColor()) {\r\n                        case 'r' -> hintPieceStr = gameBoard.getSolution().substring(0, 4);\r\n                        case 'o' -> hintPieceStr = gameBoard.getSolution().substring(4, 8);\r\n                        case 'y' -> hintPieceStr = gameBoard.getSolution().substring(8, 12);\r\n                        case 'g' -> hintPieceStr = gameBoard.getSolution().substring(12, 16);\r\n                        case 'b' -> hintPieceStr = gameBoard.getSolution().substring(16, 20);\r\n                        case 'i' -> hintPieceStr = gameBoard.getSolution().substring(20, 24);\r\n                        case 'p' -> hintPieceStr = gameBoard.getSolution().substring(24, 28);\r\n                    }\r\n                if (hintPieceStr.length() != 4 || !gameBoard.isPieceValid(hintPieceStr))\r\n                    for (int i = 0; i < 7; i++) {\r\n                        hintPieceStr = gameBoard.getSolution().substring(4 * i, 4 * i + 4);\r\n                        if (gameBoard.isPieceValid(hintPieceStr))\r\n                            break;\r\n                        else\r\n                            hintPieceStr = \"\";\r\n                    }\r\n            }\r\n            if (!hintPieceStr.equals(\"\")) {\r\n                gameBoard.placePiece(hintPieceStr);\r\n                setBoardStars();\r\n                switch (hintPieceStr.charAt(0)) {\r\n                    case 'r' -> selects[0][0].setOpacity(1.0);\r\n                    case 'o' -> selects[1][0].setOpacity(1.0);\r\n                    case 'y' -> selects[2][0].setOpacity(1.0);\r\n                    case 'g' -> selects[3][0].setOpacity(1.0);\r\n                    case 'b' -> selects[0][1].setOpacity(1.0);\r\n                    case 'i' -> selects[1][1].setOpacity(1.0);\r\n                    case 'p' -> selects[2][1].setOpacity(1.0);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void hideHint(){\r\n        if (showHint && hintPieceStr.length() == 4) {\r\n            gameBoard.removePiece(hintPieceStr);\r\n            setBoardStars();\r\n        }\r\n        showHint = false;\r\n    }\r\n\r\n    // set timer output\r\n    private void timeLabel(){\r\n        tmp++;\r\n        int a,b,c;\r\n        c = tmp % 10;\r\n        b = tmp / 10;\r\n        a = b / 60;\r\n        b = b % 60;\r\n        String output = \"         \";\r\n        if (a == 0)\r\n            output = output + \"00\";\r\n        else if (a < 10)\r\n            output = output + \"0\" + a;\r\n        else if (a < 59)\r\n            output = output + a;\r\n\r\n        output = output + \" : \";\r\n\r\n        if (b == 0)\r\n            output = output + \"00\";\r\n        else if (b < 10)\r\n            output = output + \"0\" + b;\r\n        else\r\n            output = output + b;\r\n\r\n        output = output + \" . \"+c+\"     \";\r\n\r\n        if (a > 60)\r\n            output = \"         60 : 00 . 0     \";\r\n        timer.setText(output);\r\n    }\r\n\r\n    // let selected piece movable\r\n    private void movePiece(Node piece){\r\n        //movePiecePreview();\r\n        double[] startX = new double[1];\r\n        double[] startY = new double[1];\r\n        // place the piece, let piece move with mouse\r\n        piece.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                startX[0] = mouseEvent.getSceneX() - visualPiecePriview.x;\r\n                startY[0] = mouseEvent.getSceneY() - visualPiecePriview.y;\r\n            }\r\n        });\r\n        piece.addEventFilter(MouseEvent.MOUSE_DRAGGED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                visualPiecePriview.setX(mouseEvent.getSceneX() - startX[0]);\r\n                visualPiecePriview.setY(mouseEvent.getSceneY() - startY[0]);\r\n                visualPiecePriview.setPiece(piecePreview);\r\n            }\r\n        });\r\n        piece.addEventFilter(MouseEvent.MOUSE_RELEASED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                // On board\r\n                if (visualPiecePriview.x < 0)\r\n                    visualPiecePriview.setX(0);\r\n                if (visualPiecePriview.x > BOARD_WIDTH)\r\n                    visualPiecePriview.setX(BOARD_WIDTH);\r\n                if (visualPiecePriview.y < 0)\r\n                    visualPiecePriview.setY(0);\r\n                if (visualPiecePriview.y > BOARD_WIDTH)\r\n                    visualPiecePriview.setY(BOARD_HEIGHT);\r\n                // toLocation\r\n                int x,y;\r\n                x = -1;\r\n                y = (int) Math.floor((visualPiecePriview.y - WHITE_EDGE - MARGIN) / STAR_HEIGHT);\r\n                if (y == 0 || y == 2) {\r\n                    x= (int)((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH);\r\n                }\r\n                if (y == 1 || y == 3) {\r\n                    x= (int)Math.floor((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH - 0.5);\r\n                }\r\n                Location center = new Location(x,y);\r\n                if (center.onBoard() && gameBoard.isPieceValid(piecePreview, center)) {\r\n                    hintPieceStr = \"\";\r\n                    gameBoard.placePiece(piecePreview, center);\r\n                    setBoardStars();\r\n                    resetPiecePreview();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // drag select button to move the piece\r\n    private void movePiece(Button piece, char color){\r\n        //movePiecePreview();\r\n        double[] startX = new double[1];\r\n        double[] startY = new double[1];\r\n        // place the piece, let piece move with mouse\r\n        piece.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (gameBoard.getUnusedColor().contains(color)) {\r\n                    startX[0] = mouseEvent.getSceneX();\r\n                    startY[0] = mouseEvent.getSceneY();\r\n                    visualPiecePriview.setX(mouseEvent.getSceneX());\r\n                    visualPiecePriview.setY(mouseEvent.getSceneY());\r\n                    setPiece(color);\r\n                }\r\n            }\r\n        });\r\n        piece.addEventFilter(MouseEvent.MOUSE_DRAGGED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (gameBoard.getUnusedColor().contains(color)) {\r\n                    visualPiecePriview.setX(mouseEvent.getSceneX());\r\n                    visualPiecePriview.setY(mouseEvent.getSceneY());\r\n                    visualPiecePriview.setPiece(piecePreview);\r\n                }\r\n            }\r\n        });\r\n        piece.addEventFilter(MouseEvent.MOUSE_RELEASED, new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                // click\r\n                if (Math.abs(mouseEvent.getSceneX()-startX[0]) < 0.2 * STAR_WIDTH && Math.abs(mouseEvent.getSceneY()-startY[0]) < 0.2 * STAR_HEIGHT){\r\n                    if (gameBoard.getUnusedColor().contains(color)){\r\n                        visualPiecePriview.setX(X_PIECE_PLACE + 2.5 * STAR_WIDTH);\r\n                        visualPiecePriview.setY(Y_PIECE_PLACE + 2.5 * STAR_HEIGHT);\r\n                        setPiece(color);\r\n                    }else if (gameBoard.getPuzzle().indexOf(color) == -1){\r\n                        gameBoard.removePiece(color);\r\n                        setBoardStars();\r\n                    }\r\n                }else if (piecePreview != null){\r\n                    // On board\r\n                    if (visualPiecePriview.x < 0)\r\n                        visualPiecePriview.setX(0);\r\n                    if (visualPiecePriview.x > BOARD_WIDTH)\r\n                        visualPiecePriview.setX(BOARD_WIDTH);\r\n                    if (visualPiecePriview.y < 0)\r\n                        visualPiecePriview.setY(0);\r\n                    if (visualPiecePriview.y > BOARD_WIDTH)\r\n                        visualPiecePriview.setY(BOARD_HEIGHT);\r\n                    // toLocation\r\n                    int x, y;\r\n                    x = -1;\r\n                    y = (int) Math.floor((visualPiecePriview.y - WHITE_EDGE - MARGIN) / STAR_HEIGHT);\r\n                    if (y == 0 || y == 2) {\r\n                        x = (int) ((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH);\r\n                    }\r\n                    if (y == 1 || y == 3) {\r\n                        x = (int) Math.floor((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH - 0.5);\r\n                    }\r\n                    Location center = new Location(x, y);\r\n                    if (center.onBoard() && gameBoard.isPieceValid(piecePreview, center)) {\r\n                        hintPieceStr = \"\";\r\n                        gameBoard.placePiece(piecePreview, center);\r\n                        setBoardStars();\r\n                        resetPiecePreview();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // clear piecePreview and put visualPiecePreview back\r\n    private void resetPiecePreview(){\r\n        visualPiecePriview.getChildren().setAll();\r\n        piecePreview = null;\r\n    }\r\n\r\n    // there are two pages of help, help will change after clicking help\r\n    private void changeHelp(){\r\n        if (help1.getText().equals(help[0])){\r\n            help1.setText(help[2]);\r\n            help2.setText(help[3]);\r\n        }else{\r\n            help1.setText(help[0]);\r\n            help2.setText(help[1]);\r\n        }\r\n    }\r\n\r\n    // remove piece from game board\r\n    private void removePiece() {\r\n        final char[] color = {'n'};\r\n        final double[] centerX = new double[1];\r\n        final double[] centerY = new double[1];\r\n        double[] startX = new double[1];\r\n        double[] startY = new double[1];\r\n        blankBoard.setOnMousePressed(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                int x,y;\r\n                x = -1;\r\n                y = (int) Math.floor((mouseEvent.getSceneY() - WHITE_EDGE - MARGIN) / STAR_HEIGHT);\r\n                if (y == 0 || y == 2) {\r\n                    x= (int)((mouseEvent.getSceneX() - WHITE_EDGE - MARGIN) / STAR_WIDTH);\r\n                }\r\n                if (y == 1 || y == 3) {\r\n                    x= (int)Math.floor((mouseEvent.getSceneX() - WHITE_EDGE - MARGIN) / STAR_WIDTH - 0.5);\r\n                }\r\n                Location location = new Location(x,y);\r\n                if (location.onBoard())\r\n                    color[0] = gameBoard.getColor(location.toString());\r\n                if (color[0] != 'n' && !gameBoard.getUnusedColor().contains(color[0])) {\r\n                    if (gameBoard.getPuzzle().indexOf(color[0]) == -1 || gameBoard.getPuzzle().indexOf(color[0]) > gameBoard.getPuzzle().indexOf('W')) {\r\n                        piecePreview = new Piece(color[0]);\r\n                        String state = gameBoard.toString();\r\n                        piecePreview.rotatePiece(state.charAt(state.indexOf(color[0])+1));\r\n                        Location loc = piecePreview.getCenter(state.substring(state.indexOf(color[0]), state.indexOf(color[0])+4));\r\n                        centerX[0] = loc.getSceneX();\r\n                        centerY[0] = loc.getSceneY();\r\n                        visualPiecePriview.setX(centerX[0]);\r\n                        visualPiecePriview.setY(centerY[0]);\r\n                        visualPiecePriview.setPiece(piecePreview);\r\n                        gameBoard.removePiece(color[0]);\r\n                        setBoardStars();\r\n                        startX[0] = mouseEvent.getSceneX() - visualPiecePriview.x;\r\n                        startY[0] = mouseEvent.getSceneY() - visualPiecePriview.y;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        blankBoard.setOnMouseDragged(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (gameBoard.getUnusedColor().contains(color[0])) {\r\n                    visualPiecePriview.setX(mouseEvent.getSceneX()-startX[0]);\r\n                    visualPiecePriview.setY(mouseEvent.getSceneY()-startY[0]);\r\n                    visualPiecePriview.setPiece(piecePreview);\r\n                }\r\n            }\r\n        });\r\n        blankBoard.setOnMouseReleased(new EventHandler<MouseEvent>() {\r\n            @Override\r\n            public void handle(MouseEvent mouseEvent) {\r\n                if (Math.abs(mouseEvent.getSceneX()-startX[0]-centerX[0]) < 0.5 * STAR_WIDTH && Math.abs(mouseEvent.getSceneY()-startY[0]-centerY[0]) < 0.5 * STAR_HEIGHT){\r\n                    // click\r\n                    if (Math.abs(mouseEvent.getSceneX()-startX[0]-centerX[0]) < 0.2 * STAR_WIDTH && Math.abs(mouseEvent.getSceneY()-startY[0]-centerY[0]) < 0.2 * STAR_HEIGHT){\r\n                        resetPiecePreview();\r\n                        setBoardStars();\r\n                    }\r\n                    //do nothing\r\n                }else {\r\n                    //place somewhere else\r\n                    // On board\r\n                    if (visualPiecePriview.x < 0)\r\n                        visualPiecePriview.setX(0);\r\n                    if (visualPiecePriview.x > BOARD_WIDTH)\r\n                        visualPiecePriview.setX(BOARD_WIDTH);\r\n                    if (visualPiecePriview.y < 0)\r\n                        visualPiecePriview.setY(0);\r\n                    if (visualPiecePriview.y > BOARD_WIDTH)\r\n                        visualPiecePriview.setY(BOARD_HEIGHT);\r\n                    // toLocation\r\n                    int x, y;\r\n                    x = -1;\r\n                    y = (int) Math.floor((visualPiecePriview.y - WHITE_EDGE - MARGIN) / STAR_HEIGHT);\r\n                    if (y == 0 || y == 2) {\r\n                        x = (int) ((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH);\r\n                    }\r\n                    if (y == 1 || y == 3) {\r\n                        x = (int) Math.floor((visualPiecePriview.x - WHITE_EDGE - MARGIN) / STAR_WIDTH - 0.5);\r\n                    }\r\n                    Location center = new Location(x, y);\r\n                    if (center.onBoard() && piecePreview != null && gameBoard.isPieceValid(piecePreview, center)) {\r\n                        hintPieceStr = \"\";\r\n                        gameBoard.placePiece(piecePreview, center);\r\n                        setBoardStars();\r\n                        resetPiecePreview();\r\n                    }\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // FIXME Task 8 (CR): Implement a basic playable IQ Stars game in JavaFX that only allows pieces to be placed in valid places\r\n\r\n    // FIXME Task 9 (D): Implement challenges (you may use the set of challenges in the Games class)\r\n\r\n    // FIXME Task 11 (HD): Implement hints (should become visible when the user presses '/' -- see gitlab issue for details)\r\n\r\n    // FIXME Task 12 (HD): Generate interesting challenges (each challenge must have exactly one solution)\r\n\r\n    @Override\r\n    public void start(Stage primaryStage) {\r\n        primaryStage.setTitle(\"IQ Stars\");\r\n        Scene scene = new Scene(root, BOARD_WIDTH, BOARD_HEIGHT);\r\n\r\n        // set blankboard:\r\n        root.getChildren().add(blankBoard);\r\n        initializeBlankBoard();\r\n\r\n        // set controlBoard: 4 buttons\r\n        root.getChildren().add(controlBoard);\r\n        initializeControlBorad();\r\n\r\n        // timer\r\n        setTimer();\r\n        root.getChildren().add(timer);\r\n\r\n        // help\r\n        setHelp();\r\n        root.getChildren().add(helpBoard);\r\n\r\n        // set pieceBoard: select piece here\r\n        root.getChildren().add(pieceBoard);\r\n        initializePieceBoard();\r\n\r\n        // keep pressing ? for hint, Q and E to rotate piece\r\n        scene.setOnKeyPressed(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                if (keyEvent.getCode() == KeyCode.SLASH) {\r\n                    showHint();\r\n                    keyEvent.consume();// when starting a new game with \"/\" pressed, the new game wouldl remove a puzzle piece\r\n                }\r\n                if (keyEvent.getCode() == KeyCode.Q)\r\n                    rotatePiece(5);\r\n                if (keyEvent.getCode() == KeyCode.E)\r\n                    rotatePiece(1);\r\n            }\r\n        });\r\n        scene.setOnKeyReleased(new EventHandler<KeyEvent>() {\r\n            @Override\r\n            public void handle(KeyEvent keyEvent) {\r\n                if (keyEvent.getCode() == KeyCode.SLASH){\r\n                    hideHint();\r\n                }\r\n            }\r\n        });\r\n\r\n        // let the piece movable\r\n        movePiece(visualPiecePriview);\r\n\r\n        removePiece();\r\n\r\n        // rotate piece with scroll\r\n        scene.setOnScroll(new EventHandler<ScrollEvent>() {\r\n            @Override\r\n            public void handle(ScrollEvent scrollEvent) {\r\n                if (scrollEvent.getDeltaY()>0)\r\n                    rotatePiece(5);\r\n                else\r\n                    rotatePiece(1);\r\n            }\r\n        });\r\n\r\n        primaryStage.setScene(scene);\r\n        primaryStage.show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/comp1110/ass2/gui/Board.java b/src/comp1110/ass2/gui/Board.java
--- a/src/comp1110/ass2/gui/Board.java	(revision e4d211b6872bb978bf935dfb5c03fa44ca15b61d)
+++ b/src/comp1110/ass2/gui/Board.java	(date 1632060078080)
@@ -32,7 +32,6 @@
 
 public class Board extends Application {
 
-
     private static final int BOARD_WIDTH = 933;
     private static final int BOARD_HEIGHT = 700;
     private static final int WHITE_EDGE = 10;
@@ -42,13 +41,12 @@
     private static final double MARGIN = 0.175 * STAR_WIDTH; //14
     private static final double RECTA_WIDTH = 2 * MARGIN + 7 * STAR_WIDTH; //588
     private static final double RECTA_HEIGHT = 2 * MARGIN + 4 * STAR_HEIGHT; //305.128
-    private static final Color BLACKBLUE = new Color(0.172, 0.172, 0.27, 1.0);
+    private static final Color BLACKBLUE = new Color(0.172, 0.172, 0.27, 1.0);// background
     private static final double PIECE_BOARD_HEIGHT = BOARD_HEIGHT - 3 * WHITE_EDGE - RECTA_HEIGHT;
     private static final int MARGIN_IN_PIECE_BOARD = 9;
     private static final double X_PIECE_PLACE = WHITE_EDGE + MARGIN_IN_PIECE_BOARD + 2;
     private static final double Y_PIECE_PLACE = 2 * WHITE_EDGE + RECTA_HEIGHT + MARGIN_IN_PIECE_BOARD + 2;
 
-
     private final Group root = new Group();
 
     private final Group blankBoard = new Group();
Index: src/comp1110/ass2/Puzzle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package comp1110.ass2;\r\n\r\nimport java.util.HashSet;\r\nimport java.util.Set;\r\n\r\n// this class is used to find(start at line 3784) and store new puzzle Strings\r\npublic class Puzzle {\r\n\t//381\r\n\tpublic static final String[] solutions = new String[]{\r\n\t\t\t\t\"r130o140y250g262b312i000p501W\",\r\n\t\t\t\t\"r101o460y352g000b020i250p121W\",\r\n\t\t\t\t\"r000o320y352g232b450i002p030W\",\r\n\t\t\t\t\"r151o401y541g540b230i000p212W\",\r\n\t\t\t\t\"r010o100y240g262b312i260p130W\",\r\n\t\t\t\t\"r031o121y400g262b040i010p202W\",\r\n\t\t\t\t\"r042o100y521g110b450i020p431W\",\r\n\t\t\t\t\"r030o401y250g262b321i000p311W\",\r\n\t\t\t\t\"r002o262y250g230b540i000p222W\",\r\n\t\t\t\t\"r101o331y040g000b420i013p151W\",\r\n\t\t\t\t\"r010o222y352g130b100i040p541W\",\r\n\t\t\t\t\"r101o232y040g262b230i000p231W\",\r\n\t\t\t\t\"r101o342y560g530b111i000p431W\",\r\n\t\t\t\t\"r001o302y531g530b260i000p242W\",\r\n\t\t\t\t\"r151o401y541g540b000i230p212W\",\r\n\t\t\t\t\"r002o431y000g530b260i111p242W\",\r\n\t\t\t\t\"r002o540y000g262b260i111p330W\",\r\n\t\t\t\t\"r242o151y040g130b221i000p401W\",\r\n\t\t\t\t\"r012o401y030g262b000i260p221W\",\r\n\t\t\t\t\"r252o302y400g531b010i040p222W\",\r\n\t\t\t\t\"r111o401y040g330b121i000p151W\",\r\n\t\t\t\t\"r010o222y250g262b100i231p030W\",\r\n\t\t\t\t\"r101o231y560g530b000i013p341W\",\r\n\t\t\t\t\"r151o401y040g120b130i023p000W\",\r\n\t\t\t\t\"r240o532y400g262b010i260p202W\",\r\n\t\t\t\t\"r101o232y040g262b000i230p231W\",\r\n\t\t\t\t\"r022o342y560g511b030i000p301W\",\r\n\t\t\t\t\"r111o401y250g262b531i000p530W\",\r\n\t\t\t\t\"r201o222y531g530b260i000p242W\",\r\n\t\t\t\t\"r010o342y531g030b450i100p202W\",\r\n\t\t\t\t\"r151o221y541g130b000i040p301W\",\r\n\t\t\t\t\"r011o151y200g020b312i040p141W\",\r\n\t\t\t\t\"r031o121y010g262b040i100p202W\",\r\n\t\t\t\t\"r030o100y250g010b322i211p242W\",\r\n\t\t\t\t\"r250o240y200g262b312i032p420W\",\r\n\t\t\t\t\"r252o242y400g531b010i040p202W\",\r\n\t\t\t\t\"r220o140y250g262b400i231p202W\",\r\n\t\t\t\t\"r002o300y341g262b040i010p421W\",\r\n\t\t\t\t\"r041o100y322g540b342i010p511W\",\r\n\t\t\t\t\"r002o460y000g530b342i111p531W\",\r\n\t\t\t\t\"r000o031y002g242b420i040p151W\",\r\n\t\t\t\t\"r252o260y322g011b100i010p440W\",\r\n\t\t\t\t\"r151o550y400g010b430i023p202W\",\r\n\t\t\t\t\"r101o011y040g330b322i000p151W\",\r\n\t\t\t\t\"r232o262y000g511b030i260p202W\",\r\n\t\t\t\t\"r151o401y430g120b332i040p000W\",\r\n\t\t\t\t\"r212o151y200g520b121i131p450W\",\r\n\t\t\t\t\"r041o010y400g130b342i040p202W\",\r\n\t\t\t\t\"r252o100y511g531b010i040p222W\",\r\n\t\t\t\t\"r031o512y200g520b450i033p121W\",\r\n\t\t\t\t\"r022o302y250g520b400i021p242W\",\r\n\t\t\t\t\"r201o222y250g262b531i000p530W\",\r\n\t\t\t\t\"r041o401y530g540b342i000p311W\",\r\n\t\t\t\t\"r002o001y040g330b121i000p151W\",\r\n\t\t\t\t\"r252o511y000g130b040i241p202W\",\r\n\t\t\t\t\"r032o151y322g240b100i010p450W\",\r\n\t\t\t\t\"r021o222y010g252b100i040p041W\",\r\n\t\t\t\t\"r120o302y250g262b400i231p030W\",\r\n\t\t\t\t\"r242o222y200g130b520i040p041W\",\r\n\t\t\t\t\"r041o342y200g540b312i121p420W\",\r\n\t\t\t\t\"r002o262y250g001b421i000p030W\",\r\n\t\t\t\t\"r101o460y352g000b250i020p121W\",\r\n\t\t\t\t\"r101o542y040g130b000i221p151W\",\r\n\t\t\t\t\"r031o460y200g530b312i033p320W\",\r\n\t\t\t\t\"r140o100y250g262b511i010p121W\",\r\n\t\t\t\t\"r211o302y000g252b130i040p041W\",\r\n\t\t\t\t\"r030o511y000g532b450i033p202W\",\r\n\t\t\t\t\"r121o100y511g262b260i010p440W\",\r\n\t\t\t\t\"r232o262y000g511b260i030p202W\",\r\n\t\t\t\t\"r012o401y030g011b260i000p242W\",\r\n\t\t\t\t\"r240o302y010g300b121i260p242W\",\r\n\t\t\t\t\"r002o001y250g262b531i000p530W\",\r\n\t\t\t\t\"r002o001y531g530b260i000p242W\",\r\n\t\t\t\t\"r151o011y040g020b400i023p202W\",\r\n\t\t\t\t\"r002o530y141g001b450i000p331W\",\r\n\t\t\t\t\"r002o542y040g130b001i000p151W\",\r\n\t\t\t\t\"r101o342y020g000b450i013p531W\",\r\n\t\t\t\t\"r230o241y250g262b312i000p501W\",\r\n\t\t\t\t\"r031o312y530g262b040i000p401W\",\r\n\t\t\t\t\"r020o302y250g262b400i111p140W\",\r\n\t\t\t\t\"r032o530y111g031b450i000p301W\",\r\n\t\t\t\t\"r231o530y250g262b312i000p501W\",\r\n\t\t\t\t\"r252o541y400g540b121i010p202W\",\r\n\t\t\t\t\"r252o541y010g540b121i100p202W\",\r\n\t\t\t\t\"r020o100y250g262b312i110p140W\",\r\n\t\t\t\t\"r101o031y530g242b000i040p151W\",\r\n\t\t\t\t\"r250o262y322g011b100i010p340W\",\r\n\t\t\t\t\"r002o430y000g540b541i111p151W\",\r\n\t\t\t\t\"r250o530y111g262b331i000p301W\",\r\n\t\t\t\t\"r030o302y250g311b400i120p242W\",\r\n\t\t\t\t\"r240o460y400g532b010i033p202W\",\r\n\t\t\t\t\"r151o012y040g321b000i130p301W\",\r\n\t\t\t\t\"r201o460y352g232b030i000p521W\",\r\n\t\t\t\t\"r242o011y322g540b100i010p041W\",\r\n\t\t\t\t\"r010o151y040g252b130i100p202W\",\r\n\t\t\t\t\"r041o430y111g540b342i000p301W\",\r\n\t\t\t\t\"r101o460y550g000b020i033p121W\",\r\n\t\t\t\t\"r002o322y040g230b331i000p151W\",\r\n\t\t\t\t\"r231o460y352g530b312i000p501W\",\r\n\t\t\t\t\"r121o302y400g262b260i010p440W\",\r\n\t\t\t\t\"r240o321y200g262b312i260p420W\",\r\n\t\t\t\t\"r030o100y250g110b120i013p242W\",\r\n\t\t\t\t\"r000o140y352g221b450i003p020W\",\r\n\t\t\t\t\"r030o100y511g532b450i033p010W\",\r\n\t\t\t\t\"r002o460y352g001b250i000p430W\",\r\n\t\t\t\t\"r021o030y250g262b312i000p501W\",\r\n\t\t\t\t\"r002o260y000g530b042i023p211W\",\r\n\t\t\t\t\"r120o302y352g130b400i040p541W\",\r\n\t\t\t\t\"r222o401y020g262b250i260p000W\",\r\n\t\t\t\t\"r020o000y250g262b301i003p140W\",\r\n\t\t\t\t\"r011o100y352g540b312i010p541W\",\r\n\t\t\t\t\"r222o100y040g262b010i211p231W\",\r\n\t\t\t\t\"r141o151y010g540b121i100p202W\",\r\n\t\t\t\t\"r010o302y531g300b260i030p242W\",\r\n\t\t\t\t\"r252o242y321g260b000i030p301W\",\r\n\t\t\t\t\"r101o111y342g031b450i000p430W\",\r\n\t\t\t\t\"r141o151y400g540b121i010p202W\",\r\n\t\t\t\t\"r030o022y250g501b312i000p242W\",\r\n\t\t\t\t\"r042o041y200g540b312i121p420W\",\r\n\t\t\t\t\"r242o501y530g540b312i000p041W\",\r\n\t\t\t\t\"r151o230y541g540b012i000p301W\",\r\n\t\t\t\t\"r212o501y040g330b121i000p151W\",\r\n\t\t\t\t\"r250o221y200g520b042i003p331W\",\r\n\t\t\t\t\"r211o302y000g130b541i040p151W\",\r\n\t\t\t\t\"r241o520y221g262b400i040p202W\",\r\n\t\t\t\t\"r101o550y351g000b020i033p121W\",\r\n\t\t\t\t\"r220o302y331g252b400i040p041W\",\r\n\t\t\t\t\"r101o540y560g000b420i013p341W\",\r\n\t\t\t\t\"r010o302y250g262b231i100p030W\",\r\n\t\t\t\t\"r242o100y210g232b530i040p041W\",\r\n\t\t\t\t\"r250o302y411g262b010i100p340W\",\r\n\t\t\t\t\"r012o321y030g262b260i000p401W\",\r\n\t\t\t\t\"r000o020y352g221b450i003p140W\",\r\n\t\t\t\t\"r010o100y352g231b450i003p030W\",\r\n\t\t\t\t\"r101o000y040g330b322i120p151W\",\r\n\t\t\t\t\"r250o100y521g110b042i020p331W\",\r\n\t\t\t\t\"r242o211y000g232b530i040p041W\",\r\n\t\t\t\t\"r250o232y000g262b211i230p340W\",\r\n\t\t\t\t\"r151o401y040g020b332i221p000W\",\r\n\t\t\t\t\"r101o522y130g252b000i040p041W\",\r\n\t\t\t\t\"r101o000y531g120b030i260p242W\",\r\n\t\t\t\t\"r002o332y000g330b411i040p041W\",\r\n\t\t\t\t\"r041o302y400g130b342i040p010W\",\r\n\t\t\t\t\"r000o341y002g020b040i033p121W\",\r\n\t\t\t\t\"r022o302y000g511b030i260p242W\",\r\n\t\t\t\t\"r220o262y200g512b260i013p440W\",\r\n\t\t\t\t\"r252o012y421g260b000i030p301W\",\r\n\t\t\t\t\"r252o100y521g110b040i241p020W\",\r\n\t\t\t\t\"r030o042y400g010b450i023p202W\",\r\n\t\t\t\t\"r212o460y200g020b440i033p011W\",\r\n\t\t\t\t\"r211o342y531g030b450i000p301W\",\r\n\t\t\t\t\"r201o460y322g530b342i000p531W\",\r\n\t\t\t\t\"r032o401y521g031b450i020p000W\",\r\n\t\t\t\t\"r101o111y531g530b260i000p242W\",\r\n\t\t\t\t\"r230o151y000g522b211i023p450W\",\r\n\t\t\t\t\"r030o010y400g532b450i033p202W\",\r\n\t\t\t\t\"r101o151y530g242b000i040p031W\",\r\n\t\t\t\t\"r212o250y200g520b121i260p242W\",\r\n\t\t\t\t\"r131o262y111g530b260i000p301W\",\r\n\t\t\t\t\"r041o100y511g130b342i040p010W\",\r\n\t\t\t\t\"r002o542y040g230b231i000p151W\",\r\n\t\t\t\t\"r020o000y352g232b301i040p541W\",\r\n\t\t\t\t\"r010o332y322g330b100i040p041W\",\r\n\t\t\t\t\"r002o260y000g530b042i111p331W\",\r\n\t\t\t\t\"r151o430y541g540b312i000p501W\",\r\n\t\t\t\t\"r151o010y541g130b100i040p111W\",\r\n\t\t\t\t\"r101o111y250g262b531i000p530W\",\r\n\t\t\t\t\"r240o302y560g300b342i010p011W\",\r\n\t\t\t\t\"r252o221y200g232b040i241p520W\",\r\n\t\t\t\t\"r221o501y250g262b312i000p030W\",\r\n\t\t\t\t\"r030o100y250g110b322i120p242W\",\r\n\t\t\t\t\"r041o420y200g540b312i033p330W\",\r\n\t\t\t\t\"r000o151y020g232b131i002p450W\",\r\n\t\t\t\t\"r211o151y200g232b131i020p450W\",\r\n\t\t\t\t\"r012o401y250g262b011i000p030W\",\r\n\t\t\t\t\"r101o000y352g120b450i231p030W\",\r\n\t\t\t\t\"r231o012y560g530b000i033p301W\",\r\n\t\t\t\t\"r101o250y560g000b342i020p121W\",\r\n\t\t\t\t\"r140o430y250g262b312i000p501W\",\r\n\t\t\t\t\"r010o022y040g330b100i003p151W\",\r\n\t\t\t\t\"r031o401y020g000b450i033p212W\",\r\n\t\t\t\t\"r101o332y521g330b000i040p041W\",\r\n\t\t\t\t\"r101o460y141g530b111i000p331W\",\r\n\t\t\t\t\"r151o550y111g321b430i000p301W\",\r\n\t\t\t\t\"r121o302y240g262b400i260p520W\",\r\n\t\t\t\t\"r242o232y000g540b211i230p041W\",\r\n\t\t\t\t\"r012o401y040g330b000i121p151W\",\r\n\t\t\t\t\"r000o550y032g221b020i003p151W\",\r\n\t\t\t\t\"r022o401y560g331b030i000p411W\",\r\n\t\t\t\t\"r151o100y541g540b511i010p121W\",\r\n\t\t\t\t\"r020o401y441g522b040i023p000W\",\r\n\t\t\t\t\"r250o000y020g231b042i023p301W\",\r\n\t\t\t\t\"r101o320y332g000b030i260p242W\",\r\n\t\t\t\t\"r201o540y322g262b260i000p330W\",\r\n\t\t\t\t\"r030o042y111g321b450i000p301W\",\r\n\t\t\t\t\"r241o262y010g540b121i100p202W\",\r\n\t\t\t\t\"r241o262y400g540b121i010p202W\",\r\n\t\t\t\t\"r022o511y560g331b030i000p301W\",\r\n\t\t\t\t\"r252o302y120g260b400i030p222W\",\r\n\t\t\t\t\"r010o140y352g130b450i100p202W\",\r\n\t\t\t\t\"r201o222y342g031b450i000p430W\",\r\n\t\t\t\t\"r252o100y511g130b040i241p010W\",\r\n\t\t\t\t\"r211o151y040g330b332i000p301W\",\r\n\t\t\t\t\"r031o401y530g262b040i000p311W\",\r\n\t\t\t\t\"r220o252y200g540b312i022p041W\",\r\n\t\t\t\t\"r201o542y040g232b530i000p151W\",\r\n\t\t\t\t\"r020o100y352g310b312i040p541W\",\r\n\t\t\t\t\"r030o312y250g262b321i000p401W\",\r\n\t\t\t\t\"r020o100y250g262b110i003p140W\",\r\n\t\t\t\t\"r101o262y250g000b020i241p121W\",\r\n\t\t\t\t\"r001o302y040g330b121i000p151W\",\r\n\t\t\t\t\"r140o302y352g300b450i010p011W\",\r\n\t\t\t\t\"r002o001y342g031b450i000p430W\",\r\n\t\t\t\t\"r101o041y352g540b111i000p330W\",\r\n\t\t\t\t\"r042o041y010g540b121i100p202W\",\r\n\t\t\t\t\"r101o000y531g120b260i030p242W\",\r\n\t\t\t\t\"r151o222y010g540b100i023p221W\",\r\n\t\t\t\t\"r031o151y200g321b312i040p420W\",\r\n\t\t\t\t\"r241o100y410g262b312i040p020W\",\r\n\t\t\t\t\"r222o401y250g262b021i020p000W\",\r\n\t\t\t\t\"r101o000y040g330b120i013p151W\",\r\n\t\t\t\t\"r250o501y530g262b312i000p340W\",\r\n\t\t\t\t\"r220o262y250g140b400i231p202W\",\r\n\t\t\t\t\"r201o030y352g232b450i000p521W\",\r\n\t\t\t\t\"r030o302y400g532b450i033p010W\",\r\n\t\t\t\t\"r212o501y250g262b531i000p530W\",\r\n\t\t\t\t\"r201o151y322g321b430i000p450W\",\r\n\t\t\t\t\"r011o550y200g262b312i020p231W\",\r\n\t\t\t\t\"r242o302y411g540b010i100p041W\",\r\n\t\t\t\t\"r020o302y040g311b400i032p151W\",\r\n\t\t\t\t\"r030o532y250g262b221i000p401W\",\r\n\t\t\t\t\"r031o100y322g262b040i010p511W\",\r\n\t\t\t\t\"r250o401y521g262b331i020p000W\",\r\n\t\t\t\t\"r101o320y332g000b260i030p242W\",\r\n\t\t\t\t\"r252o242y120g260b400i030p202W\",\r\n\t\t\t\t\"r041o312y530g540b342i000p401W\",\r\n\t\t\t\t\"r151o222y541g540b100i010p011W\",\r\n\t\t\t\t\"r041o342y400g540b121i010p202W\",\r\n\t\t\t\t\"r002o300y331g252b010i040p041W\",\r\n\t\t\t\t\"r101o232y352g540b230i000p541W\",\r\n\t\t\t\t\"r151o401y040g020b521i023p000W\",\r\n\t\t\t\t\"r101o262y040g000b420i013p231W\",\r\n\t\t\t\t\"r250o011y322g262b100i010p340W\",\r\n\t\t\t\t\"r241o302y221g262b400i040p420W\",\r\n\t\t\t\t\"r220o251y040g262b400i231p202W\",\r\n\t\t\t\t\"r010o262y250g140b100i003p130W\",\r\n\t\t\t\t\"r220o460y200g512b141i013p440W\",\r\n\t\t\t\t\"r120o332y200g330b312i040p041W\",\r\n\t\t\t\t\"r010o100y030g512b260i013p242W\",\r\n\t\t\t\t\"r151o012y430g321b000i040p301W\",\r\n\t\t\t\t\"r242o521y010g232b100i040p041W\",\r\n\t\t\t\t\"r031o300y002g262b040i010p121W\",\r\n\t\t\t\t\"r002o430y000g311b031i040p242W\",\r\n\t\t\t\t\"r041o321y200g540b312i033p420W\",\r\n\t\t\t\t\"r020o542y040g232b100i110p151W\",\r\n\t\t\t\t\"r211o020y200g232b541i040p151W\",\r\n\t\t\t\t\"r140o401y250g262b000i230p212W\",\r\n\t\t\t\t\"r121o100y511g540b541i010p151W\",\r\n\t\t\t\t\"r101o000y220g540b032i013p041W\",\r\n\t\t\t\t\"r121o302y010g262b260i100p440W\",\r\n\t\t\t\t\"r212o501y531g530b260i000p242W\",\r\n\t\t\t\t\"r252o541y200g540b312i121p420W\",\r\n\t\t\t\t\"r232o262y250g520b400i021p202W\",\r\n\t\t\t\t\"r201o430y322g540b541i000p151W\",\r\n\t\t\t\t\"r031o302y010g300b121i040p151W\",\r\n\t\t\t\t\"r010o030y250g262b531i100p202W\",\r\n\t\t\t\t\"r201o430y322g262b260i000p440W\",\r\n\t\t\t\t\"r101o430y040g262b111i000p231W\",\r\n\t\t\t\t\"r201o260y322g530b042i000p331W\",\r\n\t\t\t\t\"r151o441y200g540b312i121p420W\",\r\n\t\t\t\t\"r211o532y030g262b260i000p301W\",\r\n\t\t\t\t\"r121o302y400g540b541i010p151W\",\r\n\t\t\t\t\"r020o000y240g262b012i260p301W\",\r\n\t\t\t\t\"r101o232y352g540b000i230p541W\",\r\n\t\t\t\t\"r140o121y250g262b100i010p111W\",\r\n\t\t\t\t\"r252o302y231g300b040i010p011W\",\r\n\t\t\t\t\"r231o151y400g252b010i040p202W\",\r\n\t\t\t\t\"r000o151y002g242b420i040p031W\",\r\n\t\t\t\t\"r020o302y341g311b400i040p151W\",\r\n\t\t\t\t\"r121o302y010g540b541i100p151W\",\r\n\t\t\t\t\"r031o430y111g262b040i000p301W\",\r\n\t\t\t\t\"r242o151y040g501b312i000p130W\",\r\n\t\t\t\t\"r101o431y560g530b111i000p341W\",\r\n\t\t\t\t\"r131o460y111g530b141i000p301W\",\r\n\t\t\t\t\"r151o330y342g010b100i040p111W\",\r\n\t\t\t\t\"r151o441y010g540b121i100p202W\",\r\n\t\t\t\t\"r140o401y250g262b230i000p212W\",\r\n\t\t\t\t\"r041o342y010g540b121i100p202W\",\r\n\t\t\t\t\"r201o031y322g262b040i000p330W\",\r\n\t\t\t\t\"r101o550y020g000b331i013p151W\",\r\n\t\t\t\t\"r220o151y200g540b312i022p141W\",\r\n\t\t\t\t\"r211o140y352g130b450i000p301W\",\r\n\t\t\t\t\"r010o151y040g330b332i100p202W\",\r\n\t\t\t\t\"r041o121y010g540b342i100p202W\",\r\n\t\t\t\t\"r151o241y400g540b010i023p202W\",\r\n\t\t\t\t\"r151o441y400g540b121i010p202W\",\r\n\t\t\t\t\"r212o341y200g020b040i033p011W\",\r\n\t\t\t\t\"r002o031y000g262b040i111p330W\",\r\n\t\t\t\t\"r001o302y342g031b450i000p430W\",\r\n\t\t\t\t\"r241o310y322g262b100i040p020W\",\r\n\t\t\t\t\"r140o230y250g262b012i000p301W\",\r\n\t\t\t\t\"r250o401y521g262b020i032p000W\",\r\n\t\t\t\t\"r041o532y400g540b010i033p202W\",\r\n\t\t\t\t\"r002o262y000g311b250i260p430W\",\r\n\t\t\t\t\"r130o251y040g262b312i000p501W\",\r\n\t\t\t\t\"r010o532y030g262b260i100p202W\",\r\n\t\t\t\t\"r151o302y040g300b131i010p011W\",\r\n\t\t\t\t\"r151o401y040g120b332i130p000W\",\r\n\t\t\t\t\"r010o302y531g300b030i260p242W\",\r\n\t\t\t\t\"r201o222y040g330b121i000p151W\",\r\n\t\t\t\t\"r011o252y200g020b312i040p041W\",\r\n\t\t\t\t\"r041o300y002g540b342i010p121W\",\r\n\t\t\t\t\"r020o100y040g110b322i032p151W\",\r\n\t\t\t\t\"r252o330y321g242b040i000p401W\",\r\n\t\t\t\t\"r041o511y000g130b342i040p202W\",\r\n\t\t\t\t\"r211o302y000g330b332i040p041W\",\r\n\t\t\t\t\"r111o401y531g530b260i000p242W\",\r\n\t\t\t\t\"r141o151y200g540b312i121p420W\",\r\n\t\t\t\t\"r042o041y400g540b121i010p202W\",\r\n\t\t\t\t\"r012o260y030g321b042i000p401W\",\r\n\t\t\t\t\"r130o262y250g140b312i000p501W\",\r\n\t\t\t\t\"r230o312y352g241b450i000p401W\",\r\n\t\t\t\t\"r010o231y250g262b100i003p030W\",\r\n\t\t\t\t\"r101o262y250g000b020i013p221W\",\r\n\t\t\t\t\"r220o151y341g540b400i023p202W\",\r\n\t\t\t\t\"r022o302y000g511b260i030p242W\",\r\n\t\t\t\t\"r211o030y250g262b531i000p301W\",\r\n\t\t\t\t\"r042o221y200g520b450i003p431W\",\r\n\t\t\t\t\"r001o302y250g262b531i000p530W\",\r\n\t\t\t\t\"r220o512y200g540b032i013p041W\",\r\n\t\t\t\t\"r002o250y560g001b342i000p430W\",\r\n\t\t\t\t\"r020o100y341g110b322i040p151W\",\r\n\t\t\t\t\"r030o100y250g010b511i013p242W\",\r\n\t\t\t\t\"r041o221y200g232b342i040p520W\",\r\n\t\t\t\t\"r230o401y352g241b450i000p311W\",\r\n\t\t\t\t\"r101o430y352g540b111i000p541W\",\r\n\t\t\t\t\"r000o460y002g020b440i033p121W\",\r\n\t\t\t\t\"r220o031y200g512b040i013p242W\",\r\n\t\t\t\t\"r002o030y250g001b421i000p242W\",\r\n\t\t\t\t\"r101o230y341g540b322i000p151W\",\r\n\t\t\t\t\"r010o302y352g300b450i231p030W\",\r\n\t\t\t\t\"r111o401y342g031b450i000p430W\",\r\n\t\t\t\t\"r252o012y430g011b040i000p301W\",\r\n\t\t\t\t\"r042o401y332g521b450i020p000W\",\r\n\t\t\t\t\"r140o222y250g262b100i010p011W\",\r\n\t\t\t\t\"r242o020y410g232b100i040p041W\",\r\n\t\t\t\t\"r252o302y400g130b040i241p010W\",\r\n\t\t\t\t\"r151o310y040g020b332i100p202W\",\r\n\t\t\t\t\"r201o521y352g232b450i000p030W\",\r\n\t\t\t\t\"r021o151y040g252b100i010p111W\",\r\n\t\t\t\t\"r151o121y541g540b100i010p111W\",\r\n\t\t\t\t\"r041o100y521g110b342i040p020W\",\r\n\t\t\t\t\"r012o531y560g530b342i000p401W\",\r\n\t\t\t\t\"r252o010y400g130b040i241p202W\",\r\n\t\t\t\t\"r002o151y000g321b430i111p450W\",\r\n\t\t\t\t\"r002o262y000g311b031i040p330W\",\r\n\t\t\t\t\"r130o012y240g262b000i260p301W\",\r\n\t\t\t\t\"r101o111y040g330b121i000p151W\",\r\n\t\t\t\t\"r220o540y200g512b260i013p242W\",\r\n\t\t\t\t\"r222o401y352g511b450i000p030W\",\r\n\t\t\t\t\"r030o321y250g262b312i000p501W\",\r\n\t\t\t\t\"r250o401y230g120b042i023p000W\",\r\n\t\t\t\t\"r222o401y560g250b342i020p000W\",\r\n\t\t\t\t\"r211o151y040g252b130i000p301W\",\r\n\t\t\t\t\"r002o322y250g230b540i000p242W\",\r\n\t\t\t\t\"r201o431y322g530b260i000p242W\",\r\n\t\t\t\t\"r241o020y200g262b511i040p121W\",\r\n\t\t\t\t\"r222o100y352g540b010i211p541W\",\r\n\t\t\t\t\"r020o100y352g232b110i040p541W\",\r\n\t\t\t\t\"r010o251y040g262b100i003p130W\",\r\n\t\t\t\t\"r020o542y040g310b100i003p151W\",\r\n\t\t\t\t\"r010o140y250g262b100i003p130W\",\r\n\t\t\t\t\"r232o460y000g511b141i030p202W\",\r\n\t\t\t\t\"r212o501y342g031b450i000p430W\",\r\n\t\t\t\t\"r002o430y000g262b260i111p440W\",\r\n\t\t\t\t\"r240o420y200g262b312i260p330W\",\r\n\t\t\t\t\"r250o331y200g262b511i020p121W\",\r\n\t\t\t\t\"r151o302y541g130b000i040p201W\",\r\n\t\t\t\t\"r241o262y200g540b312i121p420W\",\r\n\t\t\t\t\"r011o100y040g262b312i010p231W\",\r\n\t\t\t\t\"r041o121y400g540b342i010p202W\",// this solution cannot create a 2 pieces puzzles\r\n\t};\r\n\t//32\r\n\tpublic static final String[] masters = new String[]{\r\n\t\t\t\"r221W\",\r\n\t\t\t\"y550W\",\r\n\t\t\t\"g240W\",\r\n\t\t\t\"o522W\",\r\n\t\t\t\"o520W\",\r\n\t\t\t\"y421W\",\r\n\t\t\t\"b011W\",\r\n\t\t\t\"y210W\",\r\n\t\t\t\"b001W\",\r\n\t\t\t\"g250W\",\r\n\t\t\t\"y441W\",\r\n\t\t\t\"o531W\",\r\n\t\t\t\"y231W\",\r\n\t\t\t\"y230W\",\r\n\t\t\t\"y351W\",\r\n\t\t\t\"p411W\",\r\n\t\t\t\"b021W\",\r\n\t\t\t\"y220W\",\r\n\t\t\t\"y130W\",\r\n\t\t\t\"p421W\",\r\n\t\t\t\"o211W\",\r\n\t\t\t\"y032W\",\r\n\t\t\t\"g521W\",\r\n\t\t\t\"p211W\",\r\n\t\t\t\"o240W\",\r\n\t\t\t\"p201W\",\r\n\t\t\t\"p320W\",\r\n\t\t\t\"i250W\",\r\n\t\t\t\"i131W\",\r\n\t\t\t\"b411W\",\r\n\t\t\t\"b520W\",\r\n\t\t\t\"b521W\"\r\n\t};\r\n\t//2308\r\n\tpublic static final String[] experts = new String[]{\r\n\t\t\t\"r101p331W\",\r\n\t\t\t\"r212o460W\",\r\n\t\t\t\"o330i000W\",\r\n\t\t\t\"y560p430W\",\r\n\t\t\t\"b530p151W\",\r\n\t\t\t\"o222g031W\",\r\n\t\t\t\"r212p151W\",\r\n\t\t\t\"y352p020W\",\r\n\t\t\t\"g030p202W\",\r\n\t\t\t\"b420p031W\",\r\n\t\t\t\"o100i032W\",\r\n\t\t\t\"r002o530W\",\r\n\t\t\t\"o260y030W\",\r\n\t\t\t\"y111g540W\",\r\n\t\t\t\"i022p041W\",\r\n\t\t\t\"r231y560W\",\r\n\t\t\t\"y430g321W\",\r\n\t\t\t\"o011i023W\",\r\n\t\t\t\"y341i010W\",\r\n\t\t\t\"r230p450W\",\r\n\t\t\t\"o022p242W\",\r\n\t\t\t\"r121b400W\",\r\n\t\t\t\"i033p301W\",\r\n\t\t\t\"y040g501W\",\r\n\t\t\t\"b400p541W\",\r\n\t\t\t\"r250o262W\",\r\n\t\t\t\"o531g530W\",\r\n\t\t\t\"o522y130W\",\r\n\t\t\t\"o460y002W\",\r\n\t\t\t\"g140b100W\",\r\n\t\t\t\"g252p301W\",\r\n\t\t\t\"y352p140W\",\r\n\t\t\t\"r240b342W\",\r\n\t\t\t\"y341i023W\",\r\n\t\t\t\"r000p020W\",\r\n\t\t\t\"o042y111W\",\r\n\t\t\t\"y130p041W\",\r\n\t\t\t\"b111p231W\",\r\n\t\t\t\"o401y342W\",\r\n\t\t\t\"o310b332W\",\r\n\t\t\t\"r010g512W\",\r\n\t\t\t\"g020i221W\",\r\n\t\t\t\"g520p202W\",\r\n\t\t\t\"o000b120W\",\r\n\t\t\t\"r000p140W\",\r\n\t\t\t\"o512i033W\",\r\n\t\t\t\"o540b420W\",\r\n\t\t\t\"o540y322W\",\r\n\t\t\t\"r250y230W\",\r\n\t\t\t\"y200b541W\",\r\n\t\t\t\"b521p000W\",\r\n\t\t\t\"r010o532W\",\r\n\t\t\t\"r221o501W\",\r\n\t\t\t\"r130b000W\",\r\n\t\t\t\"i121p151W\",\r\n\t\t\t\"y231i010W\",\r\n\t\t\t\"g140p202W\",\r\n\t\t\t\"g540b511W\",\r\n\t\t\t\"o222p530W\",\r\n\t\t\t\"y220i013W\",\r\n\t\t\t\"o300g252W\",\r\n\t\t\t\"y020i023W\",\r\n\t\t\t\"r041p511W\",\r\n\t\t\t\"o310p020W\",\r\n\t\t\t\"o251i003W\",\r\n\t\t\t\"o501p530W\",\r\n\t\t\t\"r101g130W\",\r\n\t\t\t\"r001y250W\",\r\n\t\t\t\"o262y040W\",\r\n\t\t\t\"o041i121W\",\r\n\t\t\t\"r222p030W\",\r\n\t\t\t\"o041p330W\",\r\n\t\t\t\"r001p151W\",\r\n\t\t\t\"r042p420W\",\r\n\t\t\t\"b020i003W\",\r\n\t\t\t\"o151b420W\",\r\n\t\t\t\"o262g230W\",\r\n\t\t\t\"g130i221W\",\r\n\t\t\t\"r101b331W\",\r\n\t\t\t\"g262i211W\",\r\n\t\t\t\"o140i231W\",\r\n\t\t\t\"o550b312W\",\r\n\t\t\t\"r031g000W\",\r\n\t\t\t\"o151i121W\",\r\n\t\t\t\"r141i010W\",\r\n\t\t\t\"y352b301W\",\r\n\t\t\t\"b260p401W\",\r\n\t\t\t\"g262b211W\",\r\n\t\t\t\"r240y560W\",\r\n\t\t\t\"r120y250W\",\r\n\t\t\t\"r242b010W\",\r\n\t\t\t\"b440p011W\",\r\n\t\t\t\"r230y250W\",\r\n\t\t\t\"r220o031W\",\r\n\t\t\t\"o151b211W\",\r\n\t\t\t\"g540p511W\",\r\n\t\t\t\"b131i002W\",\r\n\t\t\t\"o260g011W\",\r\n\t\t\t\"b000i130W\",\r\n\t\t\t\"i211p541W\",\r\n\t\t\t\"o262p222W\",\r\n\t\t\t\"o460i250W\",\r\n\t\t\t\"y020p531W\",\r\n\t\t\t\"b230p231W\",\r\n\t\t\t\"r212y040W\",\r\n\t\t\t\"g030i100W\",\r\n\t\t\t\"o031p242W\",\r\n\t\t\t\"o020p041W\",\r\n\t\t\t\"o320g232W\",\r\n\t\t\t\"g221p151W\",\r\n\t\t\t\"o012y240W\",\r\n\t\t\t\"y322b042W\",\r\n\t\t\t\"o011p041W\",\r\n\t\t\t\"r111y250W\",\r\n\t\t\t\"o302i241W\",\r\n\t\t\t\"r242y210W\",\r\n\t\t\t\"r211o030W\",\r\n\t\t\t\"y250g311W\",\r\n\t\t\t\"r002y141W\",\r\n\t\t\t\"b450i023W\",\r\n\t\t\t\"b211p041W\",\r\n\t\t\t\"r111g530W\",\r\n\t\t\t\"y010p221W\",\r\n\t\t\t\"b010p231W\",\r\n\t\t\t\"r221y250W\",\r\n\t\t\t\"r221b312W\",\r\n\t\t\t\"y352p301W\",\r\n\t\t\t\"y321i030W\",\r\n\t\t\t\"o550y351W\",\r\n\t\t\t\"i002p030W\",\r\n\t\t\t\"o430y250W\",\r\n\t\t\t\"g120b450W\",\r\n\t\t\t\"o041y010W\",\r\n\t\t\t\"r231o530W\",\r\n\t\t\t\"r111y531W\",\r\n\t\t\t\"r002y560W\",\r\n\t\t\t\"r101y550W\",\r\n\t\t\t\"g321b450W\",\r\n\t\t\t\"b130p301W\",\r\n\t\t\t\"o520i040W\",\r\n\t\t\t\"i100p440W\",\r\n\t\t\t\"y200p331W\",\r\n\t\t\t\"b450i010W\",\r\n\t\t\t\"o332b411W\",\r\n\t\t\t\"r242i010W\",\r\n\t\t\t\"i020p450W\",\r\n\t\t\t\"r022g520W\",\r\n\t\t\t\"r041y521W\",\r\n\t\t\t\"r151o330W\",\r\n\t\t\t\"b040p000W\",\r\n\t\t\t\"y032p151W\",\r\n\t\t\t\"y511p440W\",\r\n\t\t\t\"r120y352W\",\r\n\t\t\t\"o550g262W\",\r\n\t\t\t\"o511g532W\",\r\n\t\t\t\"o230y541W\",\r\n\t\t\t\"r001y531W\",\r\n\t\t\t\"o011g330W\",\r\n\t\t\t\"g530p320W\",\r\n\t\t\t\"g010b450W\",\r\n\t\t\t\"r212y250W\",\r\n\t\t\t\"o000i030W\",\r\n\t\t\t\"i111p450W\",\r\n\t\t\t\"r201o151W\",\r\n\t\t\t\"o312b342W\",\r\n\t\t\t\"o151g130W\",\r\n\t\t\t\"y221p202W\",\r\n\t\t\t\"y342p111W\",\r\n\t\t\t\"r002p030W\",\r\n\t\t\t\"r222y560W\",\r\n\t\t\t\"r002b430W\",\r\n\t\t\t\"r012b042W\",\r\n\t\t\t\"g512b040W\",\r\n\t\t\t\"o042i000W\",\r\n\t\t\t\"r201o031W\",\r\n\t\t\t\"r241o302W\",\r\n\t\t\t\"o541b312W\",\r\n\t\t\t\"o001p430W\",\r\n\t\t\t\"o300i040W\",\r\n\t\t\t\"o501p041W\",\r\n\t\t\t\"r230b211W\",\r\n\t\t\t\"r041o312W\",\r\n\t\t\t\"y352b230W\",\r\n\t\t\t\"o000p030W\",\r\n\t\t\t\"o262b031W\",\r\n\t\t\t\"r032o151W\",\r\n\t\t\t\"r151o121W\",\r\n\t\t\t\"b421p030W\",\r\n\t\t\t\"i030p222W\",\r\n\t\t\t\"r002o250W\",\r\n\t\t\t\"r011y040W\",\r\n\t\t\t\"o540p242W\",\r\n\t\t\t\"o111p430W\",\r\n\t\t\t\"o011b322W\",\r\n\t\t\t\"g000b260W\",\r\n\t\t\t\"o460b010W\",\r\n\t\t\t\"y230b042W\",\r\n\t\t\t\"y352b110W\",\r\n\t\t\t\"r151o241W\",\r\n\t\t\t\"i013p531W\",\r\n\t\t\t\"r010o251W\",\r\n\t\t\t\"r220b141W\",\r\n\t\t\t\"b021i020W\",\r\n\t\t\t\"r021p501W\",\r\n\t\t\t\"y352i230W\",\r\n\t\t\t\"o430p242W\",\r\n\t\t\t\"b211p340W\",\r\n\t\t\t\"o430y352W\",\r\n\t\t\t\"y231b040W\",\r\n\t\t\t\"o140g221W\",\r\n\t\t\t\"b000p201W\",\r\n\t\t\t\"r201y342W\",\r\n\t\t\t\"r250y020W\",\r\n\t\t\t\"o011p202W\",\r\n\t\t\t\"y040i230W\",\r\n\t\t\t\"r252y000W\",\r\n\t\t\t\"y250i111W\",\r\n\t\t\t\"o010y541W\",\r\n\t\t\t\"y040i110W\",\r\n\t\t\t\"g000b331W\",\r\n\t\t\t\"y541b312W\",\r\n\t\t\t\"o222i023W\",\r\n\t\t\t\"o242g531W\",\r\n\t\t\t\"o550y200W\",\r\n\t\t\t\"r211i020W\",\r\n\t\t\t\"o041b312W\",\r\n\t\t\t\"y560g300W\",\r\n\t\t\t\"b131i020W\",\r\n\t\t\t\"y341b040W\",\r\n\t\t\t\"r121p520W\",\r\n\t\t\t\"b250p121W\",\r\n\t\t\t\"y040b230W\",\r\n\t\t\t\"r120g130W\",\r\n\t\t\t\"o010b100W\",\r\n\t\t\t\"o242y400W\",\r\n\t\t\t\"o022i003W\",\r\n\t\t\t\"r020b012W\",\r\n\t\t\t\"g001b342W\",\r\n\t\t\t\"o231b100W\",\r\n\t\t\t\"y250b231W\",\r\n\t\t\t\"y332g521W\",\r\n\t\t\t\"r012b011W\",\r\n\t\t\t\"r042o221W\",\r\n\t\t\t\"g540p141W\",\r\n\t\t\t\"r111b450W\",\r\n\t\t\t\"g130b400W\",\r\n\t\t\t\"r001b121W\",\r\n\t\t\t\"g020b400W\",\r\n\t\t\t\"b031p330W\",\r\n\t\t\t\"r001b450W\",\r\n\t\t\t\"o241y400W\",\r\n\t\t\t\"r111b121W\",\r\n\t\t\t\"y541b012W\",\r\n\t\t\t\"r201o540W\",\r\n\t\t\t\"y240p130W\",\r\n\t\t\t\"b040i013W\",\r\n\t\t\t\"y322b430W\",\r\n\t\t\t\"y250p111W\",\r\n\t\t\t\"o441y200W\",\r\n\t\t\t\"r101y341W\",\r\n\t\t\t\"o242p301W\",\r\n\t\t\t\"y020b250W\",\r\n\t\t\t\"o000b030W\",\r\n\t\t\t\"o550y111W\",\r\n\t\t\t\"g130b520W\",\r\n\t\t\t\"r231b000W\",\r\n\t\t\t\"o320b260W\",\r\n\t\t\t\"o041y352W\",\r\n\t\t\t\"r030b400W\",\r\n\t\t\t\"r012g330W\",\r\n\t\t\t\"o550p121W\",\r\n\t\t\t\"g311i260W\",\r\n\t\t\t\"r211b260W\",\r\n\t\t\t\"o320y352W\",\r\n\t\t\t\"b332p301W\",\r\n\t\t\t\"o151y010W\",\r\n\t\t\t\"g140p501W\",\r\n\t\t\t\"o331y200W\",\r\n\t\t\t\"o342b111W\",\r\n\t\t\t\"g310i040W\",\r\n\t\t\t\"y511b040W\",\r\n\t\t\t\"r221g262W\",\r\n\t\t\t\"b540p222W\",\r\n\t\t\t\"b541i100W\",\r\n\t\t\t\"r001g262W\",\r\n\t\t\t\"r111g262W\",\r\n\t\t\t\"o501g031W\",\r\n\t\t\t\"g110p331W\",\r\n\t\t\t\"y200g130W\",\r\n\t\t\t\"r030o022W\",\r\n\t\t\t\"y342i040W\",\r\n\t\t\t\"o000b450W\",\r\n\t\t\t\"r031y020W\",\r\n\t\t\t\"b342p020W\",\r\n\t\t\t\"r031o302W\",\r\n\t\t\t\"b312p340W\",\r\n\t\t\t\"y550p121W\",\r\n\t\t\t\"o012i040W\",\r\n\t\t\t\"y040b331W\",\r\n\t\t\t\"r000o550W\",\r\n\t\t\t\"r031p320W\",\r\n\t\t\t\"o342g000W\",\r\n\t\t\t\"b531p202W\",\r\n\t\t\t\"y560g511W\",\r\n\t\t\t\"y130i040W\",\r\n\t\t\t\"o100y410W\",\r\n\t\t\t\"r220p141W\",\r\n\t\t\t\"o511p301W\",\r\n\t\t\t\"o262p430W\",\r\n\t\t\t\"y560p431W\",\r\n\t\t\t\"o100g531W\",\r\n\t\t\t\"b400p420W\",\r\n\t\t\t\"r211p450W\",\r\n\t\t\t\"o260p440W\",\r\n\t\t\t\"y000b430W\",\r\n\t\t\t\"r041p301W\",\r\n\t\t\t\"o000y250W\",\r\n\t\t\t\"g262b301W\",\r\n\t\t\t\"r000o341W\",\r\n\t\t\t\"o532p401W\",\r\n\t\t\t\"y200g321W\",\r\n\t\t\t\"r130g140W\",\r\n\t\t\t\"y400p440W\",\r\n\t\t\t\"r031i100W\",\r\n\t\t\t\"o401b321W\",\r\n\t\t\t\"r011g540W\",\r\n\t\t\t\"r212o341W\",\r\n\t\t\t\"r101i241W\",\r\n\t\t\t\"r240p330W\",\r\n\t\t\t\"i010p421W\",\r\n\t\t\t\"i000p440W\",\r\n\t\t\t\"o111g330W\",\r\n\t\t\t\"o241b010W\",\r\n\t\t\t\"g330i003W\",\r\n\t\t\t\"r222y040W\",\r\n\t\t\t\"g020i100W\",\r\n\t\t\t\"o302p420W\",\r\n\t\t\t\"o011p340W\",\r\n\t\t\t\"y231p011W\",\r\n\t\t\t\"r211y250W\",\r\n\t\t\t\"r240b121W\",\r\n\t\t\t\"o151p401W\",\r\n\t\t\t\"r032i020W\",\r\n\t\t\t\"g540i111W\",\r\n\t\t\t\"o541i121W\",\r\n\t\t\t\"r211y531W\",\r\n\t\t\t\"r250g110W\",\r\n\t\t\t\"i010p541W\",\r\n\t\t\t\"r042i121W\",\r\n\t\t\t\"o100i033W\",\r\n\t\t\t\"g300b040W\",\r\n\t\t\t\"y000p430W\",\r\n\t\t\t\"r212y531W\",\r\n\t\t\t\"r231o460W\",\r\n\t\t\t\"o332b100W\",\r\n\t\t\t\"y430p000W\",\r\n\t\t\t\"b511i020W\",\r\n\t\t\t\"i230p541W\",\r\n\t\t\t\"o011g540W\",\r\n\t\t\t\"r252o260W\",\r\n\t\t\t\"r222g511W\",\r\n\t\t\t\"o460y141W\",\r\n\t\t\t\"i260p221W\",\r\n\t\t\t\"r212g530W\",\r\n\t\t\t\"g330b312W\",\r\n\t\t\t\"i211p242W\",\r\n\t\t\t\"r030o511W\",\r\n\t\t\t\"y200g530W\",\r\n\t\t\t\"r022o511W\",\r\n\t\t\t\"o300b010W\",\r\n\t\t\t\"o300y341W\",\r\n\t\t\t\"o460p501W\",\r\n\t\t\t\"r240o321W\",\r\n\t\t\t\"o262i121W\",\r\n\t\t\t\"r021p041W\",\r\n\t\t\t\"o100p222W\",\r\n\t\t\t\"r242o302W\",\r\n\t\t\t\"g530i023W\",\r\n\t\t\t\"r031y002W\",\r\n\t\t\t\"i033p320W\",\r\n\t\t\t\"o542g230W\",\r\n\t\t\t\"r252y521W\",\r\n\t\t\t\"o262p221W\",\r\n\t\t\t\"o000g231W\",\r\n\t\t\t\"r032y521W\",\r\n\t\t\t\"g252p111W\",\r\n\t\t\t\"o100b120W\",\r\n\t\t\t\"r232b030W\",\r\n\t\t\t\"r250i100W\",\r\n\t\t\t\"g262p421W\",\r\n\t\t\t\"y560p000W\",\r\n\t\t\t\"o531b342W\",\r\n\t\t\t\"y352g530W\",\r\n\t\t\t\"g120b030W\",\r\n\t\t\t\"g231b042W\",\r\n\t\t\t\"r220o252W\",\r\n\t\t\t\"y400g252W\",\r\n\t\t\t\"i260p430W\",\r\n\t\t\t\"r032g240W\",\r\n\t\t\t\"r022i021W\",\r\n\t\t\t\"o320i002W\",\r\n\t\t\t\"o111b531W\",\r\n\t\t\t\"y030p301W\",\r\n\t\t\t\"r042y400W\",\r\n\t\t\t\"y331b010W\",\r\n\t\t\t\"y120p222W\",\r\n\t\t\t\"y441i023W\",\r\n\t\t\t\"b400i111W\",\r\n\t\t\t\"g120p030W\",\r\n\t\t\t\"r012o321W\",\r\n\t\t\t\"y000i241W\",\r\n\t\t\t\"y111g031W\",\r\n\t\t\t\"o511i040W\",\r\n\t\t\t\"o310y322W\",\r\n\t\t\t\"r201p331W\",\r\n\t\t\t\"o031y322W\",\r\n\t\t\t\"y141g530W\",\r\n\t\t\t\"r151p201W\",\r\n\t\t\t\"o550g321W\",\r\n\t\t\t\"o520y221W\",\r\n\t\t\t\"g310p541W\",\r\n\t\t\t\"g260p202W\",\r\n\t\t\t\"o312b450W\",\r\n\t\t\t\"r250o302W\",\r\n\t\t\t\"o100p431W\",\r\n\t\t\t\"r101o011W\",\r\n\t\t\t\"o140p301W\",\r\n\t\t\t\"y441g522W\",\r\n\t\t\t\"o331i013W\",\r\n\t\t\t\"g520i131W\",\r\n\t\t\t\"o312y250W\",\r\n\t\t\t\"o550g010W\",\r\n\t\t\t\"i221p000W\",\r\n\t\t\t\"g001p030W\",\r\n\t\t\t\"i003p431W\",\r\n\t\t\t\"i130p000W\",\r\n\t\t\t\"i040p520W\",\r\n\t\t\t\"r252p440W\",\r\n\t\t\t\"r111b260W\",\r\n\t\t\t\"o221b000W\",\r\n\t\t\t\"o302g530W\",\r\n\t\t\t\"y410p020W\",\r\n\t\t\t\"o302i120W\",\r\n\t\t\t\"y511b010W\",\r\n\t\t\t\"g140p130W\",\r\n\t\t\t\"g311i032W\",\r\n\t\t\t\"g000i241W\",\r\n\t\t\t\"o550b331W\",\r\n\t\t\t\"r001y040W\",\r\n\t\t\t\"o460p011W\",\r\n\t\t\t\"r120b312W\",\r\n\t\t\t\"o531p401W\",\r\n\t\t\t\"r242p130W\",\r\n\t\t\t\"g540b211W\",\r\n\t\t\t\"i111p242W\",\r\n\t\t\t\"g011p340W\",\r\n\t\t\t\"r201o521W\",\r\n\t\t\t\"b400p140W\",\r\n\t\t\t\"o262b030W\",\r\n\t\t\t\"r241b100W\",\r\n\t\t\t\"o221b342W\",\r\n\t\t\t\"o330g010W\",\r\n\t\t\t\"y421i030W\",\r\n\t\t\t\"b121i040W\",\r\n\t\t\t\"r140b012W\",\r\n\t\t\t\"r041o300W\",\r\n\t\t\t\"i111p331W\",\r\n\t\t\t\"r151b130W\",\r\n\t\t\t\"o441i100W\",\r\n\t\t\t\"y030g011W\",\r\n\t\t\t\"r222b342W\",\r\n\t\t\t\"y541p011W\",\r\n\t\t\t\"o300p041W\",\r\n\t\t\t\"g321p420W\",\r\n\t\t\t\"i260p520W\",\r\n\t\t\t\"o401b250W\",\r\n\t\t\t\"r151b010W\",\r\n\t\t\t\"o401b130W\",\r\n\t\t\t\"g130b221W\",\r\n\t\t\t\"o541y200W\",\r\n\t\t\t\"g242b040W\",\r\n\t\t\t\"r002y352W\",\r\n\t\t\t\"b342p301W\",\r\n\t\t\t\"y321i000W\",\r\n\t\t\t\"o221p431W\",\r\n\t\t\t\"r000b440W\",\r\n\t\t\t\"y531p301W\",\r\n\t\t\t\"o250g000W\",\r\n\t\t\t\"y040g321W\",\r\n\t\t\t\"r212b450W\",\r\n\t\t\t\"o341y002W\",\r\n\t\t\t\"r151i230W\",\r\n\t\t\t\"o431y322W\",\r\n\t\t\t\"r201b541W\",\r\n\t\t\t\"o100p030W\",\r\n\t\t\t\"o312y352W\",\r\n\t\t\t\"o550i013W\",\r\n\t\t\t\"o262i241W\",\r\n\t\t\t\"y351b020W\",\r\n\t\t\t\"i221p151W\",\r\n\t\t\t\"o011g020W\",\r\n\t\t\t\"g530b141W\",\r\n\t\t\t\"g110b450W\",\r\n\t\t\t\"y250b110W\",\r\n\t\t\t\"o262y111W\",\r\n\t\t\t\"r211o342W\",\r\n\t\t\t\"r010p541W\",\r\n\t\t\t\"y250b230W\",\r\n\t\t\t\"r130y040W\",\r\n\t\t\t\"r010b332W\",\r\n\t\t\t\"i110p140W\",\r\n\t\t\t\"o401p530W\",\r\n\t\t\t\"r130o251W\",\r\n\t\t\t\"y200b032W\",\r\n\t\t\t\"r012p221W\",\r\n\t\t\t\"g000p212W\",\r\n\t\t\t\"o460i111W\",\r\n\t\t\t\"b211i023W\",\r\n\t\t\t\"r120g262W\",\r\n\t\t\t\"g010i013W\",\r\n\t\t\t\"b012i260W\",\r\n\t\t\t\"y040i231W\",\r\n\t\t\t\"y250g501W\",\r\n\t\t\t\"i111p140W\",\r\n\t\t\t\"y002g540W\",\r\n\t\t\t\"r212g262W\",\r\n\t\t\t\"r042o100W\",\r\n\t\t\t\"y430b000W\",\r\n\t\t\t\"g020b521W\",\r\n\t\t\t\"i021p202W\",\r\n\t\t\t\"r220g252W\",\r\n\t\t\t\"o550i000W\",\r\n\t\t\t\"o250g520W\",\r\n\t\t\t\"o222g252W\",\r\n\t\t\t\"o540y560W\",\r\n\t\t\t\"r140g300W\",\r\n\t\t\t\"r212p450W\",\r\n\t\t\t\"r002p222W\",\r\n\t\t\t\"o532y250W\",\r\n\t\t\t\"b031p242W\",\r\n\t\t\t\"o320p030W\",\r\n\t\t\t\"y220g540W\",\r\n\t\t\t\"o100g532W\",\r\n\t\t\t\"y141b450W\",\r\n\t\t\t\"b530i000W\",\r\n\t\t\t\"g262b020W\",\r\n\t\t\t\"r140p501W\",\r\n\t\t\t\"r111p242W\",\r\n\t\t\t\"y322g330W\",\r\n\t\t\t\"i020p331W\",\r\n\t\t\t\"r041o420W\",\r\n\t\t\t\"y352b020W\",\r\n\t\t\t\"o012g011W\",\r\n\t\t\t\"o401g000W\",\r\n\t\t\t\"o520p202W\",\r\n\t\t\t\"r031g520W\",\r\n\t\t\t\"r041y000W\",\r\n\t\t\t\"r101y342W\",\r\n\t\t\t\"o530y250W\",\r\n\t\t\t\"o020b100W\",\r\n\t\t\t\"g230b331W\",\r\n\t\t\t\"y250b021W\",\r\n\t\t\t\"o262p030W\",\r\n\t\t\t\"o241p202W\",\r\n\t\t\t\"r022p411W\",\r\n\t\t\t\"o460g001W\",\r\n\t\t\t\"y322p531W\",\r\n\t\t\t\"i013p221W\",\r\n\t\t\t\"o230g262W\",\r\n\t\t\t\"g001p331W\",\r\n\t\t\t\"r002i023W\",\r\n\t\t\t\"y230g120W\",\r\n\t\t\t\"b020i241W\",\r\n\t\t\t\"g262p511W\",\r\n\t\t\t\"i130p301W\",\r\n\t\t\t\"o460y111W\",\r\n\t\t\t\"o441b312W\",\r\n\t\t\t\"o550i020W\",\r\n\t\t\t\"r220b040W\",\r\n\t\t\t\"y032i003W\",\r\n\t\t\t\"i000p450W\",\r\n\t\t\t\"r252g232W\",\r\n\t\t\t\"r201g321W\",\r\n\t\t\t\"r031p212W\",\r\n\t\t\t\"o042p202W\",\r\n\t\t\t\"o302b332W\",\r\n\t\t\t\"g221b020W\",\r\n\t\t\t\"r222b250W\",\r\n\t\t\t\"r041y002W\",\r\n\t\t\t\"o020b511W\",\r\n\t\t\t\"o151b400W\",\r\n\t\t\t\"o222p430W\",\r\n\t\t\t\"b430i023W\",\r\n\t\t\t\"y521b040W\",\r\n\t\t\t\"i023p211W\",\r\n\t\t\t\"o512i013W\",\r\n\t\t\t\"r031o312W\",\r\n\t\t\t\"b020i032W\",\r\n\t\t\t\"g522b040W\",\r\n\t\t\t\"y441b040W\",\r\n\t\t\t\"r041o511W\",\r\n\t\t\t\"o331g000W\",\r\n\t\t\t\"r002o332W\",\r\n\t\t\t\"r250g231W\",\r\n\t\t\t\"g511p030W\",\r\n\t\t\t\"o221b040W\",\r\n\t\t\t\"b250i000W\",\r\n\t\t\t\"r010g140W\",\r\n\t\t\t\"r002b001W\",\r\n\t\t\t\"r012o531W\",\r\n\t\t\t\"r101i120W\",\r\n\t\t\t\"o100y030W\",\r\n\t\t\t\"o521i040W\",\r\n\t\t\t\"o401b531W\",\r\n\t\t\t\"y000g522W\",\r\n\t\t\t\"r140y352W\",\r\n\t\t\t\"r042p000W\",\r\n\t\t\t\"g231i023W\",\r\n\t\t\t\"b111p331W\",\r\n\t\t\t\"r031o151W\",\r\n\t\t\t\"g130b001W\",\r\n\t\t\t\"i241p121W\",\r\n\t\t\t\"o111p151W\",\r\n\t\t\t\"g300i030W\",\r\n\t\t\t\"r101o522W\",\r\n\t\t\t\"g300b030W\",\r\n\t\t\t\"o330b100W\",\r\n\t\t\t\"o302p430W\",\r\n\t\t\t\"y530p031W\",\r\n\t\t\t\"r031y400W\",\r\n\t\t\t\"r022o401W\",\r\n\t\t\t\"y040p401W\",\r\n\t\t\t\"g232i110W\",\r\n\t\t\t\"r012y560W\",\r\n\t\t\t\"o542b530W\",\r\n\t\t\t\"r041o302W\",\r\n\t\t\t\"g250p000W\",\r\n\t\t\t\"o022p151W\",\r\n\t\t\t\"o302g260W\",\r\n\t\t\t\"y352g231W\",\r\n\t\t\t\"o031y530W\",\r\n\t\t\t\"y421p301W\",\r\n\t\t\t\"y560p121W\",\r\n\t\t\t\"o521y352W\",\r\n\t\t\t\"r201p450W\",\r\n\t\t\t\"b010p340W\",\r\n\t\t\t\"g521i020W\",\r\n\t\t\t\"r021i040W\",\r\n\t\t\t\"g230p242W\",\r\n\t\t\t\"b120p242W\",\r\n\t\t\t\"r022i260W\",\r\n\t\t\t\"y240p520W\",\r\n\t\t\t\"o302y541W\",\r\n\t\t\t\"g300b342W\",\r\n\t\t\t\"o111y040W\",\r\n\t\t\t\"r141y400W\",\r\n\t\t\t\"o550y020W\",\r\n\t\t\t\"g520p431W\",\r\n\t\t\t\"o230p151W\",\r\n\t\t\t\"g522p000W\",\r\n\t\t\t\"r010i030W\",\r\n\t\t\t\"r220o140W\",\r\n\t\t\t\"y030p202W\",\r\n\t\t\t\"g120b042W\",\r\n\t\t\t\"r252p420W\",\r\n\t\t\t\"y352p401W\",\r\n\t\t\t\"r032i010W\",\r\n\t\t\t\"r232g520W\",\r\n\t\t\t\"r240p011W\",\r\n\t\t\t\"y530p151W\",\r\n\t\t\t\"y322p151W\",\r\n\t\t\t\"o041y400W\",\r\n\t\t\t\"y000i033W\",\r\n\t\t\t\"b141p301W\",\r\n\t\t\t\"y400b430W\",\r\n\t\t\t\"o000g232W\",\r\n\t\t\t\"g140i231W\",\r\n\t\t\t\"o530g031W\",\r\n\t\t\t\"r231o012W\",\r\n\t\t\t\"o230y250W\",\r\n\t\t\t\"r101p431W\",\r\n\t\t\t\"y341g110W\",\r\n\t\t\t\"r252y322W\",\r\n\t\t\t\"g511b141W\",\r\n\t\t\t\"b450p011W\",\r\n\t\t\t\"r252i121W\",\r\n\t\t\t\"o532i100W\",\r\n\t\t\t\"r030o532W\",\r\n\t\t\t\"i260p000W\",\r\n\t\t\t\"o262i100W\",\r\n\t\t\t\"r011p041W\",\r\n\t\t\t\"o310g262W\",\r\n\t\t\t\"o460i030W\",\r\n\t\t\t\"o001y040W\",\r\n\t\t\t\"y020p212W\",\r\n\t\t\t\"o460g511W\",\r\n\t\t\t\"y441p000W\",\r\n\t\t\t\"r201y531W\",\r\n\t\t\t\"y000p340W\",\r\n\t\t\t\"r222y250W\",\r\n\t\t\t\"r250b010W\",\r\n\t\t\t\"o262p420W\",\r\n\t\t\t\"o252g020W\",\r\n\t\t\t\"b331i020W\",\r\n\t\t\t\"o000b322W\",\r\n\t\t\t\"y550b020W\",\r\n\t\t\t\"r012p030W\",\r\n\t\t\t\"o030p242W\",\r\n\t\t\t\"g240i010W\",\r\n\t\t\t\"r000o460W\",\r\n\t\t\t\"g232b030W\",\r\n\t\t\t\"o330g242W\",\r\n\t\t\t\"r250p121W\",\r\n\t\t\t\"g331p411W\",\r\n\t\t\t\"y200p320W\",\r\n\t\t\t\"r042g110W\",\r\n\t\t\t\"g262i110W\",\r\n\t\t\t\"o241p501W\",\r\n\t\t\t\"i120p151W\",\r\n\t\t\t\"o300g540W\",\r\n\t\t\t\"o260p401W\",\r\n\t\t\t\"o550p301W\",\r\n\t\t\t\"o001g031W\",\r\n\t\t\t\"g031p301W\",\r\n\t\t\t\"o001p530W\",\r\n\t\t\t\"o342g530W\",\r\n\t\t\t\"g530p211W\",\r\n\t\t\t\"r151g300W\",\r\n\t\t\t\"g000p231W\",\r\n\t\t\t\"r151o221W\",\r\n\t\t\t\"r232b400W\",\r\n\t\t\t\"y411g262W\",\r\n\t\t\t\"r002y331W\",\r\n\t\t\t\"y332b030W\",\r\n\t\t\t\"y341p421W\",\r\n\t\t\t\"o401b011W\",\r\n\t\t\t\"r021g262W\",\r\n\t\t\t\"r020i260W\",\r\n\t\t\t\"r130i260W\",\r\n\t\t\t\"o031i111W\",\r\n\t\t\t\"y200b342W\",\r\n\t\t\t\"y541p501W\",\r\n\t\t\t\"o542b231W\",\r\n\t\t\t\"o222p030W\",\r\n\t\t\t\"r252b100W\",\r\n\t\t\t\"o030g232W\",\r\n\t\t\t\"r221p030W\",\r\n\t\t\t\"r242o232W\",\r\n\t\t\t\"r250o331W\",\r\n\t\t\t\"g130p041W\",\r\n\t\t\t\"i032p420W\",\r\n\t\t\t\"o001b450W\",\r\n\t\t\t\"o401b042W\",\r\n\t\t\t\"o401g530W\",\r\n\t\t\t\"o550i003W\",\r\n\t\t\t\"r021y010W\",\r\n\t\t\t\"o540i000W\",\r\n\t\t\t\"y541p121W\",\r\n\t\t\t\"y410p041W\",\r\n\t\t\t\"o001b121W\",\r\n\t\t\t\"o521y010W\",\r\n\t\t\t\"i040p201W\",\r\n\t\t\t\"r002p530W\",\r\n\t\t\t\"g311i120W\",\r\n\t\t\t\"r030p311W\",\r\n\t\t\t\"y332i030W\",\r\n\t\t\t\"y111b342W\",\r\n\t\t\t\"y032g221W\",\r\n\t\t\t\"o401i033W\",\r\n\t\t\t\"y030i260W\",\r\n\t\t\t\"o511i033W\",\r\n\t\t\t\"r002g031W\",\r\n\t\t\t\"y040b530W\",\r\n\t\t\t\"o000y220W\",\r\n\t\t\t\"o151y341W\",\r\n\t\t\t\"g000b342W\",\r\n\t\t\t\"r021y250W\",\r\n\t\t\t\"o460p430W\",\r\n\t\t\t\"b520i040W\",\r\n\t\t\t\"y352b010W\",\r\n\t\t\t\"g330b120W\",\r\n\t\t\t\"r012y040W\",\r\n\t\t\t\"r220o540W\",\r\n\t\t\t\"r140o100W\",\r\n\t\t\t\"o401g250W\",\r\n\t\t\t\"o151g520W\",\r\n\t\t\t\"b042p000W\",\r\n\t\t\t\"r212b260W\",\r\n\t\t\t\"o250g001W\",\r\n\t\t\t\"b110i003W\",\r\n\t\t\t\"b420p341W\",\r\n\t\t\t\"y511b260W\",\r\n\t\t\t\"o012i033W\",\r\n\t\t\t\"g330i013W\",\r\n\t\t\t\"o501y342W\",\r\n\t\t\t\"r212i131W\",\r\n\t\t\t\"y250b011W\",\r\n\t\t\t\"o222p221W\",\r\n\t\t\t\"r151p501W\",\r\n\t\t\t\"r201o431W\",\r\n\t\t\t\"i023p301W\",\r\n\t\t\t\"r111y342W\",\r\n\t\t\t\"o020b541W\",\r\n\t\t\t\"y010b040W\",\r\n\t\t\t\"b000p541W\",\r\n\t\t\t\"b040i100W\",\r\n\t\t\t\"o022y250W\",\r\n\t\t\t\"r201b531W\",\r\n\t\t\t\"y352p330W\",\r\n\t\t\t\"g001p242W\",\r\n\t\t\t\"y032b020W\",\r\n\t\t\t\"g110p431W\",\r\n\t\t\t\"r211g030W\",\r\n\t\t\t\"b111p541W\",\r\n\t\t\t\"y560p401W\",\r\n\t\t\t\"o010b342W\",\r\n\t\t\t\"r042y010W\",\r\n\t\t\t\"y040b010W\",\r\n\t\t\t\"i002p450W\",\r\n\t\t\t\"b541i111W\",\r\n\t\t\t\"g330i120W\",\r\n\t\t\t\"b342p511W\",\r\n\t\t\t\"o241g540W\",\r\n\t\t\t\"y231g300W\",\r\n\t\t\t\"y000p531W\",\r\n\t\t\t\"r002b121W\",\r\n\t\t\t\"r031p511W\",\r\n\t\t\t\"r101p031W\",\r\n\t\t\t\"o012y421W\",\r\n\t\t\t\"o111g262W\",\r\n\t\t\t\"b312i110W\",\r\n\t\t\t\"b100p440W\",\r\n\t\t\t\"o342p420W\",\r\n\t\t\t\"y430g011W\",\r\n\t\t\t\"r002i010W\",\r\n\t\t\t\"o100y341W\",\r\n\t\t\t\"y352i250W\",\r\n\t\t\t\"r151o310W\",\r\n\t\t\t\"r020p301W\",\r\n\t\t\t\"o430b040W\",\r\n\t\t\t\"y521i032W\",\r\n\t\t\t\"y200p231W\",\r\n\t\t\t\"y521i241W\",\r\n\t\t\t\"r151o430W\",\r\n\t\t\t\"o010p111W\",\r\n\t\t\t\"o221i241W\",\r\n\t\t\t\"i010p231W\",\r\n\t\t\t\"o441i010W\",\r\n\t\t\t\"r010i013W\",\r\n\t\t\t\"o332y200W\",\r\n\t\t\t\"o222y200W\",\r\n\t\t\t\"b042i111W\",\r\n\t\t\t\"o231b000W\",\r\n\t\t\t\"o320i260W\",\r\n\t\t\t\"b020p151W\",\r\n\t\t\t\"r010b231W\",\r\n\t\t\t\"y421b000W\",\r\n\t\t\t\"g232i020W\",\r\n\t\t\t\"r021i010W\",\r\n\t\t\t\"g010b511W\",\r\n\t\t\t\"o240b312W\",\r\n\t\t\t\"r030o010W\",\r\n\t\t\t\"b111p330W\",\r\n\t\t\t\"y200b520W\",\r\n\t\t\t\"o262y010W\",\r\n\t\t\t\"b540p242W\",\r\n\t\t\t\"o100b042W\",\r\n\t\t\t\"o302y231W\",\r\n\t\t\t\"o252i022W\",\r\n\t\t\t\"o020p151W\",\r\n\t\t\t\"o262g512W\",\r\n\t\t\t\"o341p011W\",\r\n\t\t\t\"o302p520W\",\r\n\t\t\t\"g531p202W\",\r\n\t\t\t\"r252y430W\",\r\n\t\t\t\"o241y250W\",\r\n\t\t\t\"r101i221W\",\r\n\t\t\t\"o302y560W\",\r\n\t\t\t\"o031b420W\",\r\n\t\t\t\"g130p111W\",\r\n\t\t\t\"r211y030W\",\r\n\t\t\t\"y511b541W\",\r\n\t\t\t\"g540p111W\",\r\n\t\t\t\"y020b042W\",\r\n\t\t\t\"y341i000W\",\r\n\t\t\t\"y560g250W\",\r\n\t\t\t\"r201b040W\",\r\n\t\t\t\"o140p130W\",\r\n\t\t\t\"b141i030W\",\r\n\t\t\t\"r240o532W\",\r\n\t\t\t\"o460p521W\",\r\n\t\t\t\"r241y400W\",\r\n\t\t\t\"o512p121W\",\r\n\t\t\t\"r252p020W\",\r\n\t\t\t\"o020y410W\",\r\n\t\t\t\"o522g252W\",\r\n\t\t\t\"b312i020W\",\r\n\t\t\t\"r101y130W\",\r\n\t\t\t\"r031o300W\",\r\n\t\t\t\"o111y531W\",\r\n\t\t\t\"o000p541W\",\r\n\t\t\t\"o401y430W\",\r\n\t\t\t\"r012y250W\",\r\n\t\t\t\"y000b450W\",\r\n\t\t\t\"r022b400W\",\r\n\t\t\t\"r011i020W\",\r\n\t\t\t\"b450p531W\",\r\n\t\t\t\"r030y111W\",\r\n\t\t\t\"r240y010W\",\r\n\t\t\t\"r031p420W\",\r\n\t\t\t\"o230b322W\",\r\n\t\t\t\"o151i020W\",\r\n\t\t\t\"o521p030W\",\r\n\t\t\t\"o262p330W\",\r\n\t\t\t\"b400p520W\",\r\n\t\t\t\"o321p401W\",\r\n\t\t\t\"o000b012W\",\r\n\t\t\t\"y002b342W\",\r\n\t\t\t\"o522b000W\",\r\n\t\t\t\"o530b331W\",\r\n\t\t\t\"r101p330W\",\r\n\t\t\t\"o100i120W\",\r\n\t\t\t\"r250y000W\",\r\n\t\t\t\"g001b250W\",\r\n\t\t\t\"g330p301W\",\r\n\t\t\t\"y541b230W\",\r\n\t\t\t\"b040p520W\",\r\n\t\t\t\"r250p420W\",\r\n\t\t\t\"o242b400W\",\r\n\t\t\t\"b040p311W\",\r\n\t\t\t\"r242i100W\",\r\n\t\t\t\"o251b100W\",\r\n\t\t\t\"o530g001W\",\r\n\t\t\t\"o321y250W\",\r\n\t\t\t\"o241i023W\",\r\n\t\t\t\"r241i121W\",\r\n\t\t\t\"o310b100W\",\r\n\t\t\t\"y511g540W\",\r\n\t\t\t\"y210i040W\",\r\n\t\t\t\"r042o401W\",\r\n\t\t\t\"r232i021W\",\r\n\t\t\t\"o550g221W\",\r\n\t\t\t\"o302b231W\",\r\n\t\t\t\"r151p221W\",\r\n\t\t\t\"r101o151W\",\r\n\t\t\t\"o020y352W\",\r\n\t\t\t\"r151b230W\",\r\n\t\t\t\"g522b211W\",\r\n\t\t\t\"r242y200W\",\r\n\t\t\t\"g120b130W\",\r\n\t\t\t\"b010i023W\",\r\n\t\t\t\"g540i211W\",\r\n\t\t\t\"g252i000W\",\r\n\t\t\t\"r212b440W\",\r\n\t\t\t\"g000i260W\",\r\n\t\t\t\"o430y040W\",\r\n\t\t\t\"o260b100W\",\r\n\t\t\t\"o001g330W\",\r\n\t\t\t\"b110i040W\",\r\n\t\t\t\"r002g540W\",\r\n\t\t\t\"g501p130W\",\r\n\t\t\t\"o100p331W\",\r\n\t\t\t\"y351g000W\",\r\n\t\t\t\"r240i010W\",\r\n\t\t\t\"o041i000W\",\r\n\t\t\t\"o151p111W\",\r\n\t\t\t\"y410b312W\",\r\n\t\t\t\"r211o140W\",\r\n\t\t\t\"o501b531W\",\r\n\t\t\t\"b020i013W\",\r\n\t\t\t\"g321b312W\",\r\n\t\t\t\"g310i003W\",\r\n\t\t\t\"y020p301W\",\r\n\t\t\t\"o151b000W\",\r\n\t\t\t\"r231y352W\",\r\n\t\t\t\"r211o020W\",\r\n\t\t\t\"o011p151W\",\r\n\t\t\t\"o251i000W\",\r\n\t\t\t\"r010p151W\",\r\n\t\t\t\"b400p222W\",\r\n\t\t\t\"o012i260W\",\r\n\t\t\t\"b301i003W\",\r\n\t\t\t\"o531i000W\",\r\n\t\t\t\"b011i000W\",\r\n\t\t\t\"r030i023W\",\r\n\t\t\t\"r101o031W\",\r\n\t\t\t\"r140p121W\",\r\n\t\t\t\"r001b531W\",\r\n\t\t\t\"r212o250W\",\r\n\t\t\t\"o151b221W\",\r\n\t\t\t\"b322i040W\",\r\n\t\t\t\"o031y200W\",\r\n\t\t\t\"r001g530W\",\r\n\t\t\t\"o260p211W\",\r\n\t\t\t\"g120i030W\",\r\n\t\t\t\"r012p151W\",\r\n\t\t\t\"r010o342W\",\r\n\t\t\t\"o100g231W\",\r\n\t\t\t\"o151i002W\",\r\n\t\t\t\"o250y200W\",\r\n\t\t\t\"g300b131W\",\r\n\t\t\t\"i260p330W\",\r\n\t\t\t\"o262i030W\",\r\n\t\t\t\"g311b250W\",\r\n\t\t\t\"o151g501W\",\r\n\t\t\t\"o222y541W\",\r\n\t\t\t\"r231b010W\",\r\n\t\t\t\"o322b540W\",\r\n\t\t\t\"i241p520W\",\r\n\t\t\t\"r101b531W\",\r\n\t\t\t\"r001p242W\",\r\n\t\t\t\"o401i121W\",\r\n\t\t\t\"o262y322W\",\r\n\t\t\t\"i260p420W\",\r\n\t\t\t\"y010i023W\",\r\n\t\t\t\"o330p401W\",\r\n\t\t\t\"o000p140W\",\r\n\t\t\t\"b000p231W\",\r\n\t\t\t\"o420i033W\",\r\n\t\t\t\"o111y250W\",\r\n\t\t\t\"r141b312W\",\r\n\t\t\t\"o041p420W\",\r\n\t\t\t\"r242y410W\",\r\n\t\t\t\"r151o100W\",\r\n\t\t\t\"o242y120W\",\r\n\t\t\t\"o030p301W\",\r\n\t\t\t\"r010g231W\",\r\n\t\t\t\"r201o030W\",\r\n\t\t\t\"y111b430W\",\r\n\t\t\t\"b332i000W\",\r\n\t\t\t\"o221p331W\",\r\n\t\t\t\"g262p111W\",\r\n\t\t\t\"b000i033W\",\r\n\t\t\t\"r151b511W\",\r\n\t\t\t\"y352p311W\",\r\n\t\t\t\"g231p030W\",\r\n\t\t\t\"r242y530W\",\r\n\t\t\t\"o320b450W\",\r\n\t\t\t\"y541b511W\",\r\n\t\t\t\"g232b342W\",\r\n\t\t\t\"r240o460W\",\r\n\t\t\t\"o342i121W\",\r\n\t\t\t\"o250p430W\",\r\n\t\t\t\"g311p330W\",\r\n\t\t\t\"o242b000W\",\r\n\t\t\t\"o542i221W\",\r\n\t\t\t\"y352g511W\",\r\n\t\t\t\"r002p531W\",\r\n\t\t\t\"o222g330W\",\r\n\t\t\t\"y341g262W\",\r\n\t\t\t\"y352i100W\",\r\n\t\t\t\"y130b000W\",\r\n\t\t\t\"r230b312W\",\r\n\t\t\t\"i010p041W\",\r\n\t\t\t\"r140o430W\",\r\n\t\t\t\"o342b030W\",\r\n\t\t\t\"o550y032W\",\r\n\t\t\t\"o401i032W\",\r\n\t\t\t\"r231y250W\",\r\n\t\t\t\"y521p331W\",\r\n\t\t\t\"o222b260W\",\r\n\t\t\t\"r212p430W\",\r\n\t\t\t\"y130g252W\",\r\n\t\t\t\"r030y511W\",\r\n\t\t\t\"b230p541W\",\r\n\t\t\t\"o262p121W\",\r\n\t\t\t\"o260g321W\",\r\n\t\t\t\"r002b331W\",\r\n\t\t\t\"b211p450W\",\r\n\t\t\t\"o520b400W\",\r\n\t\t\t\"b141i013W\",\r\n\t\t\t\"r151y200W\",\r\n\t\t\t\"r242o100W\",\r\n\t\t\t\"b131i010W\",\r\n\t\t\t\"o262g530W\",\r\n\t\t\t\"r030o321W\",\r\n\t\t\t\"r032o530W\",\r\n\t\t\t\"g011p440W\",\r\n\t\t\t\"y351i033W\",\r\n\t\t\t\"o010b450W\",\r\n\t\t\t\"y020b131W\",\r\n\t\t\t\"o330b040W\",\r\n\t\t\t\"o331i020W\",\r\n\t\t\t\"b141i000W\",\r\n\t\t\t\"y040g110W\",\r\n\t\t\t\"r130o262W\",\r\n\t\t\t\"o511b450W\",\r\n\t\t\t\"r201b530W\",\r\n\t\t\t\"o000i120W\",\r\n\t\t\t\"o532g540W\",\r\n\t\t\t\"r231g262W\",\r\n\t\t\t\"r120p541W\",\r\n\t\t\t\"r031p301W\",\r\n\t\t\t\"o460b111W\",\r\n\t\t\t\"r151o011W\",\r\n\t\t\t\"r220y341W\",\r\n\t\t\t\"o420i260W\",\r\n\t\t\t\"o530p501W\",\r\n\t\t\t\"i020p431W\",\r\n\t\t\t\"o221b042W\",\r\n\t\t\t\"o501p242W\",\r\n\t\t\t\"y430i000W\",\r\n\t\t\t\"g130p201W\",\r\n\t\t\t\"y321b000W\",\r\n\t\t\t\"b250p000W\",\r\n\t\t\t\"b520p041W\",\r\n\t\t\t\"o252g540W\",\r\n\t\t\t\"y200i241W\",\r\n\t\t\t\"o222i231W\",\r\n\t\t\t\"y200i032W\",\r\n\t\t\t\"b312p320W\",\r\n\t\t\t\"r101b250W\",\r\n\t\t\t\"o341y200W\",\r\n\t\t\t\"r010o030W\",\r\n\t\t\t\"o262b250W\",\r\n\t\t\t\"o100g512W\",\r\n\t\t\t\"o252i040W\",\r\n\t\t\t\"o011g262W\",\r\n\t\t\t\"o221g130W\",\r\n\t\t\t\"o231i003W\",\r\n\t\t\t\"i111p151W\",\r\n\t\t\t\"r242o011W\",\r\n\t\t\t\"r101o431W\",\r\n\t\t\t\"b421p242W\",\r\n\t\t\t\"r010y322W\",\r\n\t\t\t\"r151y111W\",\r\n\t\t\t\"r201y250W\",\r\n\t\t\t\"o022y040W\",\r\n\t\t\t\"y040b231W\",\r\n\t\t\t\"r222i000W\",\r\n\t\t\t\"b100p541W\",\r\n\t\t\t\"r030p501W\",\r\n\t\t\t\"o330y321W\",\r\n\t\t\t\"o540g512W\",\r\n\t\t\t\"b511i040W\",\r\n\t\t\t\"o550p231W\",\r\n\t\t\t\"r222g250W\",\r\n\t\t\t\"o530y141W\",\r\n\t\t\t\"r241o020W\",\r\n\t\t\t\"y040b111W\",\r\n\t\t\t\"o550i033W\",\r\n\t\t\t\"r021y040W\",\r\n\t\t\t\"g330i121W\",\r\n\t\t\t\"o140b312W\",\r\n\t\t\t\"y521b042W\",\r\n\t\t\t\"r101y220W\",\r\n\t\t\t\"o401g011W\",\r\n\t\t\t\"b040i023W\",\r\n\t\t\t\"o000b042W\",\r\n\t\t\t\"r252o330W\",\r\n\t\t\t\"o342y400W\",\r\n\t\t\t\"o431y000W\",\r\n\t\t\t\"r000b020W\",\r\n\t\t\t\"r211b131W\",\r\n\t\t\t\"i040p242W\",\r\n\t\t\t\"r041p520W\",\r\n\t\t\t\"b450p521W\",\r\n\t\t\t\"r130y240W\",\r\n\t\t\t\"r250g011W\",\r\n\t\t\t\"o322p242W\",\r\n\t\t\t\"o501b450W\",\r\n\t\t\t\"y111b260W\",\r\n\t\t\t\"o330p111W\",\r\n\t\t\t\"i003p020W\",\r\n\t\t\t\"i100p151W\",\r\n\t\t\t\"o511y560W\",\r\n\t\t\t\"r031b121W\",\r\n\t\t\t\"g011p301W\",\r\n\t\t\t\"g031p000W\",\r\n\t\t\t\"r101o542W\",\r\n\t\t\t\"y040b221W\",\r\n\t\t\t\"r131b260W\",\r\n\t\t\t\"o431b111W\",\r\n\t\t\t\"i032p000W\",\r\n\t\t\t\"g231i003W\",\r\n\t\t\t\"b120p151W\",\r\n\t\t\t\"r021o222W\",\r\n\t\t\t\"o151p130W\",\r\n\t\t\t\"y332b450W\",\r\n\t\t\t\"y030i013W\",\r\n\t\t\t\"g120i040W\",\r\n\t\t\t\"y322p242W\",\r\n\t\t\t\"b020p221W\",\r\n\t\t\t\"o501b121W\",\r\n\t\t\t\"r230i023W\",\r\n\t\t\t\"r041y111W\",\r\n\t\t\t\"y030b000W\",\r\n\t\t\t\"b331p000W\",\r\n\t\t\t\"r252g110W\",\r\n\t\t\t\"r011p141W\",\r\n\t\t\t\"b312i032W\",\r\n\t\t\t\"o001b260W\",\r\n\t\t\t\"o231g530W\",\r\n\t\t\t\"o300b342W\",\r\n\t\t\t\"o222b450W\",\r\n\t\t\t\"r252o010W\",\r\n\t\t\t\"o012i030W\",\r\n\t\t\t\"r140p301W\",\r\n\t\t\t\"g540p221W\",\r\n\t\t\t\"o222b121W\",\r\n\t\t\t\"o000i231W\",\r\n\t\t\t\"o111b260W\",\r\n\t\t\t\"o302p530W\",\r\n\t\t\t\"o041i010W\",\r\n\t\t\t\"y322p331W\",\r\n\t\t\t\"y352p501W\",\r\n\t\t\t\"o341p121W\",\r\n\t\t\t\"o262i231W\",\r\n\t\t\t\"r010b130W\",\r\n\t\t\t\"o262p440W\",\r\n\t\t\t\"o230y341W\",\r\n\t\t\t\"y000g252W\",\r\n\t\t\t\"r020y240W\",\r\n\t\t\t\"o222y352W\",\r\n\t\t\t\"i000p341W\",\r\n\t\t\t\"o000y240W\",\r\n\t\t\t\"b001i000W\",\r\n\t\t\t\"r201b030W\",\r\n\t\t\t\"y002p151W\",\r\n\t\t\t\"y010b541W\",\r\n\t\t\t\"r001p530W\",\r\n\t\t\t\"r242o501W\",\r\n\t\t\t\"g330p202W\",\r\n\t\t\t\"r151o010W\",\r\n\t\t\t\"g532b010W\",\r\n\t\t\t\"r111p530W\",\r\n\t\t\t\"r000o320W\",\r\n\t\t\t\"r041o010W\",\r\n\t\t\t\"g530p401W\",\r\n\t\t\t\"o241i000W\",\r\n\t\t\t\"g000p531W\",\r\n\t\t\t\"r252p520W\",\r\n\t\t\t\"g540b012W\",\r\n\t\t\t\"r242y010W\",\r\n\t\t\t\"g311p430W\",\r\n\t\t\t\"r250i003W\",\r\n\t\t\t\"y002p031W\",\r\n\t\t\t\"g540b400W\",\r\n\t\t\t\"r232b260W\",\r\n\t\t\t\"o020p121W\",\r\n\t\t\t\"g020p141W\",\r\n\t\t\t\"o342g511W\",\r\n\t\t\t\"y210p041W\",\r\n\t\t\t\"o221p301W\",\r\n\t\t\t\"y000p440W\",\r\n\t\t\t\"o151b010W\",\r\n\t\t\t\"o302g031W\",\r\n\t\t\t\"r010o332W\",\r\n\t\t\t\"r212p530W\",\r\n\t\t\t\"o401b030W\",\r\n\t\t\t\"o250i000W\",\r\n\t\t\t\"g232i241W\",\r\n\t\t\t\"r042i100W\",\r\n\t\t\t\"r000y020W\",\r\n\t\t\t\"b531p301W\",\r\n\t\t\t\"o121y250W\",\r\n\t\t\t\"o431i111W\",\r\n\t\t\t\"o240i032W\",\r\n\t\t\t\"o231y250W\",\r\n\t\t\t\"o332b312W\",\r\n\t\t\t\"o322b331W\",\r\n\t\t\t\"r041p311W\",\r\n\t\t\t\"o222g530W\",\r\n\t\t\t\"r120o332W\",\r\n\t\t\t\"o012y560W\",\r\n\t\t\t\"r201p430W\",\r\n\t\t\t\"g521p000W\",\r\n\t\t\t\"g530i013W\",\r\n\t\t\t\"r120p041W\",\r\n\t\t\t\"g520p331W\",\r\n\t\t\t\"o401g511W\",\r\n\t\t\t\"r121y240W\",\r\n\t\t\t\"g010i040W\",\r\n\t\t\t\"r140b230W\",\r\n\t\t\t\"r241o520W\",\r\n\t\t\t\"r030o401W\",\r\n\t\t\t\"y040p501W\",\r\n\t\t\t\"r141i121W\",\r\n\t\t\t\"g242i000W\",\r\n\t\t\t\"b030p411W\",\r\n\t\t\t\"r240o420W\",\r\n\t\t\t\"g330b411W\",\r\n\t\t\t\"b030p202W\",\r\n\t\t\t\"r250i230W\",\r\n\t\t\t\"o010g532W\",\r\n\t\t\t\"o501g530W\",\r\n\t\t\t\"r031y322W\",\r\n\t\t\t\"o310g020W\",\r\n\t\t\t\"g011b260W\",\r\n\t\t\t\"y002g262W\",\r\n\t\t\t\"y322p020W\",\r\n\t\t\t\"r101p531W\",\r\n\t\t\t\"y511b342W\",\r\n\t\t\t\"r041g110W\",\r\n\t\t\t\"y411g540W\",\r\n\t\t\t\"r232i260W\",\r\n\t\t\t\"i111p531W\",\r\n\t\t\t\"y020g232W\",\r\n\t\t\t\"y530p340W\",\r\n\t\t\t\"y111b331W\",\r\n\t\t\t\"r010b531W\",\r\n\t\t\t\"r140i230W\",\r\n\t\t\t\"r002b541W\",\r\n\t\t\t\"r041o321W\",\r\n\t\t\t\"r031o460W\",\r\n\t\t\t\"o020b450W\",\r\n\t\t\t\"b042p211W\",\r\n\t\t\t\"r201b342W\",\r\n\t\t\t\"r012g321W\",\r\n\t\t\t\"o332y322W\",\r\n\t\t\t\"r101o230W\",\r\n\t\t\t\"o302g520W\",\r\n\t\t\t\"o302b130W\",\r\n\t\t\t\"o330y342W\",\r\n\t\t\t\"r220o302W\",\r\n\t\t\t\"r002y342W\",\r\n\t\t\t\"y322b541W\",\r\n\t\t\t\"r021o030W\",\r\n\t\t\t\"b450p121W\",\r\n\t\t\t\"o512p041W\",\r\n\t\t\t\"g520p121W\",\r\n\t\t\t\"b342i100W\",\r\n\t\t\t\"g520p450W\",\r\n\t\t\t\"y511p222W\",\r\n\t\t\t\"b100p020W\",\r\n\t\t\t\"o222y531W\",\r\n\t\t\t\"o511i000W\",\r\n\t\t\t\"b001p151W\",\r\n\t\t\t\"b231p030W\",\r\n\t\t\t\"o010i033W\",\r\n\t\t\t\"b400p030W\",\r\n\t\t\t\"r120g330W\",\r\n\t\t\t\"r031g321W\",\r\n\t\t\t\"y010p242W\",\r\n\t\t\t\"y040g300W\",\r\n\t\t\t\"b411i040W\",\r\n\t\t\t\"r031o100W\",\r\n\t\t\t\"b301i040W\",\r\n\t\t\t\"o020g262W\",\r\n\t\t\t\"o441y400W\",\r\n\t\t\t\"y210b530W\",\r\n\t\t\t\"r042y332W\",\r\n\t\t\t\"r012g530W\",\r\n\t\t\t\"o012y040W\",\r\n\t\t\t\"b131p011W\",\r\n\t\t\t\"o241b312W\",\r\n\t\t\t\"r030g501W\",\r\n\t\t\t\"y250p311W\",\r\n\t\t\t\"r140o222W\",\r\n\t\t\t\"o100y210W\",\r\n\t\t\t\"g110b042W\",\r\n\t\t\t\"r222p541W\",\r\n\t\t\t\"o100b530W\",\r\n\t\t\t\"r151b521W\",\r\n\t\t\t\"r012p242W\",\r\n\t\t\t\"g250i020W\",\r\n\t\t\t\"r030i211W\",\r\n\t\t\t\"y352p430W\",\r\n\t\t\t\"r002p421W\",\r\n\t\t\t\"g511b450W\",\r\n\t\t\t\"y221p420W\",\r\n\t\t\t\"y020g262W\",\r\n\t\t\t\"o522i040W\",\r\n\t\t\t\"g310b312W\",\r\n\t\t\t\"b000i121W\",\r\n\t\t\t\"o460y322W\",\r\n\t\t\t\"r032y111W\",\r\n\t\t\t\"b332i221W\",\r\n\t\t\t\"o262p231W\",\r\n\t\t\t\"r242y411W\",\r\n\t\t\t\"g501p242W\",\r\n\t\t\t\"y411p041W\",\r\n\t\t\t\"o262g520W\",\r\n\t\t\t\"y531p202W\",\r\n\t\t\t\"y200i131W\",\r\n\t\t\t\"y250p222W\",\r\n\t\t\t\"y020p450W\",\r\n\t\t\t\"y000g532W\",\r\n\t\t\t\"r031g530W\",\r\n\t\t\t\"r250o000W\",\r\n\t\t\t\"g321i130W\",\r\n\t\t\t\"o211i040W\",\r\n\t\t\t\"o251b400W\",\r\n\t\t\t\"y010b260W\",\r\n\t\t\t\"r101o332W\",\r\n\t\t\t\"b011p030W\",\r\n\t\t\t\"r030b511W\",\r\n\t\t\t\"g330i100W\",\r\n\t\t\t\"y200b042W\",\r\n\t\t\t\"r252y231W\",\r\n\t\t\t\"o302p201W\",\r\n\t\t\t\"y430g120W\",\r\n\t\t\t\"o140b400W\",\r\n\t\t\t\"r011o151W\",\r\n\t\t\t\"y250b000W\",\r\n\t\t\t\"o550i023W\",\r\n\t\t\t\"r022y250W\",\r\n\t\t\t\"r140b511W\",\r\n\t\t\t\"r250b511W\",\r\n\t\t\t\"y010i260W\",\r\n\t\t\t\"y400p151W\",\r\n\t\t\t\"y200b131W\",\r\n\t\t\t\"r231g252W\",\r\n\t\t\t\"r212b040W\",\r\n\t\t\t\"r220y331W\",\r\n\t\t\t\"g262b250W\",\r\n\t\t\t\"i230p340W\",\r\n\t\t\t\"r250o240W\",\r\n\t\t\t\"o151g522W\",\r\n\t\t\t\"o012i000W\",\r\n\t\t\t\"y511p151W\",\r\n\t\t\t\"r231o151W\",\r\n\t\t\t\"r222b021W\",\r\n\t\t\t\"o262i040W\",\r\n\t\t\t\"r201p030W\",\r\n\t\t\t\"r242p401W\",\r\n\t\t\t\"y531i100W\",\r\n\t\t\t\"b040i111W\",\r\n\t\t\t\"y250b120W\",\r\n\t\t\t\"g231p301W\",\r\n\t\t\t\"o501y531W\",\r\n\t\t\t\"g310p151W\",\r\n\t\t\t\"o342i013W\",\r\n\t\t\t\"y352b030W\",\r\n\t\t\t\"o342p431W\",\r\n\t\t\t\"o430i040W\",\r\n\t\t\t\"r111g031W\",\r\n\t\t\t\"r001g031W\",\r\n\t\t\t\"b430i111W\",\r\n\t\t\t\"y250p000W\",\r\n\t\t\t\"r220g140W\",\r\n\t\t\t\"o511b342W\",\r\n\t\t\t\"o542g310W\",\r\n\t\t\t\"b111p341W\",\r\n\t\t\t\"o000i003W\",\r\n\t\t\t\"i100p030W\",\r\n\t\t\t\"o020p140W\",\r\n\t\t\t\"o042p301W\",\r\n\t\t\t\"g140i003W\",\r\n\t\t\t\"r242b211W\",\r\n\t\t\t\"r201g540W\",\r\n\t\t\t\"o011i000W\",\r\n\t\t\t\"b312p242W\",\r\n\t\t\t\"r212g330W\",\r\n\t\t\t\"y020i260W\",\r\n\t\t\t\"y010g232W\",\r\n\t\t\t\"g300p151W\",\r\n\t\t\t\"o312b040W\",\r\n\t\t\t\"o031y002W\",\r\n\t\t\t\"o401y441W\",\r\n\t\t\t\"r252b312W\",\r\n\t\t\t\"r241y322W\",\r\n\t\t\t\"y321p301W\",\r\n\t\t\t\"o001y531W\",\r\n\t\t\t\"o460p301W\",\r\n\t\t\t\"r101p430W\",\r\n\t\t\t\"y030p221W\",\r\n\t\t\t\"b130i000W\",\r\n\t\t\t\"r212b531W\",\r\n\t\t\t\"y000b332W\",\r\n\t\t\t\"r252p401W\",\r\n\t\t\t\"b231i100W\",\r\n\t\t\t\"y020p000W\",\r\n\t\t\t\"o342b312W\",\r\n\t\t\t\"r031p311W\",\r\n\t\t\t\"o211b530W\",\r\n\t\t\t\"b042p401W\",\r\n\t\t\t\"r001y342W\",\r\n\t\t\t\"o521p041W\",\r\n\t\t\t\"y240b312W\",\r\n\t\t\t\"o430g311W\",\r\n\t\t\t\"r042i010W\",\r\n\t\t\t\"y020i033W\",\r\n\t\t\t\"b321p401W\",\r\n\t\t\t\"r231p301W\",\r\n\t\t\t\"o241g262W\",\r\n\t\t\t\"r222i260W\",\r\n\t\t\t\"r141p420W\",\r\n\t\t\t\"r000p030W\",\r\n\t\t\t\"o430y541W\",\r\n\t\t\t\"b020p000W\",\r\n\t\t\t\"r002o540W\",\r\n\t\t\t\"y200g330W\",\r\n\t\t\t\"r232b141W\",\r\n\t\t\t\"o550y400W\",\r\n\t\t\t\"r101p221W\",\r\n\t\t\t\"i021p242W\",\r\n\t\t\t\"b042i020W\",\r\n\t\t\t\"y141g001W\",\r\n\t\t\t\"b521i023W\",\r\n\t\t\t\"g030p301W\",\r\n\t\t\t\"b450p311W\",\r\n\t\t\t\"i040p141W\",\r\n\t\t\t\"r201b042W\",\r\n\t\t\t\"r101y141W\",\r\n\t\t\t\"r020o401W\",\r\n\t\t\t\"o240g262W\",\r\n\t\t\t\"o460g512W\",\r\n\t\t\t\"r111b531W\",\r\n\t\t\t\"b400i120W\",\r\n\t\t\t\"o222y040W\",\r\n\t\t\t\"o321y030W\",\r\n\t\t\t\"y352g001W\",\r\n\t\t\t\"r111g330W\",\r\n\t\t\t\"o030b450W\",\r\n\t\t\t\"y511g262W\",\r\n\t\t\t\"o242b010W\",\r\n\t\t\t\"g540p501W\",\r\n\t\t\t\"g110b040W\",\r\n\t\t\t\"y560i033W\",\r\n\t\t\t\"y541i230W\",\r\n\t\t\t\"r230p501W\",\r\n\t\t\t\"o151i022W\",\r\n\t\t\t\"r002i260W\",\r\n\t\t\t\"i000p431W\",\r\n\t\t\t\"b312p140W\",\r\n\t\t\t\"i023p450W\",\r\n\t\t\t\"y020g231W\",\r\n\t\t\t\"g262b221W\",\r\n\t\t\t\"o541y400W\",\r\n\t\t\t\"i241p020W\",\r\n\t\t\t\"r151i221W\",\r\n\t\t\t\"o520g262W\",\r\n\t\t\t\"o250b121W\",\r\n\t\t\t\"b450i002W\",\r\n\t\t\t\"o100p440W\",\r\n\t\t\t\"g252b000W\",\r\n\t\t\t\"y511b450W\",\r\n\t\t\t\"g120i130W\",\r\n\t\t\t\"o151g240W\",\r\n\t\t\t\"r032p000W\",\r\n\t\t\t\"o262p301W\",\r\n\t\t\t\"y020i002W\",\r\n\t\t\t\"o501y040W\",\r\n\t\t\t\"o310i100W\",\r\n\t\t\t\"r242y322W\",\r\n\t\t\t\"b342p011W\",\r\n\t\t\t\"o401b521W\",\r\n\t\t\t\"r022i030W\",\r\n\t\t\t\"i000p222W\",\r\n\t\t\t\"b440p121W\",\r\n\t\t\t\"o222b520W\",\r\n\t\t\t\"o001y250W\",\r\n\t\t\t\"o041i100W\",\r\n\t\t\t\"r121i260W\",\r\n\t\t\t\"r241p121W\",\r\n\t\t\t\"r041y511W\",\r\n\t\t\t\"r230g522W\",\r\n\t\t\t\"b342i111W\",\r\n\t\t\t\"o111g530W\",\r\n\t\t\t\"y400p222W\",\r\n\t\t\t\"b301p541W\",\r\n\t\t\t\"o151i111W\",\r\n\t\t\t\"o460y550W\",\r\n\t\t\t\"o331b420W\",\r\n\t\t\t\"g252i100W\",\r\n\t\t\t\"o302y331W\",\r\n\t\t\t\"r131b141W\",\r\n\t\t\t\"r010y240W\",\r\n\t\t\t\"y352p202W\",\r\n\t\t\t\"o262g011W\",\r\n\t\t\t\"g530p431W\",\r\n\t\t\t\"o262y400W\",\r\n\t\t\t\"g521b450W\",\r\n\t\t\t\"o041b111W\",\r\n\t\t\t\"o042y400W\",\r\n\t\t\t\"y000b141W\",\r\n\t\t\t\"b332i130W\",\r\n\t\t\t\"o302p340W\",\r\n\t\t\t\"y332p000W\",\r\n\t\t\t\"o302i021W\",\r\n\t\t\t\"y430b040W\",\r\n\t\t\t\"o342y010W\",\r\n\t\t\t\"o250p121W\",\r\n\t\t\t\"r231i040W\",\r\n\t\t\t\"y352b100W\",\r\n\t\t\t\"r031p151W\",\r\n\t\t\t\"y550g000W\",\r\n\t\t\t\"y332i260W\",\r\n\t\t\t\"o030y352W\",\r\n\t\t\t\"o030p521W\",\r\n\t\t\t\"g520i033W\",\r\n\t\t\t\"g130b541W\",\r\n\t\t\t\"r021o151W\",\r\n\t\t\t\"y240b000W\",\r\n\t\t\t\"b342p430W\",\r\n\t\t\t\"g242p401W\",\r\n\t\t\t\"y521b342W\",\r\n\t\t\t\"g000p341W\",\r\n\t\t\t\"g321i111W\",\r\n\t\t\t\"r250g520W\",\r\n\t\t\t\"r242o222W\",\r\n\t\t\t\"g262b011W\",\r\n\t\t\t\"r250y411W\",\r\n\t\t\t\"o501p151W\",\r\n\t\t\t\"y332i020W\",\r\n\t\t\t\"o521b100W\",\r\n\t\t\t\"g011p242W\",\r\n\t\t\t\"o550p202W\",\r\n\t\t\t\"r211b531W\",\r\n\t\t\t\"r101p030W\",\r\n\t\t\t\"b042i003W\",\r\n\t\t\t\"b411p041W\",\r\n\t\t\t\"r230y000W\",\r\n\t\t\t\"o302b131W\",\r\n\t\t\t\"o231y560W\",\r\n\t\t\t\"b231p151W\",\r\n\t\t\t\"r000o140W\",\r\n\t\t\t\"o010i241W\",\r\n\t\t\t\"b130p202W\",\r\n\t\t\t\"o151y020W\",\r\n\t\t\t\"o532i033W\",\r\n\t\t\t\"o511b030W\",\r\n\t\t\t\"r000y032W\",\r\n\t\t\t\"y250b221W\",\r\n\t\t\t\"o042i023W\",\r\n\t\t\t\"b000i013W\",\r\n\t\t\t\"r212g031W\",\r\n\t\t\t\"o330i040W\",\r\n\t\t\t\"o222p151W\",\r\n\t\t\t\"r201b430W\",\r\n\t\t\t\"y040p011W\",\r\n\t\t\t\"r230o241W\",\r\n\t\t\t\"r041i121W\",\r\n\t\t\t\"o460p331W\",\r\n\t\t\t\"o012g260W\",\r\n\t\t\t\"o302i111W\",\r\n\t\t\t\"o522p041W\",\r\n\t\t\t\"y521p431W\",\r\n\t\t\t\"g000b030W\",\r\n\t\t\t\"y521b000W\",\r\n\t\t\t\"o312b321W\",\r\n\t\t\t\"o540p341W\",\r\n\t\t\t\"r151p121W\",\r\n\t\t\t\"g252i010W\",\r\n\t\t\t\"b430p301W\",\r\n\t\t\t\"g000i250W\",\r\n\t\t\t\"o511i241W\",\r\n\t\t\t\"r022o342W\",\r\n\t\t\t\"y250b012W\",\r\n\t\t\t\"b420p231W\",\r\n\t\t\t\"r031o430W\",\r\n\t\t\t\"b312p020W\",\r\n\t\t\t\"y040b131W\",\r\n\t\t\t\"o540y000W\",\r\n\t\t\t\"y322g321W\",\r\n\t\t\t\"b111p431W\",\r\n\t\t\t\"o512g540W\",\r\n\t\t\t\"o240p420W\",\r\n\t\t\t\"o541i010W\",\r\n\t\t\t\"g520i260W\",\r\n\t\t\t\"r012i121W\",\r\n\t\t\t\"r020i111W\",\r\n\t\t\t\"o022g330W\",\r\n\t\t\t\"g321b042W\",\r\n\t\t\t\"o151y002W\",\r\n\t\t\t\"o532i260W\",\r\n\t\t\t\"y040i120W\",\r\n\t\t\t\"o460i013W\",\r\n\t\t\t\"g010b322W\",\r\n\t\t\t\"o211p041W\",\r\n\t\t\t\"b100p450W\",\r\n\t\t\t\"r131o460W\",\r\n\t\t\t\"y250p221W\",\r\n\t\t\t\"g252b400W\",\r\n\t\t\t\"b141p440W\",\r\n\t\t\t\"o420g540W\",\r\n\t\t\t\"r002b231W\",\r\n\t\t\t\"r250o221W\",\r\n\t\t\t\"o140p501W\",\r\n\t\t\t\"r101y351W\",\r\n\t\t\t\"o511g331W\",\r\n\t\t\t\"o401y531W\",\r\n\t\t\t\"r101o331W\",\r\n\t\t\t\"b020i250W\",\r\n\t\t\t\"o022b100W\",\r\n\t\t\t\"r231y400W\",\r\n\t\t\t\"o100y240W\",\r\n\t\t\t\"y352p011W\",\r\n\t\t\t\"r011p541W\",\r\n\t\t\t\"o401i221W\",\r\n\t\t\t\"o030b312W\",\r\n\t\t\t\"y020p151W\",\r\n\t\t\t\"y411p340W\",\r\n\t\t\t\"o302b531W\",\r\n\t\t\t\"r140o121W\",\r\n\t\t\t\"r222p231W\",\r\n\t\t\t\"o401b121W\",\r\n\t\t\t\"r002g252W\",\r\n\t\t\t\"r101o540W\",\r\n\t\t\t\"r252o221W\",\r\n\t\t\t\"b100i110W\",\r\n\t\t\t\"r252y010W\",\r\n\t\t\t\"r031p401W\",\r\n\t\t\t\"g262p011W\",\r\n\t\t\t\"r012g011W\",\r\n\t\t\t\"o530b312W\",\r\n\t\t\t\"b130p041W\",\r\n\t\t\t\"g540p011W\",\r\n\t\t\t\"b450p401W\",\r\n\t\t\t\"r002p440W\",\r\n\t\t\t\"g010b100W\",\r\n\t\t\t\"o111p242W\",\r\n\t\t\t\"o251b312W\",\r\n\t\t\t\"r030g311W\",\r\n\t\t\t\"r130o140W\",\r\n\t\t\t\"g000p221W\",\r\n\t\t\t\"r101i250W\",\r\n\t\t\t\"g241p401W\",\r\n\t\t\t\"y250i241W\",\r\n\t\t\t\"o460g232W\",\r\n\t\t\t\"r241o100W\",\r\n\t\t\t\"y200p151W\",\r\n\t\t\t\"r002b010W\",\r\n\t\t\t\"y240b400W\",\r\n\t\t\t\"y250p011W\",\r\n\t\t\t\"o042g010W\",\r\n\t\t\t\"o302y341W\",\r\n\t\t\t\"o250i020W\",\r\n\t\t\t\"b010i260W\",\r\n\t\t\t\"i040p000W\",\r\n\t\t\t\"g231b450W\",\r\n\t\t\t\"g031i020W\",\r\n\t\t\t\"g120i260W\",\r\n\t\t\t\"o000y020W\",\r\n\t\t\t\"o320i030W\",\r\n\t\t\t\"g300p030W\",\r\n\t\t\t\"r032y322W\",\r\n\t\t\t\"r042g520W\",\r\n\t\t\t\"r002p450W\",\r\n\t\t\t\"o322y040W\",\r\n\t\t\t\"y250i020W\",\r\n\t\t\t\"o302y221W\",\r\n\t\t\t\"r042y521W\",\r\n\t\t\t\"o260i023W\",\r\n\t\t\t\"r250o501W\",\r\n\t\t\t\"o541i100W\",\r\n\t\t\t\"r240p420W\",\r\n\t\t\t\"o512g520W\",\r\n\t\t\t\"b130i023W\",\r\n\t\t\t\"o242y321W\",\r\n\t\t\t\"o342p531W\",\r\n\t\t\t\"o320b030W\",\r\n\t\t\t\"y410b100W\",\r\n\t\t\t\"g530p501W\",\r\n\t\t\t\"o501p430W\",\r\n\t\t\t\"r212i260W\",\r\n\t\t\t\"o231p341W\",\r\n\t\t\t\"r250g120W\",\r\n\t\t\t\"r000p031W\",\r\n\t\t\t\"y030i100W\",\r\n\t\t\t\"y000p211W\",\r\n\t\t\t\"o310i040W\",\r\n\t\t\t\"o140p020W\",\r\n\t\t\t\"o022i000W\",\r\n\t\t\t\"r230o312W\",\r\n\t\t\t\"o242i040W\",\r\n\t\t\t\"o401p411W\",\r\n\t\t\t\"o041y200W\",\r\n\t\t\t\"r021i000W\",\r\n\t\t\t\"r021p111W\",\r\n\t\t\t\"o302p541W\",\r\n\t\t\t\"r242b221W\",\r\n\t\t\t\"o260i010W\",\r\n\t\t\t\"r000b040W\",\r\n\t\t\t\"y000p331W\",\r\n\t\t\t\"o331p151W\",\r\n\t\t\t\"g241p311W\",\r\n\t\t\t\"o240y200W\",\r\n\t\t\t\"y111b040W\",\r\n\t\t\t\"g000i030W\",\r\n\t\t\t\"o030i100W\",\r\n\t\t\t\"y421g260W\",\r\n\t\t\t\"r220i040W\",\r\n\t\t\t\"i131p450W\",\r\n\t\t\t\"r241y410W\",\r\n\t\t\t\"r011o252W\",\r\n\t\t\t\"r101i231W\",\r\n\t\t\t\"b040p421W\",\r\n\t\t\t\"o001p151W\",\r\n\t\t\t\"o250i260W\",\r\n\t\t\t\"o222p541W\",\r\n\t\t\t\"o540y200W\",\r\n\t\t\t\"r101b120W\",\r\n\t\t\t\"o100g310W\",\r\n\t\t\t\"b450p212W\",\r\n\t\t\t\"o302p140W\",\r\n\t\t\t\"o012g530W\",\r\n\t\t\t\"o312g241W\",\r\n\t\t\t\"o441y010W\",\r\n\t\t\t\"r212o151W\",\r\n\t\t\t\"g221p020W\",\r\n\t\t\t\"y342b100W\",\r\n\t\t\t\"b040p020W\",\r\n\t\t\t\"o012i130W\",\r\n\t\t\t\"o342y020W\",\r\n\t\t\t\"g030i000W\",\r\n\t\t\t\"o140i100W\",\r\n\t\t\t\"b450p020W\",\r\n\t\t\t\"b121p450W\",\r\n\t\t\t\"y560i010W\",\r\n\t\t\t\"r002g321W\",\r\n\t\t\t\"r010b030W\",\r\n\t\t\t\"o262b420W\",\r\n\t\t\t\"r220y040W\",\r\n\t\t\t\"r101o041W\",\r\n\t\t\t\"o231p030W\",\r\n\t\t\t\"o010b040W\",\r\n\t\t\t\"o262g001W\",\r\n\t\t\t\"o521i000W\",\r\n\t\t\t\"o542b000W\",\r\n\t\t\t\"o262b540W\",\r\n\t\t\t\"y410g232W\",\r\n\t\t\t\"r220o251W\",\r\n\t\t\t\"r031o512W\",\r\n\t\t\t\"g140i000W\",\r\n\t\t\t\"r201g330W\",\r\n\t\t\t\"i100p340W\",\r\n\t\t\t\"g221p140W\",\r\n\t\t\t\"r101b342W\",\r\n\t\t\t\"r140b450W\",\r\n\t\t\t\"r020g522W\",\r\n\t\t\t\"r022b260W\",\r\n\t\t\t\"r240i033W\",\r\n\t\t\t\"o100i110W\",\r\n\t\t\t\"i250p121W\",\r\n\t\t\t\"r101y521W\",\r\n\t\t\t\"r240p242W\",\r\n\t\t\t\"r032p450W\",\r\n\t\t\t\"o011b400W\",\r\n\t\t\t\"r000o020W\",\r\n\t\t\t\"g011b040W\",\r\n\t\t\t\"r120p030W\",\r\n\t\t\t\"g120b260W\",\r\n\t\t\t\"o250p242W\",\r\n\t\t\t\"i022p141W\",\r\n\t\t\t\"r002b411W\",\r\n\t\t\t\"r242i230W\",\r\n\t\t\t\"o420g262W\",\r\n\t\t\t\"r242o521W\",\r\n\t\t\t\"i033p330W\",\r\n\t\t\t\"r242g501W\",\r\n\t\t\t\"r002b531W\",\r\n\t\t\t\"y230i023W\",\r\n\t\t\t\"o331y040W\",\r\n\t\t\t\"o460b030W\",\r\n\t\t\t\"g250b342W\",\r\n\t\t\t\"y342g010W\",\r\n\t\t\t\"g262p520W\",\r\n\t\t\t\"r151p420W\",\r\n\t\t\t\"y250b301W\",\r\n\t\t\t\"r252o511W\",\r\n\t\t\t\"r220o460W\",\r\n\t\t\t\"o401g522W\",\r\n\t\t\t\"r041g232W\",\r\n\t\t\t\"o300y331W\",\r\n\t\t\t\"r011o550W\",\r\n\t\t\t\"g310b100W\",\r\n\t\t\t\"o211g232W\",\r\n\t\t\t\"o541p420W\",\r\n\t\t\t\"r201b121W\",\r\n\t\t\t\"o430b342W\",\r\n\t\t\t\"y550i033W\",\r\n\t\t\t\"o000g540W\",\r\n\t\t\t\"r101o250W\",\r\n\t\t\t\"g540b322W\",\r\n\t\t\t\"o232p041W\",\r\n\t\t\t\"g240p450W\",\r\n\t\t\t\"r250y530W\",\r\n\t\t\t\"r010o022W\",\r\n\t\t\t\"g110i120W\",\r\n\t\t\t\"g262p221W\",\r\n\t\t\t\"y240b012W\",\r\n\t\t\t\"r041o430W\",\r\n\t\t\t\"o020i003W\",\r\n\t\t\t\"o401g521W\",\r\n\t\t\t\"r030b120W\",\r\n\t\t\t\"r241y010W\",\r\n\t\t\t\"g300i231W\",\r\n\t\t\t\"r232o460W\",\r\n\t\t\t\"o441i121W\",\r\n\t\t\t\"o460y400W\",\r\n\t\t\t\"o521b450W\",\r\n\t\t\t\"o321b260W\",\r\n\t\t\t\"o540i111W\",\r\n\t\t\t\"r032b100W\",\r\n\t\t\t\"o310y040W\",\r\n\t\t\t\"y400b541W\",\r\n\t\t\t\"o531y560W\",\r\n\t\t\t\"r141y200W\",\r\n\t\t\t\"r252i100W\",\r\n\t\t\t\"o111g031W\",\r\n\t\t\t\"o111b450W\",\r\n\t\t\t\"o001g262W\",\r\n\t\t\t\"r140p111W\",\r\n\t\t\t\"b000p341W\",\r\n\t\t\t\"o031i000W\",\r\n\t\t\t\"r230o151W\",\r\n\t\t\t\"o321g540W\",\r\n\t\t\t\"r201o260W\",\r\n\t\t\t\"y040g311W\",\r\n\t\t\t\"o221b450W\",\r\n\t\t\t\"b301p140W\",\r\n\t\t\t\"y521g031W\",\r\n\t\t\t\"o031i013W\",\r\n\t\t\t\"g262b021W\",\r\n\t\t\t\"r201g031W\",\r\n\t\t\t\"y040b521W\",\r\n\t\t\t\"b040p242W\",\r\n\t\t\t\"o031b000W\",\r\n\t\t\t\"b541i000W\",\r\n\t\t\t\"i000p411W\",\r\n\t\t\t\"o262p501W\",\r\n\t\t\t\"o302g531W\",\r\n\t\t\t\"r140b000W\",\r\n\t\t\t\"o501g540W\",\r\n\t\t\t\"y230p000W\",\r\n\t\t\t\"y511i033W\",\r\n\t\t\t\"r231i033W\",\r\n\t\t\t\"o100b541W\",\r\n\t\t\t\"o000p041W\",\r\n\t\t\t\"o140b100W\",\r\n\t\t\t\"y200b440W\",\r\n\t\t\t\"g522p450W\",\r\n\t\t\t\"g240b100W\",\r\n\t\t\t\"o111b121W\",\r\n\t\t\t\"y200p431W\",\r\n\t\t\t\"b430p202W\",\r\n\t\t\t\"o030g001W\",\r\n\t\t\t\"y511g531W\",\r\n\t\t\t\"g232b110W\",\r\n\t\t\t\"b312p030W\",\r\n\t\t\t\"r201p531W\",\r\n\t\t\t\"o111p530W\",\r\n\t\t\t\"y141b111W\",\r\n\t\t\t\"b400i032W\",\r\n\t\t\t\"b342p311W\",\r\n\t\t\t\"o031g512W\",\r\n\t\t\t\"o251p130W\",\r\n\t\t\t\"o501p030W\",\r\n\t\t\t\"b000p221W\",\r\n\t\t\t\"r020i023W\",\r\n\t\t\t\"r101g252W\",\r\n\t\t\t\"r151o230W\",\r\n\t\t\t\"o321i033W\",\r\n\t\t\t\"g020p041W\",\r\n\t\t\t\"r151b131W\",\r\n\t\t\t\"o232p340W\",\r\n\t\t\t\"r031y111W\",\r\n\t\t\t\"r010o262W\",\r\n\t\t\t\"r042b312W\",\r\n\t\t\t\"o262b421W\",\r\n\t\t\t\"o430p231W\",\r\n\t\t\t\"y352g120W\",\r\n\t\t\t\"r130o012W\",\r\n\t\t\t\"g262b110W\",\r\n\t\t\t\"r002o030W\",\r\n\t\t\t\"b342p520W\",\r\n\t\t\t\"r201o542W\",\r\n\t\t\t\"y220p041W\",\r\n\t\t\t\"y250i211W\",\r\n\t\t\t\"y322g240W\",\r\n\t\t\t\"b021p000W\",\r\n\t\t\t\"o401b020W\",\r\n\t\t\t\"o000b032W\",\r\n\t\t\t\"y040i121W\",\r\n\t\t\t\"r220b032W\",\r\n\t\t\t\"r001p430W\",\r\n\t\t\t\"o001y342W\",\r\n\t\t\t\"r041o532W\",\r\n\t\t\t\"o401b331W\",\r\n\t\t\t\"o262p340W\",\r\n\t\t\t\"g232b301W\",\r\n\t\t\t\"o331g262W\",\r\n\t\t\t\"o430b031W\",\r\n\t\t\t\"r030g321W\",\r\n\t\t\t\"r230o401W\",\r\n\t\t\t\"o000i023W\",\r\n\t\t\t\"o022b312W\",\r\n\t\t\t\"g110b342W\",\r\n\t\t\t\"y400b260W\",\r\n\t\t\t\"o111y342W\",\r\n\t\t\t\"b000i221W\",\r\n\t\t\t\"b321p311W\",\r\n\t\t\t\"r220i023W\",\r\n\t\t\t\"y030b042W\",\r\n\t\t\t\"o321p501W\",\r\n\t\t\t\"r250o100W\",\r\n\t\t\t\"r111p430W\",\r\n\t\t\t\"r231p202W\",\r\n\t\t\t\"y000b411W\",\r\n\t\t\t\"o322p151W\",\r\n\t\t\t\"i000p041W\",\r\n\t\t\t\"g140b312W\",\r\n\t\t\t\"o222y342W\",\r\n\t\t\t\"r230p311W\",\r\n\t\t\t\"r021b312W\",\r\n\t\t\t\"o121y541W\",\r\n\t\t\t\"y351p121W\",\r\n\t\t\t\"y000g232W\",\r\n\t\t\t\"o030p202W\",\r\n\t\t\t\"b400p041W\",\r\n\t\t\t\"r041o221W\",\r\n\t\t\t\"r130p301W\",\r\n\t\t\t\"r012o260W\",\r\n\t\t\t\"o321i260W\",\r\n\t\t\t\"y040b001W\",\r\n\t\t\t\"b110p541W\",\r\n\t\t\t\"g010b430W\",\r\n\t\t\t\"o401g241W\",\r\n\t\t\t\"o300p421W\",\r\n\t\t\t\"r211y352W\",\r\n\t\t\t\"r222b450W\",\r\n\t\t\t\"b100i231W\",\r\n\t\t\t\"g110i013W\",\r\n\t\t\t\"r002y531W\",\r\n\t\t\t\"r041p020W\",\r\n\t\t\t\"y430b332W\",\r\n\t\t\t\"r250o011W\",\r\n\t\t\t\"g232b541W\",\r\n\t\t\t\"r010g252W\",\r\n\t\t\t\"o231i013W\",\r\n\t\t\t\"y400i260W\",\r\n\t\t\t\"i000p130W\",\r\n\t\t\t\"b322i211W\",\r\n\t\t\t\"i230p231W\",\r\n\t\t\t\"o100i260W\",\r\n\t\t\t\"g511p301W\",\r\n\t\t\t\"o331p121W\",\r\n\t\t\t\"b130i040W\",\r\n\t\t\t\"g110b120W\",\r\n\t\t\t\"y541p201W\",\r\n\t\t\t\"y000g321W\",\r\n\t\t\t\"r000p450W\",\r\n\t\t\t\"b331p301W\",\r\n\t\t\t\"r012b342W\",\r\n\t\t\t\"i000p340W\",\r\n\t\t\t\"b130p000W\",\r\n\t\t\t\"y331b400W\",\r\n\t\t\t\"y040i211W\",\r\n\t\t\t\"r241b511W\",\r\n\t\t\t\"i013p231W\",\r\n\t\t\t\"y352g310W\",\r\n\t\t\t\"i100p041W\",\r\n\t\t\t\"i040p121W\",\r\n\t\t\t\"r250y111W\",\r\n\t\t\t\"r101b121W\",\r\n\t\t\t\"r141i100W\",\r\n\t\t\t\"y341g311W\",\r\n\t\t\t\"o332b000W\",\r\n\t\t\t\"o541y010W\",\r\n\t\t\t\"r120i231W\",\r\n\t\t\t\"g232b040W\",\r\n\t\t\t\"o151y530W\",\r\n\t\t\t\"y321g242W\",\r\n\t\t\t\"g300i040W\",\r\n\t\t\t\"o302y342W\",\r\n\t\t\t\"y410g262W\",\r\n\t\t\t\"r222g540W\",\r\n\t\t\t\"r042g521W\",\r\n\t\t\t\"o302y120W\",\r\n\t\t\t\"b332p041W\",\r\n\t\t\t\"r211o532W\",\r\n\t\t\t\"o312g540W\",\r\n\t\t\t\"r002p211W\",\r\n\t\t\t\"o100y541W\",\r\n\t\t\t\"y352b400W\",\r\n\t\t\t\"r041o401W\",\r\n\t\t\t\"y030g512W\",\r\n\t\t\t\"y321p401W\",\r\n\t\t\t\"b531i100W\",\r\n\t\t\t\"r101g031W\",\r\n\t\t\t\"o251p202W\",\r\n\t\t\t\"r101b032W\",\r\n\t\t\t\"r250b211W\",\r\n\t\t\t\"o302y240W\",\r\n\t\t\t\"r010g030W\",\r\n\t\t\t\"i023p221W\",\r\n\t\t\t\"g130i100W\",\r\n\t\t\t\"y521p041W\",\r\n\t\t\t\"o031y000W\",\r\n\t\t\t\"r001g330W\",\r\n\t\t\t\"o331b511W\",\r\n\t\t\t\"o332y000W\",\r\n\t\t\t\"o310p202W\",\r\n\t\t\t\"y002b440W\",\r\n\t\t\t\"o401y332W\",\r\n\t\t\t\"r240g532W\",\r\n\t\t\t\"i033p420W\",\r\n\t\t\t\"r232y250W\",\r\n\t\t\t\"r030y000W\",\r\n\t\t\t\"i260p130W\",\r\n\t\t\t\"o532p301W\",\r\n\t\t\t\"y120p202W\",\r\n\t\t\t\"o512b032W\",\r\n\t\t\t\"r002o431W\",\r\n\t\t\t\"o151i131W\",\r\n\t\t\t\"r041p401W\",\r\n\t\t\t\"y010b342W\",\r\n\t\t\t\"o322y250W\",\r\n\t\t\t\"g300b260W\",\r\n\t\t\t\"o542i110W\",\r\n\t\t\t\"y321g260W\",\r\n\t\t\t\"r252p011W\",\r\n\t\t\t\"r032i000W\",\r\n\t\t\t\"b130i100W\",\r\n\t\t\t\"o441p420W\",\r\n\t\t\t\"b030p521W\",\r\n\t\t\t\"b110p140W\",\r\n\t\t\t\"o511b040W\",\r\n\t\t\t\"y030g321W\",\r\n\t\t\t\"r101p530W\",\r\n\t\t\t\"b000p031W\",\r\n\t\t\t\"g260p222W\",\r\n\t\t\t\"o530p331W\",\r\n\t\t\t\"r020y441W\",\r\n\t\t\t\"r201p440W\",\r\n\t\t\t\"r011y352W\",\r\n\t\t\t\"y521g330W\",\r\n\t\t\t\"r241o310W\",\r\n\t\t\t\"i211p231W\",\r\n\t\t\t\"b342p000W\",\r\n\t\t\t\"b511p242W\",\r\n\t\t\t\"r151b012W\",\r\n\t\t\t\"y560p011W\",\r\n\t\t\t\"y560g001W\",\r\n\t\t\t\"b121i131W\",\r\n\t\t\t\"g540p311W\",\r\n\t\t\t\"y530p041W\",\r\n\t\t\t\"o532b221W\",\r\n\t\t\t\"b450i013W\",\r\n\t\t\t\"r010o231W\",\r\n\t\t\t\"r111y040W\",\r\n\t\t\t\"o012b040W\",\r\n\t\t\t\"o542b001W\",\r\n\t\t\t\"o401i040W\",\r\n\t\t\t\"b511i013W\",\r\n\t\t\t\"y000b250W\",\r\n\t\t\t\"y111b141W\",\r\n\t\t\t\"r252g242W\",\r\n\t\t\t\"r241i010W\",\r\n\t\t\t\"o460i020W\",\r\n\t\t\t\"g321p401W\",\r\n\t\t\t\"g540p401W\",\r\n\t\t\t\"o251i231W\",\r\n\t\t\t\"b450p331W\",\r\n\t\t\t\"b040p511W\",\r\n\t\t\t\"o001g530W\",\r\n\t\t\t\"o542i003W\",\r\n\t\t\t\"r020b040W\",\r\n\t\t\t\"g512b141W\",\r\n\t\t\t\"y000b130W\",\r\n\t\t\t\"i000p531W\",\r\n\t\t\t\"y220b032W\",\r\n\t\t\t\"y321b040W\",\r\n\t\t\t\"o302i032W\",\r\n\t\t\t\"y010p440W\",\r\n\t\t\t\"o260i111W\",\r\n\t\t\t\"r222y020W\",\r\n\t\t\t\"o001b531W\",\r\n\t\t\t\"r042i003W\",\r\n\t\t\t\"r252y421W\",\r\n\t\t\t\"o222b531W\",\r\n\t\t\t\"o022g501W\",\r\n\t\t\t\"o262i003W\",\r\n\t\t\t\"o430p541W\",\r\n\t\t\t\"r140o302W\",\r\n\t\t\t\"r012i260W\",\r\n\t\t\t\"o401y230W\",\r\n\t\t\t\"i040p330W\",\r\n\t\t\t\"o540g000W\",\r\n\t\t\t\"b231i000W\",\r\n\t\t\t\"y010g252W\",\r\n\t\t\t\"y352i211W\",\r\n\t\t\t\"b400i260W\",\r\n\t\t\t\"r250b020W\",\r\n\t\t\t\"r032o401W\",\r\n\t\t\t\"o342i010W\",\r\n\t\t\t\"y040g310W\",\r\n\t\t\t\"y521b331W\",\r\n\t\t\t\"r030o312W\",\r\n\t\t\t\"o302i033W\",\r\n\t\t\t\"r242o211W\",\r\n\t\t\t\"r010p041W\",\r\n\t\t\t\"y020b331W\",\r\n\t\t\t\"o262p130W\",\r\n\t\t\t\"i020p231W\",\r\n\t\t\t\"i230p041W\",\r\n\t\t\t\"g140b400W\",\r\n\t\t\t\"o401b021W\",\r\n\t\t\t\"o460g532W\",\r\n\t\t\t\"o151g020W\",\r\n\t\t\t\"b141p202W\",\r\n\t\t\t\"r230p401W\",\r\n\t\t\t\"g520b042W\",\r\n\t\t\t\"r000o031W\",\r\n\t\t\t\"o401p221W\",\r\n\t\t\t\"r201p530W\",\r\n\t\t\t\"r010b312W\",\r\n\t\t\t\"g230b231W\",\r\n\t\t\t\"y511g532W\",\r\n\t\t\t\"g110i241W\",\r\n\t\t\t\"g230p222W\",\r\n\t\t\t\"o231g262W\",\r\n\t\t\t\"r230g262W\",\r\n\t\t\t\"o501b260W\",\r\n\t\t\t\"y352i002W\",\r\n\t\t\t\"r120y200W\",\r\n\t\t\t\"i111p440W\",\r\n\t\t\t\"r241i100W\",\r\n\t\t\t\"g120i231W\",\r\n\t\t\t\"r032p301W\",\r\n\t\t\t\"o042g321W\",\r\n\t\t\t\"g262b231W\",\r\n\t\t\t\"o401i130W\",\r\n\t\t\t\"r020p000W\",\r\n\t\t\t\"g262b111W\",\r\n\t\t\t\"r002o031W\",\r\n\t\t\t\"o262i021W\",\r\n\t\t\t\"i003p331W\",\r\n\t\t\t\"g110i032W\",\r\n\t\t\t\"b322i032W\",\r\n\t\t\t\"r041p330W\",\r\n\t\t\t\"y341p202W\",\r\n\t\t\t\"r041b010W\",\r\n\t\t\t\"o302g532W\",\r\n\t\t\t\"r250o530W\",\r\n\t\t\t\"r001b260W\",\r\n\t\t\t\"r220o512W\",\r\n\t\t\t\"g000b250W\",\r\n\t\t\t\"r151i121W\",\r\n\t\t\t\"o302b000W\",\r\n\t\t\t\"y511i241W\",\r\n\t\t\t\"r111p151W\",\r\n\t\t\t\"o000i040W\",\r\n\t\t\t\"r041y322W\",\r\n\t\t\t\"y332b260W\",\r\n\t\t\t\"b010p541W\",\r\n\t\t\t\"r030b221W\",\r\n\t\t\t\"g331p301W\",\r\n\t\t\t\"y560b420W\",\r\n\t\t\t\"b042p301W\",\r\n\t\t\t\"r041p121W\",\r\n\t\t\t\"r101o231W\",\r\n\t\t\t\"o460p440W\",\r\n\t\t\t\"r002y341W\",\r\n\t\t\t\"o501g330W\",\r\n\t\t\t\"y352b000W\",\r\n\t\t\t\"r002o151W\",\r\n\t\t\t\"r242b520W\",\r\n\t\t\t\"o431p341W\",\r\n\t\t\t\"o501p340W\",\r\n\t\t\t\"i110p151W\",\r\n\t\t\t\"y560p411W\",\r\n\t\t\t\"i033p212W\",\r\n\t\t\t\"y040p111W\",\r\n\t\t\t\"o251p501W\",\r\n\t\t\t\"b331i013W\",\r\n\t\t\t\"o100p041W\",\r\n\t\t\t\"b450p140W\",\r\n\t\t\t\"r000b131W\",\r\n\t\t\t\"r252g300W\",\r\n\t\t\t\"o342y200W\",\r\n\t\t\t\"g010p111W\",\r\n\t\t\t\"o332y521W\",\r\n\t\t\t\"r221i000W\",\r\n\t\t\t\"r030p301W\",\r\n\t\t\t\"o012g262W\",\r\n\t\t\t\"r151b400W\",\r\n\t\t\t\"r250o232W\",\r\n\t\t\t\"r141y010W\",\r\n\t\t\t\"r151y342W\",\r\n\t\t\t\"y250i110W\",\r\n\t\t\t\"o460p320W\",\r\n\t\t\t\"o030p501W\",\r\n\t\t\t\"o512b450W\",\r\n\t\t\t\"y200b141W\",\r\n\t\t\t\"y040b120W\",\r\n\t\t\t\"o401g331W\",\r\n\t\t\t\"o100p130W\",\r\n\t\t\t\"y250i230W\",\r\n\t\t\t\"o000b260W\",\r\n\t\t\t\"o001p242W\",\r\n\t\t\t\"y521b020W\",\r\n\t\t\t\"o401p430W\",\r\n\t\t\t\"b100i023W\",\r\n\t\t\t\"o221y541W\",\r\n\t\t\t\"o020g221W\",\r\n\t\t\t\"b100p221W\",\r\n\t\t\t\"g130p401W\",\r\n\t\t\t\"y210g232W\",\r\n\t\t\t\"r140b312W\",\r\n\t\t\t\"o222p242W\",\r\n\t\t\t\"r002g130W\",\r\n\t\t\t\"r242o020W\",\r\n\t\t\t\"o030b421W\",\r\n\t\t\t\"r031g300W\",\r\n\t\t\t\"o431y560W\",\r\n\t\t\t\"r212y342W\",\r\n\t\t\t\"g010i211W\",\r\n\t\t\t\"b250i020W\",\r\n\t\t\t\"r131o262W\",\r\n\t\t\t\"g001b450W\",\r\n\t\t\t\"i010p450W\",\r\n\t\t\t\"r140o230W\",\r\n\t\t\t\"y000b530W\",\r\n\t\t\t\"y352i020W\",\r\n\t\t\t\"o211y000W\"\r\n\t};\r\n\r\n\t//1017\r\n\tpublic static final String[] wizards = new String[]{\r\n\t\t\t\"29Wg41i01\",\r\n\t\t\t\"57Wr22i23\",\r\n\t\t\t\"97Wo33b42\",\r\n\t\t\t\"80Wo30g41\",\r\n\t\t\t\"172Wy21p50\",\r\n\t\t\t\"175Wo11i31\",\r\n\t\t\t\"180Wg10p12\",\r\n\t\t\t\"272Wb22i51\",\r\n\t\t\t\"102Wo40g02\",\r\n\t\t\t\"187Wg02b40\",\r\n\t\t\t\"168Wo22i41\",\r\n\t\t\t\"171Wo20g60\",\r\n\t\t\t\"376Wr51o52\",\r\n\t\t\t\"155Wr30o20\",\r\n\t\t\t\"140Wo10b30\",\r\n\t\t\t\"46Wb21p50\",\r\n\t\t\t\"307Wi31p10\",\r\n\t\t\t\"307Wi31p11\",\r\n\t\t\t\"307Wi31p12\",\r\n\t\t\t\"281Wr33g02\",\r\n\t\t\t\"84Wb03i11\",\r\n\t\t\t\"281Wr33g01\",\r\n\t\t\t\"184Wr32p20\",\r\n\t\t\t\"187Wg02b30\",\r\n\t\t\t\"310Wo33g20\",\r\n\t\t\t\"187Wg02b31\",\r\n\t\t\t\"334Wr21p23\",\r\n\t\t\t\"41Wr52p40\",\r\n\t\t\t\"172Wy40i02\",\r\n\t\t\t\"152Wg52p00\",\r\n\t\t\t\"41Wr62p50\",\r\n\t\t\t\"226Wy03b31\",\r\n\t\t\t\"184Wy42p20\",\r\n\t\t\t\"340Wg00p40\",\r\n\t\t\t\"33Wb22i11\",\r\n\t\t\t\"227Wo50b03\",\r\n\t\t\t\"227Wr32o50\",\r\n\t\t\t\"171Wo20g40\",\r\n\t\t\t\"132Wo30i03\",\r\n\t\t\t\"134Wo11i21\",\r\n\t\t\t\"190Wy53i33\",\r\n\t\t\t\"138Wi22p00\",\r\n\t\t\t\"289Wo60y21\",\r\n\t\t\t\"301Wy13i32\",\r\n\t\t\t\"190Wr30y62\",\r\n\t\t\t\"265Wr20o30\",\r\n\t\t\t\"80Wr33o40\",\r\n\t\t\t\"354Wb30i22\",\r\n\t\t\t\"80Wo30g52\",\r\n\t\t\t\"130Wo03p52\",\r\n\t\t\t\"191Wr50g31\",\r\n\t\t\t\"79Wo03i11\",\r\n\t\t\t\"175Wg21i32\",\r\n\t\t\t\"340Wg00p30\",\r\n\t\t\t\"246Wr30o60\",\r\n\t\t\t\"227Wo50b12\",\r\n\t\t\t\"227Wo50b13\",\r\n\t\t\t\"171Wo20g50\",\r\n\t\t\t\"319Wo41y31\",\r\n\t\t\t\"204Wo52g50\",\r\n\t\t\t\"301Wb31i32\",\r\n\t\t\t\"172Wy30i22\",\r\n\t\t\t\"303Wi52p40\",\r\n\t\t\t\"157Wg40i60\",\r\n\t\t\t\"125Wo60y62\",\r\n\t\t\t\"272Wr20p01\",\r\n\t\t\t\"46Wr22i42\",\r\n\t\t\t\"55Wr42p52\",\r\n\t\t\t\"122Wb53i03\",\r\n\t\t\t\"154Wg22b11\",\r\n\t\t\t\"155Wr40o10\",\r\n\t\t\t\"80Wo40g52\",\r\n\t\t\t\"55Wr42p50\",\r\n\t\t\t\"2Wo20i12\",\r\n\t\t\t\"240Wb22p10\",\r\n\t\t\t\"41Wr62p40\",\r\n\t\t\t\"154Wr30p60\",\r\n\t\t\t\"109Wo11i03\",\r\n\t\t\t\"204Wo52g60\",\r\n\t\t\t\"184Wr22p20\",\r\n\t\t\t\"209Wy51i42\",\r\n\t\t\t\"299Wo11p20\",\r\n\t\t\t\"138Wg20i22\",\r\n\t\t\t\"152Wg52p12\",\r\n\t\t\t\"102Wr10p20\",\r\n\t\t\t\"138Wi22p10\",\r\n\t\t\t\"55Wr42p60\",\r\n\t\t\t\"366Wo30p23\",\r\n\t\t\t\"2Wo20i02\",\r\n\t\t\t\"138Wi22p11\",\r\n\t\t\t\"132Wo30i13\",\r\n\t\t\t\"370Wo33g10\",\r\n\t\t\t\"190Wy53i43\",\r\n\t\t\t\"246Wr20o60\",\r\n\t\t\t\"129Wr33o00\",\r\n\t\t\t\"187Wb40p51\",\r\n\t\t\t\"362Wy62g41\",\r\n\t\t\t\"41Wo41p50\",\r\n\t\t\t\"55Wr32p60\",\r\n\t\t\t\"361Wr60g13\",\r\n\t\t\t\"46Wi31p52\",\r\n\t\t\t\"132Wo20i03\",\r\n\t\t\t\"138Wg42i22\",\r\n\t\t\t\"46Wi31p50\",\r\n\t\t\t\"327Wr53i03\",\r\n\t\t\t\"246Wb53p50\",\r\n\t\t\t\"80Wr43o40\",\r\n\t\t\t\"117Wr40g02\",\r\n\t\t\t\"122Wr60i13\",\r\n\t\t\t\"132Wo30g02\",\r\n\t\t\t\"370Wo33g22\",\r\n\t\t\t\"91Wi42p01\",\r\n\t\t\t\"29Wg41i12\",\r\n\t\t\t\"157Wg30i51\",\r\n\t\t\t\"102Wo40g21\",\r\n\t\t\t\"88Wr60o30\",\r\n\t\t\t\"157Wg30i52\",\r\n\t\t\t\"147Wy23i41\",\r\n\t\t\t\"246Wb53p42\",\r\n\t\t\t\"125Wo60y51\",\r\n\t\t\t\"55Wg31p50\",\r\n\t\t\t\"32Wb40i01\",\r\n\t\t\t\"289Wo50y21\",\r\n\t\t\t\"45Wy42b43\",\r\n\t\t\t\"127Wo50p41\",\r\n\t\t\t\"80Wo40g41\",\r\n\t\t\t\"190Wr20y62\",\r\n\t\t\t\"122Wr60i03\",\r\n\t\t\t\"215Wo10i30\",\r\n\t\t\t\"172Wy30i02\",\r\n\t\t\t\"369Wo52p31\",\r\n\t\t\t\"91Wg32i31\",\r\n\t\t\t\"240Wb22p00\",\r\n\t\t\t\"319Wo51y31\",\r\n\t\t\t\"258Wy22i13\",\r\n\t\t\t\"48Wy03g51\",\r\n\t\t\t\"67Wo00p50\",\r\n\t\t\t\"31Wr22p33\",\r\n\t\t\t\"173Wi40p50\",\r\n\t\t\t\"32Wb40i12\",\r\n\t\t\t\"132Wo20i23\",\r\n\t\t\t\"301Wy21i32\",\r\n\t\t\t\"245Wg41b02\",\r\n\t\t\t\"129Wy11b22\",\r\n\t\t\t\"130Wr60b10\",\r\n\t\t\t\"102Wr00p20\",\r\n\t\t\t\"258Wy22i23\",\r\n\t\t\t\"281Wy41g02\",\r\n\t\t\t\"117Wr30g01\",\r\n\t\t\t\"62Wo33i21\",\r\n\t\t\t\"132Wo20i13\",\r\n\t\t\t\"117Wr30g02\",\r\n\t\t\t\"154Wr40p60\",\r\n\t\t\t\"160Wo42g01\",\r\n\t\t\t\"192Wo20b30\",\r\n\t\t\t\"132Wo30g12\",\r\n\t\t\t\"130Wr60b21\",\r\n\t\t\t\"330Wo50g01\",\r\n\t\t\t\"132Wo20g02\",\r\n\t\t\t\"54Wo11i42\",\r\n\t\t\t\"172Wy20i02\",\r\n\t\t\t\"103Wy13i43\",\r\n\t\t\t\"102Wi13p20\",\r\n\t\t\t\"122Wr60o12\",\r\n\t\t\t\"54Wo11i41\",\r\n\t\t\t\"75Wb01i00\",\r\n\t\t\t\"109Wo10y51\",\r\n\t\t\t\"246Wr30b53\",\r\n\t\t\t\"352Wr23o31\",\r\n\t\t\t\"248Wy31i13\",\r\n\t\t\t\"46Wy10i31\",\r\n\t\t\t\"103Wy13i53\",\r\n\t\t\t\"36Wo40i31\",\r\n\t\t\t\"204Wo52g40\",\r\n\t\t\t\"8Wb32p33\",\r\n\t\t\t\"267Wo30p52\",\r\n\t\t\t\"88Wr50o30\",\r\n\t\t\t\"90Wo60g52\",\r\n\t\t\t\"198Wb00p33\",\r\n\t\t\t\"103Wo00i53\",\r\n\t\t\t\"275Wr43g00\",\r\n\t\t\t\"2Wo20i22\",\r\n\t\t\t\"246Wb43p42\",\r\n\t\t\t\"281Wr43g02\",\r\n\t\t\t\"330Wo50g23\",\r\n\t\t\t\"114Wy12b11\",\r\n\t\t\t\"321Wo23g22\",\r\n\t\t\t\"132Wo20g21\",\r\n\t\t\t\"320Wg41b13\",\r\n\t\t\t\"75Wr03b01\",\r\n\t\t\t\"140Wg13i51\",\r\n\t\t\t\"140Wg13i52\",\r\n\t\t\t\"377Wg23p12\",\r\n\t\t\t\"281Wo51g02\",\r\n\t\t\t\"114Wy12b00\",\r\n\t\t\t\"48Wo00g41\",\r\n\t\t\t\"321Wo12y53\",\r\n\t\t\t\"345Wo20y22\",\r\n\t\t\t\"132Wo20g12\",\r\n\t\t\t\"320Wg41b03\",\r\n\t\t\t\"33Wg20i11\",\r\n\t\t\t\"145Wo43p50\",\r\n\t\t\t\"122Wr60o22\",\r\n\t\t\t\"48Wy13g51\",\r\n\t\t\t\"127Wy62b21\",\r\n\t\t\t\"172Wr11y21\",\r\n\t\t\t\"255Wr22o20\",\r\n\t\t\t\"321Wo23g42\",\r\n\t\t\t\"102Wi03p20\",\r\n\t\t\t\"162Wr20y03\",\r\n\t\t\t\"96Wy41i53\",\r\n\t\t\t\"310Wr32o33\",\r\n\t\t\t\"303Wi60p40\",\r\n\t\t\t\"301Wi32p10\",\r\n\t\t\t\"48Wo00g51\",\r\n\t\t\t\"248Wy31g03\",\r\n\t\t\t\"307Wi31p00\",\r\n\t\t\t\"301Wi32p12\",\r\n\t\t\t\"213Wo41b22\",\r\n\t\t\t\"301Wy23i32\",\r\n\t\t\t\"18Wi51p41\",\r\n\t\t\t\"154Wr40p50\",\r\n\t\t\t\"154Wr40p52\",\r\n\t\t\t\"122Wr50o12\",\r\n\t\t\t\"127Wy62b32\",\r\n\t\t\t\"187Wg02b20\",\r\n\t\t\t\"172Wo53i02\",\r\n\t\t\t\"162Wr20y13\",\r\n\t\t\t\"129Wo00b31\",\r\n\t\t\t\"2Wb51i02\",\r\n\t\t\t\"48Wy03g41\",\r\n\t\t\t\"364Wo33b40\",\r\n\t\t\t\"320Wg41b23\",\r\n\t\t\t\"204Wo52i42\",\r\n\t\t\t\"301Wi32p00\",\r\n\t\t\t\"1Wb40i50\",\r\n\t\t\t\"246Wr20b53\",\r\n\t\t\t\"137Wi21p40\",\r\n\t\t\t\"154Wr40p41\",\r\n\t\t\t\"191Wr60g31\",\r\n\t\t\t\"369Wo51i03\",\r\n\t\t\t\"132Wg02p41\",\r\n\t\t\t\"108Wy20p10\",\r\n\t\t\t\"132Wg02p40\",\r\n\t\t\t\"175Wg20p30\",\r\n\t\t\t\"2Wy33i02\",\r\n\t\t\t\"138Wb23i13\",\r\n\t\t\t\"172Wr00y30\",\r\n\t\t\t\"228Wr33i01\",\r\n\t\t\t\"122Wr50g40\",\r\n\t\t\t\"130Wr50i12\",\r\n\t\t\t\"138Wr62i13\",\r\n\t\t\t\"216Wr62p41\",\r\n\t\t\t\"289Wo60b32\",\r\n\t\t\t\"343Wy33p00\",\r\n\t\t\t\"221Wy21p40\",\r\n\t\t\t\"108Wi51p00\",\r\n\t\t\t\"34Wo31i32\",\r\n\t\t\t\"191Wr50o10\",\r\n\t\t\t\"108Wy20p00\",\r\n\t\t\t\"152Wr33p10\",\r\n\t\t\t\"187Wo50y33\",\r\n\t\t\t\"362Wg50i40\",\r\n\t\t\t\"187Wo50y32\",\r\n\t\t\t\"327Wr43g20\",\r\n\t\t\t\"75Wr13b01\",\r\n\t\t\t\"172Wr00y21\",\r\n\t\t\t\"172Wr00y20\",\r\n\t\t\t\"122Wr50g30\",\r\n\t\t\t\"33Wg10i12\",\r\n\t\t\t\"33Wg10i11\",\r\n\t\t\t\"130Wr50i01\",\r\n\t\t\t\"31Wg42p33\",\r\n\t\t\t\"108Wi51p12\",\r\n\t\t\t\"108Wi51p10\",\r\n\t\t\t\"343Wy33p10\",\r\n\t\t\t\"152Wr33p00\",\r\n\t\t\t\"187Wr00y42\",\r\n\t\t\t\"50Wo13g20\",\r\n\t\t\t\"186Wb11i32\",\r\n\t\t\t\"190Wr20p10\",\r\n\t\t\t\"190Wr20p11\",\r\n\t\t\t\"191Wo11g12\",\r\n\t\t\t\"190Wr20p12\",\r\n\t\t\t\"297Wo52y20\",\r\n\t\t\t\"108Wy21b41\",\r\n\t\t\t\"375Wr50o20\",\r\n\t\t\t\"146Wy33g51\",\r\n\t\t\t\"182Wo60b22\",\r\n\t\t\t\"273Wy53i21\",\r\n\t\t\t\"313Wo30g42\",\r\n\t\t\t\"8Wb41p33\",\r\n\t\t\t\"255Wr21o20\",\r\n\t\t\t\"324Wo53y42\",\r\n\t\t\t\"74Wo21g01\",\r\n\t\t\t\"76Wb50p52\",\r\n\t\t\t\"187Wr00y32\",\r\n\t\t\t\"172Wb33i02\",\r\n\t\t\t\"154Wb11p50\",\r\n\t\t\t\"190Wr20p00\",\r\n\t\t\t\"172Wr00y40\",\r\n\t\t\t\"228Wr33i12\",\r\n\t\t\t\"167Wr40y62\",\r\n\t\t\t\"175Wg20p40\",\r\n\t\t\t\"165Wo20p11\",\r\n\t\t\t\"62Wg23i13\",\r\n\t\t\t\"182Wo60b11\",\r\n\t\t\t\"245Wg41p31\",\r\n\t\t\t\"258Wo10g40\",\r\n\t\t\t\"336Wr00b52\",\r\n\t\t\t\"340Wg12i31\",\r\n\t\t\t\"46Wb21i42\",\r\n\t\t\t\"184Wy50p20\",\r\n\t\t\t\"377Wo02p01\",\r\n\t\t\t\"175Wr02i31\",\r\n\t\t\t\"46Wr13i42\",\r\n\t\t\t\"185Wr43i22\",\r\n\t\t\t\"106Wi43p31\",\r\n\t\t\t\"240Wb22i43\",\r\n\t\t\t\"46Wb21i31\",\r\n\t\t\t\"2Wy43i02\",\r\n\t\t\t\"31Wr32p33\",\r\n\t\t\t\"362Wr23g41\",\r\n\t\t\t\"1Wo60i41\",\r\n\t\t\t\"127Wo40g10\",\r\n\t\t\t\"1Wo60i42\",\r\n\t\t\t\"46Wy01i31\",\r\n\t\t\t\"106Wr02p11\",\r\n\t\t\t\"330Wy62p30\",\r\n\t\t\t\"46Wb33i43\",\r\n\t\t\t\"46Wr13i31\",\r\n\t\t\t\"313Wy12p11\",\r\n\t\t\t\"258Wo10g60\",\r\n\t\t\t\"218Wy11p30\",\r\n\t\t\t\"48Wy03b10\",\r\n\t\t\t\"244Wo52i31\",\r\n\t\t\t\"135Wr60g03\",\r\n\t\t\t\"130Wr60i01\",\r\n\t\t\t\"76Wo42p52\",\r\n\t\t\t\"128Wb22i01\",\r\n\t\t\t\"167Wr50y62\",\r\n\t\t\t\"167Wr50y60\",\r\n\t\t\t\"197Wr22o12\",\r\n\t\t\t\"168Wg13i41\",\r\n\t\t\t\"319Wy50b53\",\r\n\t\t\t\"124Wo20b10\",\r\n\t\t\t\"127Wo40g00\",\r\n\t\t\t\"190Wg32p00\",\r\n\t\t\t\"198Wb01p33\",\r\n\t\t\t\"135Wr60g10\",\r\n\t\t\t\"172Wo62i02\",\r\n\t\t\t\"361Wr50y31\",\r\n\t\t\t\"258Wo10g50\",\r\n\t\t\t\"130Wr60i12\",\r\n\t\t\t\"167Wr50y52\",\r\n\t\t\t\"264Wr52p43\",\r\n\t\t\t\"167Wr50y51\",\r\n\t\t\t\"336Wr00b41\",\r\n\t\t\t\"76Wb60p52\",\r\n\t\t\t\"358Wr20o50\",\r\n\t\t\t\"319Wy50b62\",\r\n\t\t\t\"111Wr23p52\",\r\n\t\t\t\"227Wo50p52\",\r\n\t\t\t\"347Wo11i01\",\r\n\t\t\t\"157Wo41i52\",\r\n\t\t\t\"138Wb43i21\",\r\n\t\t\t\"157Wo41i51\",\r\n\t\t\t\"289Wo50y30\",\r\n\t\t\t\"137Wr60o23\",\r\n\t\t\t\"172Wi02p60\",\r\n\t\t\t\"185Wr33i22\",\r\n\t\t\t\"337Wo52g12\",\r\n\t\t\t\"184Wy40p20\",\r\n\t\t\t\"361Wy31i43\",\r\n\t\t\t\"198Wy32p33\",\r\n\t\t\t\"199Wg32i01\",\r\n\t\t\t\"192Wg10i51\",\r\n\t\t\t\"193Wo40y03\",\r\n\t\t\t\"130Wb30p40\",\r\n\t\t\t\"147Wg12i41\",\r\n\t\t\t\"117Wr41o33\",\r\n\t\t\t\"80Wo21g41\",\r\n\t\t\t\"243Wy31p30\",\r\n\t\t\t\"347Wo11i12\",\r\n\t\t\t\"70Wr50p62\",\r\n\t\t\t\"329Wr11o12\",\r\n\t\t\t\"172Wi02p52\",\r\n\t\t\t\"172Wi02p50\",\r\n\t\t\t\"2Wy53i02\",\r\n\t\t\t\"176Wr42y62\",\r\n\t\t\t\"289Wo50y40\",\r\n\t\t\t\"18Wr23p32\",\r\n\t\t\t\"366Wo20p23\",\r\n\t\t\t\"58Wo13y02\",\r\n\t\t\t\"193Wo40y13\",\r\n\t\t\t\"332Wb03i13\",\r\n\t\t\t\"91Wo23i31\",\r\n\t\t\t\"227Wo50p31\",\r\n\t\t\t\"347Wg20i00\",\r\n\t\t\t\"347Wg20i01\",\r\n\t\t\t\"368Wg03b10\",\r\n\t\t\t\"184Wr23y42\",\r\n\t\t\t\"122Wr50i13\",\r\n\t\t\t\"368Wg03b11\",\r\n\t\t\t\"124Wo30b10\",\r\n\t\t\t\"45Wi50p00\",\r\n\t\t\t\"16Wo50i11\",\r\n\t\t\t\"108Wr13y21\",\r\n\t\t\t\"252Wo32b31\",\r\n\t\t\t\"147Wy22i41\",\r\n\t\t\t\"330Wy62p40\",\r\n\t\t\t\"281Wg02p22\",\r\n\t\t\t\"327Wr43i03\",\r\n\t\t\t\"91Wo23i42\",\r\n\t\t\t\"264Wr42p43\",\r\n\t\t\t\"358Wr30o50\",\r\n\t\t\t\"233Wo20i30\",\r\n\t\t\t\"157Wg40i52\",\r\n\t\t\t\"41Wr43p40\",\r\n\t\t\t\"157Wg40i51\",\r\n\t\t\t\"122Wr50i03\",\r\n\t\t\t\"222Wg41i31\",\r\n\t\t\t\"222Wg41i32\",\r\n\t\t\t\"16Wo50i22\",\r\n\t\t\t\"117Wo22g02\",\r\n\t\t\t\"42Wo50p22\",\r\n\t\t\t\"33Wr30i12\",\r\n\t\t\t\"293Wb53i12\",\r\n\t\t\t\"247Wy02g52\",\r\n\t\t\t\"310Wg20p51\",\r\n\t\t\t\"327Wr43i13\",\r\n\t\t\t\"122Wr60g40\",\r\n\t\t\t\"16Wo40i22\",\r\n\t\t\t\"79Wo13i11\",\r\n\t\t\t\"101Wg03b32\",\r\n\t\t\t\"180Wy21i53\",\r\n\t\t\t\"193Wo50y03\",\r\n\t\t\t\"330Wo50p40\",\r\n\t\t\t\"238Wy31b21\",\r\n\t\t\t\"187Wo60y32\",\r\n\t\t\t\"293Wb53i01\",\r\n\t\t\t\"172Wi12p60\",\r\n\t\t\t\"138Wb33i13\",\r\n\t\t\t\"206Wg22b13\",\r\n\t\t\t\"176Wb00i53\",\r\n\t\t\t\"41Wr53p40\",\r\n\t\t\t\"33Wb13i03\",\r\n\t\t\t\"226Wi00p60\",\r\n\t\t\t\"122Wr60g30\",\r\n\t\t\t\"101Wg03b20\",\r\n\t\t\t\"154Wb03p50\",\r\n\t\t\t\"376Wr60p23\",\r\n\t\t\t\"376Wr60p21\",\r\n\t\t\t\"327Wr43i23\",\r\n\t\t\t\"241Wo53p51\",\r\n\t\t\t\"16Wo40i11\",\r\n\t\t\t\"179Wg52i03\",\r\n\t\t\t\"108Wr23y21\",\r\n\t\t\t\"124Wo20y31\",\r\n\t\t\t\"197Wo12b41\",\r\n\t\t\t\"172Wb31i02\",\r\n\t\t\t\"191Wr60o10\",\r\n\t\t\t\"193Wo50y13\",\r\n\t\t\t\"21Wb02i32\",\r\n\t\t\t\"126Wr30y31\",\r\n\t\t\t\"44Wr42i52\",\r\n\t\t\t\"44Wr42i51\",\r\n\t\t\t\"340Wg00i32\",\r\n\t\t\t\"340Wg00i31\",\r\n\t\t\t\"21Wb02i31\",\r\n\t\t\t\"128Wi01p30\",\r\n\t\t\t\"245Wo43i03\",\r\n\t\t\t\"76Wb62p52\",\r\n\t\t\t\"41Wr53p50\",\r\n\t\t\t\"376Wo52i30\",\r\n\t\t\t\"33Wb13i12\",\r\n\t\t\t\"247Wg52b03\",\r\n\t\t\t\"243Wy31p20\",\r\n\t\t\t\"172Wr00b43\",\r\n\t\t\t\"172Wr00b42\",\r\n\t\t\t\"74Wg23p33\",\r\n\t\t\t\"70Wr50p53\",\r\n\t\t\t\"238Wr13y22\",\r\n\t\t\t\"245Wo53i03\",\r\n\t\t\t\"188Wr33p21\",\r\n\t\t\t\"267Wo30y40\",\r\n\t\t\t\"172Wb43i02\",\r\n\t\t\t\"190Wr30p00\",\r\n\t\t\t\"89Wb10i20\",\r\n\t\t\t\"172Wr00b33\",\r\n\t\t\t\"165Wo10p11\",\r\n\t\t\t\"240Wo03b13\",\r\n\t\t\t\"12Wo42p33\",\r\n\t\t\t\"229Wb01i42\",\r\n\t\t\t\"130Wb20p40\",\r\n\t\t\t\"362Wg50p00\",\r\n\t\t\t\"109Wo10i03\",\r\n\t\t\t\"184Wr21p20\",\r\n\t\t\t\"85Wo52y32\",\r\n\t\t\t\"85Wo52y30\",\r\n\t\t\t\"50Wi41p53\",\r\n\t\t\t\"97Wy41b52\",\r\n\t\t\t\"172Wr10p60\",\r\n\t\t\t\"175Wy53g20\",\r\n\t\t\t\"299Wo10p20\",\r\n\t\t\t\"252Wo32g22\",\r\n\t\t\t\"299Wr42o10\",\r\n\t\t\t\"136Wo12b31\",\r\n\t\t\t\"125Wo50i53\",\r\n\t\t\t\"362Wg50p10\",\r\n\t\t\t\"138Wi21p10\",\r\n\t\t\t\"183Wo50p01\",\r\n\t\t\t\"163Wi11p33\",\r\n\t\t\t\"176Wi53p01\",\r\n\t\t\t\"175Wo00i31\",\r\n\t\t\t\"241Wo43y41\",\r\n\t\t\t\"354Wb31i11\",\r\n\t\t\t\"187Wy42i03\",\r\n\t\t\t\"345Wr33o20\",\r\n\t\t\t\"2Wo31i02\",\r\n\t\t\t\"377Wb11p22\",\r\n\t\t\t\"91Wi31p01\",\r\n\t\t\t\"2Wb60i02\",\r\n\t\t\t\"33Wb23i03\",\r\n\t\t\t\"188Wr32p21\",\r\n\t\t\t\"102Wy43p20\",\r\n\t\t\t\"187Wr10o50\",\r\n\t\t\t\"124Wo30y31\",\r\n\t\t\t\"127Wo40b30\",\r\n\t\t\t\"138Wi21p00\",\r\n\t\t\t\"122Wb42i03\",\r\n\t\t\t\"74Wo40y41\",\r\n\t\t\t\"74Wo40y42\",\r\n\t\t\t\"2Wo31i12\",\r\n\t\t\t\"190Wy62g32\",\r\n\t\t\t\"187Wy42i13\",\r\n\t\t\t\"246Wr21b53\",\r\n\t\t\t\"312Wb22i42\",\r\n\t\t\t\"201Wy03i41\",\r\n\t\t\t\"201Wy03i42\",\r\n\t\t\t\"120Wy33b32\",\r\n\t\t\t\"367Wy53i11\",\r\n\t\t\t\"46Wb32p60\",\r\n\t\t\t\"127Wo40b20\",\r\n\t\t\t\"290Wr20p52\",\r\n\t\t\t\"85Wo52y21\",\r\n\t\t\t\"50Wi41p43\",\r\n\t\t\t\"50Wi41p42\",\r\n\t\t\t\"172Wr10p50\",\r\n\t\t\t\"2Wr10o21\",\r\n\t\t\t\"366Wo20b11\",\r\n\t\t\t\"170Wg12i21\",\r\n\t\t\t\"299Wo10p31\",\r\n\t\t\t\"284Wg20b02\",\r\n\t\t\t\"130Wy11p52\",\r\n\t\t\t\"180Wg11p12\",\r\n\t\t\t\"191Wy20p01\",\r\n\t\t\t\"90Wr50o51\",\r\n\t\t\t\"134Wo10i21\",\r\n\t\t\t\"134Wo10i20\",\r\n\t\t\t\"45Wy31b23\",\r\n\t\t\t\"222Wg42i31\",\r\n\t\t\t\"154Wg42p60\",\r\n\t\t\t\"55Wr33p52\",\r\n\t\t\t\"55Wr33p50\",\r\n\t\t\t\"366Wo20b22\",\r\n\t\t\t\"288Wo52y13\",\r\n\t\t\t\"33Wr40i03\",\r\n\t\t\t\"36Wo41i31\",\r\n\t\t\t\"361Wr60y31\",\r\n\t\t\t\"117Wy51g02\",\r\n\t\t\t\"186Wr23i33\",\r\n\t\t\t\"131Wo21y31\",\r\n\t\t\t\"172Wr00p50\",\r\n\t\t\t\"186Wr23i32\",\r\n\t\t\t\"204Wo43i22\",\r\n\t\t\t\"46Wi42p50\",\r\n\t\t\t\"204Wo33i42\",\r\n\t\t\t\"154Wg42p50\",\r\n\t\t\t\"102Wy53p20\",\r\n\t\t\t\"299Wb02p20\",\r\n\t\t\t\"58Wr33y02\",\r\n\t\t\t\"308Wg01b30\",\r\n\t\t\t\"362Wg41b33\",\r\n\t\t\t\"187Wy42g02\",\r\n\t\t\t\"312Wg03i52\",\r\n\t\t\t\"175Wo10i31\",\r\n\t\t\t\"327Wr52i03\",\r\n\t\t\t\"345Wy21b02\",\r\n\t\t\t\"376Wr50o52\",\r\n\t\t\t\"117Wr41g02\",\r\n\t\t\t\"46Wb32p50\",\r\n\t\t\t\"96Wy50i53\",\r\n\t\t\t\"187Wy32i03\",\r\n\t\t\t\"46Wi42p60\",\r\n\t\t\t\"33Wb33i03\",\r\n\t\t\t\"167Wr40b43\",\r\n\t\t\t\"204Wo33i32\",\r\n\t\t\t\"45Wy31b43\",\r\n\t\t\t\"331Wy32g03\",\r\n\t\t\t\"362Wg41b43\",\r\n\t\t\t\"362Wg41b42\",\r\n\t\t\t\"353Wr43o10\",\r\n\t\t\t\"330Wo31g01\",\r\n\t\t\t\"181Wy21g30\",\r\n\t\t\t\"301Wy21b30\",\r\n\t\t\t\"73Wo32g20\",\r\n\t\t\t\"187Wg02p51\",\r\n\t\t\t\"30Wo21b20\",\r\n\t\t\t\"241Wo62p51\",\r\n\t\t\t\"290Wi42p33\",\r\n\t\t\t\"114Wy22g51\",\r\n\t\t\t\"45Wy42p10\",\r\n\t\t\t\"187Wy32i13\",\r\n\t\t\t\"245Wg41i03\",\r\n\t\t\t\"154Wr31p50\",\r\n\t\t\t\"90Wr50o60\",\r\n\t\t\t\"45Wy31b33\",\r\n\t\t\t\"194Wr30y23\",\r\n\t\t\t\"45Wy31b32\",\r\n\t\t\t\"301Wb30i32\",\r\n\t\t\t\"362Wg41b53\",\r\n\t\t\t\"154Wr31p52\",\r\n\t\t\t\"33Wr40i11\",\r\n\t\t\t\"33Wr40i12\",\r\n\t\t\t\"367Wy43i11\",\r\n\t\t\t\"84Wo00i22\",\r\n\t\t\t\"117Wo32g02\",\r\n\t\t\t\"117Wo32g01\",\r\n\t\t\t\"167Wr40b53\",\r\n\t\t\t\"122Wb52i03\",\r\n\t\t\t\"114Wo33p01\",\r\n\t\t\t\"199Wy53i01\",\r\n\t\t\t\"319Wg33b53\",\r\n\t\t\t\"55Wr43p52\",\r\n\t\t\t\"9Wo31y41\",\r\n\t\t\t\"9Wo31y40\",\r\n\t\t\t\"245Wg41i13\",\r\n\t\t\t\"32Wr31i01\",\r\n\t\t\t\"172Wr00p60\",\r\n\t\t\t\"45Wy42p00\",\r\n\t\t\t\"34Wr60p30\",\r\n\t\t\t\"137Wr50i22\",\r\n\t\t\t\"186Wr13i21\",\r\n\t\t\t\"137Wr50i21\",\r\n\t\t\t\"371Wo40b02\",\r\n\t\t\t\"17Wg23b13\",\r\n\t\t\t\"45Wy42g13\",\r\n\t\t\t\"254Wg23i11\",\r\n\t\t\t\"26Wo42b40\",\r\n\t\t\t\"104Wo60p30\",\r\n\t\t\t\"224Wo13i53\",\r\n\t\t\t\"70Wr40y30\",\r\n\t\t\t\"256Wr40i22\",\r\n\t\t\t\"186Wr13i32\",\r\n\t\t\t\"303Wi51p40\",\r\n\t\t\t\"170Wg10i21\",\r\n\t\t\t\"48Wo01g51\",\r\n\t\t\t\"34Wr60p22\",\r\n\t\t\t\"34Wr60p20\",\r\n\t\t\t\"172Wy21i02\",\r\n\t\t\t\"290Wr30p33\",\r\n\t\t\t\"356Wr21b20\",\r\n\t\t\t\"187Wy32g02\",\r\n\t\t\t\"184Wr23p20\",\r\n\t\t\t\"199Wy43i01\",\r\n\t\t\t\"2Wb50i02\",\r\n\t\t\t\"180Wo03g10\",\r\n\t\t\t\"102Wy33p20\",\r\n\t\t\t\"277Wy12p52\",\r\n\t\t\t\"281Wo62g02\",\r\n\t\t\t\"117Wr31g02\",\r\n\t\t\t\"12Wy62p33\",\r\n\t\t\t\"102Wr11p20\",\r\n\t\t\t\"50Wr22i41\",\r\n\t\t\t\"12Wy62p31\",\r\n\t\t\t\"227Wo60g62\",\r\n\t\t\t\"48Wy13b21\",\r\n\t\t\t\"338Wo40b33\",\r\n\t\t\t\"9Wo52g00\",\r\n\t\t\t\"113Wr20i30\",\r\n\t\t\t\"2Wo21i02\",\r\n\t\t\t\"186Wr23g52\",\r\n\t\t\t\"330Wy62g23\",\r\n\t\t\t\"281Wr42g02\",\r\n\t\t\t\"127Wo40y62\",\r\n\t\t\t\"62Wo52i21\",\r\n\t\t\t\"367Wy33i11\",\r\n\t\t\t\"319Wg43b53\",\r\n\t\t\t\"26Wr33o42\",\r\n\t\t\t\"14Wy42i22\",\r\n\t\t\t\"14Wy42i21\",\r\n\t\t\t\"290Wi32p33\",\r\n\t\t\t\"135Wr50g10\",\r\n\t\t\t\"41Wo60b00\",\r\n\t\t\t\"41Wo60b01\",\r\n\t\t\t\"41Wo60b02\",\r\n\t\t\t\"301Wb40i32\",\r\n\t\t\t\"92Wo60g13\",\r\n\t\t\t\"129Wy12b22\",\r\n\t\t\t\"184Wb01i51\",\r\n\t\t\t\"135Wr50g03\",\r\n\t\t\t\"367Wg50i03\",\r\n\t\t\t\"132Wo31g02\",\r\n\t\t\t\"305Wr10o23\",\r\n\t\t\t\"167Wr50b43\",\r\n\t\t\t\"254Wo42i11\",\r\n\t\t\t\"55Wb00p60\",\r\n\t\t\t\"297Wb50i11\",\r\n\t\t\t\"254Wg13i11\",\r\n\t\t\t\"165Wo20y41\",\r\n\t\t\t\"165Wo20y42\",\r\n\t\t\t\"240Wb13p12\",\r\n\t\t\t\"190Wy62g13\",\r\n\t\t\t\"240Wb13p10\",\r\n\t\t\t\"46Wg30p50\",\r\n\t\t\t\"50Wi31p43\",\r\n\t\t\t\"303Wg23i51\",\r\n\t\t\t\"185Wr33o23\",\r\n\t\t\t\"376Wo42p21\",\r\n\t\t\t\"376Wo42p23\",\r\n\t\t\t\"192Wy13i51\",\r\n\t\t\t\"313Wr43g42\",\r\n\t\t\t\"290Wr20p33\",\r\n\t\t\t\"67Wo01p50\",\r\n\t\t\t\"180Wo01g00\",\r\n\t\t\t\"8Wy50p33\",\r\n\t\t\t\"174Wr23b32\",\r\n\t\t\t\"103Wr40y13\",\r\n\t\t\t\"290Wi32p52\",\r\n\t\t\t\"240Wb13p00\",\r\n\t\t\t\"34Wo21i32\",\r\n\t\t\t\"227Wo60g53\",\r\n\t\t\t\"301Wy22i32\",\r\n\t\t\t\"137Wr60i21\",\r\n\t\t\t\"46Wg30p60\",\r\n\t\t\t\"137Wr60i22\",\r\n\t\t\t\"265Wo30i12\",\r\n\t\t\t\"321Wo12g22\",\r\n\t\t\t\"154Wg22p60\",\r\n\t\t\t\"130Wi01p52\",\r\n\t\t\t\"18Wi52p41\",\r\n\t\t\t\"154Wg13b03\",\r\n\t\t\t\"120Wy43b32\",\r\n\t\t\t\"338Wo30b21\",\r\n\t\t\t\"103Wr40y03\",\r\n\t\t\t\"8Wb31p33\",\r\n\t\t\t\"175Wg20i32\",\r\n\t\t\t\"172Wy21i12\",\r\n\t\t\t\"265Wo30i01\",\r\n\t\t\t\"358Wo50g03\",\r\n\t\t\t\"172Wr10y20\",\r\n\t\t\t\"173Wy02b31\",\r\n\t\t\t\"102Wr00o40\",\r\n\t\t\t\"91Wb11i31\",\r\n\t\t\t\"102Wr00o42\",\r\n\t\t\t\"172Wr10y21\",\r\n\t\t\t\"187Wb40i03\",\r\n\t\t\t\"37Wy32p21\",\r\n\t\t\t\"305Wr20o23\",\r\n\t\t\t\"301Wy22i52\",\r\n\t\t\t\"8Wg21p23\",\r\n\t\t\t\"172Wy21i22\",\r\n\t\t\t\"160Wg01b22\",\r\n\t\t\t\"50Wi31p53\",\r\n\t\t\t\"2Wb62i02\",\r\n\t\t\t\"171Wi53p42\",\r\n\t\t\t\"77Wr40o41\",\r\n\t\t\t\"254Wg03i11\",\r\n\t\t\t\"34Wo31i42\",\r\n\t\t\t\"91Wb11i42\",\r\n\t\t\t\"102Wr01p20\",\r\n\t\t\t\"254Wb02i11\",\r\n\t\t\t\"90Wr50i53\",\r\n\t\t\t\"190Wy53p00\",\r\n\t\t\t\"33Wg21i12\",\r\n\t\t\t\"367Wg60i03\",\r\n\t\t\t\"181Wy13b11\",\r\n\t\t\t\"227Wo41p52\",\r\n\t\t\t\"90Wo60b21\",\r\n\t\t\t\"46Wy02i31\",\r\n\t\t\t\"157Wo50i51\",\r\n\t\t\t\"218Wy11b13\",\r\n\t\t\t\"191Wi23p01\",\r\n\t\t\t\"190Wr31p00\",\r\n\t\t\t\"103Wr30y13\",\r\n\t\t\t\"157Wo50i52\",\r\n\t\t\t\"48Wy13p23\",\r\n\t\t\t\"190Wy53p10\",\r\n\t\t\t\"155Wo20g42\",\r\n\t\t\t\"111Wi03p52\",\r\n\t\t\t\"301Wr60b40\",\r\n\t\t\t\"90Wo60b10\",\r\n\t\t\t\"157Wo50i60\",\r\n\t\t\t\"319Wo60y31\",\r\n\t\t\t\"75Wr02b01\",\r\n\t\t\t\"8Wb40p33\",\r\n\t\t\t\"122Wo12p43\",\r\n\t\t\t\"218Wy11b03\",\r\n\t\t\t\"216Wr51p41\",\r\n\t\t\t\"46Wg20p60\",\r\n\t\t\t\"307Wb43i42\",\r\n\t\t\t\"148Wo42g20\",\r\n\t\t\t\"47Wo20b43\",\r\n\t\t\t\"281Wr33p31\",\r\n\t\t\t\"146Wo12g51\",\r\n\t\t\t\"281Wr33p32\",\r\n\t\t\t\"74Wo40p33\",\r\n\t\t\t\"88Wr60y12\",\r\n\t\t\t\"340Wg01i32\",\r\n\t\t\t\"187Wo50g02\",\r\n\t\t\t\"340Wg01i31\",\r\n\t\t\t\"103Wr30y03\",\r\n\t\t\t\"281Wo53g02\",\r\n\t\t\t\"24Wy12i51\",\r\n\t\t\t\"281Wr33p30\",\r\n\t\t\t\"24Wy12i52\",\r\n\t\t\t\"47Wo20b53\",\r\n\t\t\t\"46Wg20p50\",\r\n\t\t\t\"90Wr50g23\",\r\n\t\t\t\"376Wr50b22\",\r\n\t\t\t\"306Wr51g01\",\r\n\t\t\t\"306Wr51g00\",\r\n\t\t\t\"301Wb20p11\",\r\n\t\t\t\"301Wb20p10\",\r\n\t\t\t\"340Wg01i23\",\r\n\t\t\t\"162Wr10y13\",\r\n\t\t\t\"329Wr20o12\",\r\n\t\t\t\"97Wy60b52\",\r\n\t\t\t\"181Wy23b11\",\r\n\t\t\t\"313Wg13p02\",\r\n\t\t\t\"160Wo52g01\",\r\n\t\t\t\"313Wg13p01\",\r\n\t\t\t\"90Wr50g52\",\r\n\t\t\t\"75Wr12b01\",\r\n\t\t\t\"1Wy33i41\",\r\n\t\t\t\"301Wr50b40\",\r\n\t\t\t\"190Wr21p00\",\r\n\t\t\t\"137Wo23p40\",\r\n\t\t\t\"1Wy33i42\",\r\n\t\t\t\"313Wg13p03\",\r\n\t\t\t\"301Wb20p00\",\r\n\t\t\t\"232Wy13b32\",\r\n\t\t\t\"284Wo30g20\",\r\n\t\t\t\"180Wy30i53\",\r\n\t\t\t\"172Wo51i02\",\r\n\t\t\t\"90Wr50g42\",\r\n\t\t\t\"347Wo10i00\",\r\n\t\t\t\"347Wo10i01\",\r\n\t\t\t\"197Wr23o11\",\r\n\t\t\t\"197Wr23o12\",\r\n\t\t\t\"34Wo40i52\",\r\n\t\t\t\"66Wo12g52\",\r\n\t\t\t\"377Wo13p12\",\r\n\t\t\t\"284Wo31y42\",\r\n\t\t\t\"331Wy42g03\",\r\n\t\t\t\"102Wg02p20\",\r\n\t\t\t\"361Wr50g13\",\r\n\t\t\t\"168Wy02i41\",\r\n\t\t\t\"303Wo43b42\",\r\n\t\t\t\"91Wb20i31\",\r\n\t\t\t\"356Wo12i51\",\r\n\t\t\t\"356Wo12i52\",\r\n\t\t\t\"34Wo40i42\",\r\n\t\t\t\"21Wo22i32\",\r\n\t\t\t\"187Wy32b31\",\r\n\t\t\t\"155Wo20g52\",\r\n\t\t\t\"146Wo22g51\",\r\n\t\t\t\"376Wr60b22\",\r\n\t\t\t\"187Wb31i03\",\r\n\t\t\t\"359Wr13g12\",\r\n\t\t\t\"155Wo10i53\",\r\n\t\t\t\"46Wy00i31\",\r\n\t\t\t\"157Wo50g30\",\r\n\t\t\t\"264Wr41p51\",\r\n\t\t\t\"279Wi01p43\",\r\n\t\t\t\"290Wg60p52\",\r\n\t\t\t\"102Wi23p20\",\r\n\t\t\t\"180Wy40i53\",\r\n\t\t\t\"113Wr10i30\",\r\n\t\t\t\"190Wr21p10\",\r\n\t\t\t\"262Wi21p03\",\r\n\t\t\t\"176Wr32i53\",\r\n\t\t\t\"173Wi40p60\",\r\n\t\t\t\"245Wo62i03\",\r\n\t\t\t\"281Wr52g02\",\r\n\t\t\t\"281Wy40g02\",\r\n\t\t\t\"262Wi21p02\",\r\n\t\t\t\"377Wo03p01\",\r\n\t\t\t\"157Wo50g40\",\r\n\t\t\t\"191Wo10g12\",\r\n\t\t\t\"175Wr01i31\",\r\n\t\t\t\"191Wg12i43\",\r\n\t\t\t\"327Wr42i03\",\r\n\t\t\t\"219Wy50i40\",\r\n\t\t\t\"95Wo30b53\",\r\n\t\t\t\"33Wr41i11\",\r\n\t\t\t\"275Wy31p23\",\r\n\t\t\t\"39Wb43i11\",\r\n\t\t\t\"376Wr60o52\",\r\n\t\t\t\"161Wo10g03\",\r\n\t\t\t\"307Wo01i31\",\r\n\t\t\t\"145Wo43g03\",\r\n\t\t\t\"54Wy20i42\",\r\n\t\t\t\"176Wr32i43\",\r\n\t\t\t\"194Wr40y23\",\r\n\t\t\t\"194Wr40y22\",\r\n\t\t\t\"86Wr60o43\",\r\n\t\t\t\"147Wy23i33\",\r\n\t\t\t\"332Wg20b11\",\r\n\t\t\t\"2Wr00o21\",\r\n\t\t\t\"54Wy20i41\",\r\n\t\t\t\"327Wr42i13\",\r\n\t\t\t\"74Wo30p33\",\r\n\t\t\t\"134Wo10b13\",\r\n\t\t\t\"376Wr60o42\",\r\n\t\t\t\"62Wg32i21\",\r\n\t\t\t\"176Wr32i33\",\r\n\t\t\t\"176Wy60i53\",\r\n\t\t\t\"168Wi41p11\",\r\n\t\t\t\"170Wg03i21\",\r\n\t\t\t\"58Wy10b20\",\r\n\t\t\t\"86Wr60o53\",\r\n\t\t\t\"190Wy62b51\",\r\n\t\t\t\"95Wo30b43\",\r\n\t\t\t\"243Wy32p30\",\r\n\t\t\t\"117Wr40o33\",\r\n\t\t\t\"327Wr42i23\",\r\n\t\t\t\"117Wo33g02\",\r\n\t\t\t\"2Wi02p30\",\r\n\t\t\t\"102Wy52p20\",\r\n\t\t\t\"347Wo10i12\",\r\n\t\t\t\"270Wr22o23\",\r\n\t\t\t\"176Wb11i53\",\r\n\t\t\t\"172Wy40p60\",\r\n\t\t\t\"138Wi13p10\",\r\n\t\t\t\"138Wi13p11\",\r\n\t\t\t\"128Wr10b22\",\r\n\t\t\t\"138Wi13p12\",\r\n\t\t\t\"146Wy42g51\",\r\n\t\t\t\"187Wo60i03\",\r\n\t\t\t\"353Wo20i41\",\r\n\t\t\t\"125Wy62b31\",\r\n\t\t\t\"102Wo42g02\",\r\n\t\t\t\"63Wo60p20\",\r\n\t\t\t\"262Wr42i41\",\r\n\t\t\t\"180Wg00p12\",\r\n\t\t\t\"243Wy32p20\",\r\n\t\t\t\"74Wg22p33\",\r\n\t\t\t\"127Wo40p41\",\r\n\t\t\t\"172Wy40p50\",\r\n\t\t\t\"284Wg10p11\",\r\n\t\t\t\"138Wi13p00\",\r\n\t\t\t\"259Wi01p50\",\r\n\t\t\t\"163Wb62i11\",\r\n\t\t\t\"1Wy43i42\",\r\n\t\t\t\"1Wy43i41\",\r\n\t\t\t\"90Wr40o60\",\r\n\t\t\t\"323Wi13p21\",\r\n\t\t\t\"284Wo30g10\",\r\n\t\t\t\"104Wo60g01\",\r\n\t\t\t\"262Wr42i31\",\r\n\t\t\t\"91Wo12i31\",\r\n\t\t\t\"1Wo51i41\",\r\n\t\t\t\"332Wg10b11\",\r\n\t\t\t\"76Wb51p52\",\r\n\t\t\t\"16Wo40y20\",\r\n\t\t\t\"2Wy52i02\",\r\n\t\t\t\"132Wr00o30\",\r\n\t\t\t\"230Wo23b13\",\r\n\t\t\t\"154Wr40g13\",\r\n\t\t\t\"102Wg22p20\",\r\n\t\t\t\"122Wr51i03\",\r\n\t\t\t\"354Wo53i11\",\r\n\t\t\t\"86Wr50o43\",\r\n\t\t\t\"299Wo10y03\",\r\n\t\t\t\"2Wi02p40\",\r\n\t\t\t\"307Wb43i31\",\r\n\t\t\t\"353Wo20i42\",\r\n\t\t\t\"175Wg13i32\",\r\n\t\t\t\"2Wi02p42\",\r\n\t\t\t\"49Wo12p21\",\r\n\t\t\t\"223Wo40g13\",\r\n\t\t\t\"49Wo12p23\",\r\n\t\t\t\"184Wy41p20\",\r\n\t\t\t\"240Wb13i23\",\r\n\t\t\t\"208Wb11i03\",\r\n\t\t\t\"147Wy21i41\",\r\n\t\t\t\"86Wr50o53\",\r\n\t\t\t\"172Wb42i02\",\r\n\t\t\t\"108Wr22y21\",\r\n\t\t\t\"172Wy30p60\",\r\n\t\t\t\"187Wr00o50\",\r\n\t\t\t\"86Wr60o62\",\r\n\t\t\t\"180Wi53p12\",\r\n\t\t\t\"187Wo50i03\",\r\n\t\t\t\"187Wo60g02\",\r\n\t\t\t\"220Wo10b20\",\r\n\t\t\t\"4Wr10b03\",\r\n\t\t\t\"220Wo10b21\",\r\n\t\t\t\"138Wb32i21\",\r\n\t\t\t\"190Wy62b60\",\r\n\t\t\t\"138Wb32i22\",\r\n\t\t\t\"41Wr52p50\",\r\n\t\t\t\"245Wg42p30\",\r\n\t\t\t\"1Wy53i41\",\r\n\t\t\t\"89Wg22i21\",\r\n\t\t\t\"1Wy53i42\",\r\n\t\t\t\"353Wo10i41\",\r\n\t\t\t\"353Wo10i42\",\r\n\t\t\t\"46Wb23p50\",\r\n\t\t\t\"36Wo40b10\",\r\n\t\t\t\"34Wo31p20\",\r\n\t\t\t\"4Wr10b13\",\r\n\t\t\t\"299Wo10y13\",\r\n\t\t\t\"108Wy21i51\",\r\n\t\t\t\"129Wy12g03\"\r\n\t};\r\n\r\n\t/**\r\n\t * @param num 0~31\r\n\t */\r\n\tpublic static String getMasterSolution(int num){\r\n\t\tString puzzle = masters[num].substring(0,4);\r\n\t\tfor (String solution : solutions){\r\n\t\t\tif (solution.contains(puzzle))\r\n\t\t\t\treturn solution.substring(0,28);\r\n\t\t}\r\n\t\treturn \"\";// placeholder\r\n\t}\r\n\r\n\t/**\r\n\t * @param num 0~2307\r\n\t */\r\n\tpublic static String getExpertSolution(int num){\r\n\t\tString puzzle = experts[num];\r\n\t\tfor (String solution : solutions){\r\n\t\t\tif (solution.contains(puzzle.substring(0,4)) && solution.contains(puzzle.substring(4,8)))\r\n\t\t\t\treturn solution.substring(0,28);\r\n\t\t}\r\n\t\treturn \"\";// placeholder\r\n\t}\r\n\r\n\t// all Strings above is results of following methods\r\n\tBoard board = new Board();\r\n\tSet<String> allSolutions = new HashSet<>();//All solutions for a blank board\r\n\tSet<String> allMasterPuzzles = new HashSet<>();//Master puzzles with only 1 solution\r\n\tSet<String> notMasterPuzzles = new HashSet<>();//Master puzzles with more than 1 solutions\r\n\tfinal char[] colors = {'r', 'o', 'y', 'g', 'b', 'i', 'p'};\r\n\tSet<String> allPuzzlesWithTwoPieces = new HashSet<>();\r\n\tSet<String> notPuzzlesWithTwoPieces = new HashSet<>();\r\n\tSet<String> allPuzzlesWithThreePieces = new HashSet<>();\r\n\tSet<String> notPuzzlesWithThreePieces = new HashSet<>();\r\n\tSet<String> allPuzzlesWithFourPieces = new HashSet<>();\r\n\tSet<String> notPuzzlesWithFourPieces = new HashSet<>();\r\n\tSet<String> wizardPuzzles = new HashSet<>();\r\n\r\n\t/**\r\n\t * get all solutions string, each string is 29 characters long with \"W\" at the end\r\n\t */\r\n\tpublic void getAllSolution() {\r\n\t\tString piece;\r\n\t\tchar color;\r\n\t\tif (board.getUnusedColor().isEmpty()) {\r\n\t\t\tallSolutions.add(board.toString());\r\n\t\t}else {\r\n\t\t\tcolor = board.getUnusedColor().toString().charAt(1);\r\n\t\t\tfor (int i = 0; i < 6; i++) {\r\n\t\t\t\tif (color == 'r' || color == 'i')\r\n\t\t\t\t\tif (i > 2)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\t\tfor (int k = 0; k < board.getColors()[j].length; k++) {\r\n\t\t\t\t\t\tpiece = \"\"+color+i+k+j;\r\n\t\t\t\t\t\tif (board.isPieceValid(piece)){\r\n\t\t\t\t\t\t\tboard.placePiece(piece);\r\n\t\t\t\t\t\t\tgetAllSolution();\r\n\t\t\t\t\t\t\tboard.removePiece(piece);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * puzzles with one piece\r\n\t * 32 puzzles\r\n\t */\r\n\tpublic void getAllMasterPiece(){\r\n\t\tString piece;\r\n\t\tfor (char color : board.getUnusedColor()){\r\n\t\t\tfor (int i = 0; i < 6; i++) {\r\n\t\t\t\tif (color == 'r' || color == 'i')\r\n\t\t\t\t\tif (i > 2)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\t\tfor (int k = 0; k < board.getColors()[j].length; k++) {\r\n\t\t\t\t\t\tpiece = \"\"+color+i+k+j;\r\n\t\t\t\t\t\tif (board.isPieceValid(piece)){\r\n\t\t\t\t\t\t\tfor (String solution : allSolutions){\r\n\t\t\t\t\t\t\t\tif (solution.contains(piece))\r\n\t\t\t\t\t\t\t\t\tif (allMasterPuzzles.contains(piece))\r\n\t\t\t\t\t\t\t\t\t\tnotMasterPuzzles.add(piece);\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tallMasterPuzzles.add(piece);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tallMasterPuzzles.removeAll(notMasterPuzzles);\r\n\t}\r\n\r\n\t/*\r\n\t * this method is used to find all puzzles with 2 given pieces\r\n\t * this method got 2308 puzzles\r\n\t */\r\n\tpublic void getAllPuzzlesWithTwoPieces(){\r\n\t\tString piece1,piece2;\r\n\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\tfor (int j = 0; j < 6; j++) {\r\n\t\t\t\tif (colors[i] == 'r' || colors[i] == 'i')\r\n\t\t\t\t\tif (j > 2)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int k = 0; k < 4; k++) {\r\n\t\t\t\t\tfor (int l = 0; l < board.getColors()[k].length; l++) {\r\n\t\t\t\t\t\tpiece1 = \"\" + colors[i] + j + l + k;\r\n\t\t\t\t\t\tif (board.isPieceValid(piece1)){\r\n\t\t\t\t\t\t\tfor (int m = i+1; m < 7; m++) {\r\n\t\t\t\t\t\t\t\tfor (int n = 0; n < 6; n++) {\r\n\t\t\t\t\t\t\t\t\tif (colors[m] == 'r' || colors[m] == 'i')\r\n\t\t\t\t\t\t\t\t\t\tif (n > 2)\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\tfor (int o = 0; o < 4; o++) {\r\n\t\t\t\t\t\t\t\t\t\tfor (int p = 0; p < board.getColors()[o].length; p++) {\r\n\t\t\t\t\t\t\t\t\t\t\tpiece2 = \"\" + colors[m] + n + p + o;\r\n\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece2)){\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (String solution : solutions){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (solution.contains(piece1) && solution.contains(piece2)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tString pieces = \"\\n\\\"\" + piece1 + piece2 + \"W\\\"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (allPuzzlesWithTwoPieces.contains(pieces))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotPuzzlesWithTwoPieces.add(pieces);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallPuzzlesWithTwoPieces.add(pieces);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tallPuzzlesWithTwoPieces.removeAll(notPuzzlesWithTwoPieces);\r\n\t}\r\n\r\n\t/**\r\n\t * this method is used to find all puzzles with 3 given pieces\r\n\t * it took a long time to run this method\r\n\t * this method got 8103 puzzles\r\n\t */\r\n\tpublic void getAllPuzzlesWithThreePieces(){\r\n\t\tString piece1, piece2, piece3;\r\n\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\tfor (int j = 0; j < 6; j++) {\r\n\t\t\t\tif (colors[i] == 'r' || colors[i] == 'i')\r\n\t\t\t\t\tif (j > 2)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int k = 0; k < 4; k++) {\r\n\t\t\t\t\tfor (int l = 0; l < board.getColors()[k].length; l++) {\r\n\t\t\t\t\t\tpiece1 = \"\" + colors[i] + j + l + k;\r\n\t\t\t\t\t\tif (board.isPieceValid(piece1)){\r\n\t\t\t\t\t\t\tfor (int m = i+1; m < 7; m++) {\r\n\t\t\t\t\t\t\t\tfor (int n = 0; n < 6; n++) {\r\n\t\t\t\t\t\t\t\t\tif (colors[m] == 'r' || colors[m] == 'i')\r\n\t\t\t\t\t\t\t\t\t\tif (n > 2)\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\tfor (int o = 0; o < 4; o++) {\r\n\t\t\t\t\t\t\t\t\t\tfor (int p = 0; p < board.getColors()[o].length; p++) {\r\n\t\t\t\t\t\t\t\t\t\t\tpiece2 = \"\" + colors[m] + n + p + o;\r\n\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece2)){\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (int q = m+1; q < 7; q++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int r = 0; r < 6; r++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (colors[q] == 'r' || colors[m] == 'i')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (r > 2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int s = 0; s < 4; s++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int t = 0; t < board.getColors()[o].length; t++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpiece3 = \"\" + colors[q] + r + t + s;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece3)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (String solution : allSolutions){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (solution.contains(piece1) && solution.contains(piece2) && solution.contains(piece3)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (allPuzzlesWithThreePieces.contains(piece1+piece2+piece3))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotPuzzlesWithThreePieces.add(piece1+piece2+piece3);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallPuzzlesWithThreePieces.add(piece1+piece2+piece3);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tallPuzzlesWithThreePieces.removeAll(notPuzzlesWithThreePieces);\r\n\t}\r\n\r\n\t/**\r\n\t * this method is used to find all puzzles with 4 given pieces\r\n\t * run time: about 1 hour\r\n\t * got 11282 puzzles\r\n\t */\r\n\tpublic void getAllPuzzlesWithFourPieces(){\r\n\t\tString piece1, piece2, piece3, piece4;\r\n\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\tfor (int j = 0; j < 6; j++) {\r\n\t\t\t\tif (colors[i] == 'r' || colors[i] == 'i')\r\n\t\t\t\t\tif (j > 2)\r\n\t\t\t\t\t\tcontinue;\r\n\t\t\t\tfor (int k = 0; k < 4; k++) {\r\n\t\t\t\t\tfor (int l = 0; l < board.getColors()[k].length; l++) {\r\n\t\t\t\t\t\tpiece1 = \"\" + colors[i] + j + l + k;\r\n\t\t\t\t\t\tif (board.isPieceValid(piece1)){\r\n\t\t\t\t\t\t\tfor (int m = i+1; m < 7; m++) {\r\n\t\t\t\t\t\t\t\tfor (int n = 0; n < 6; n++) {\r\n\t\t\t\t\t\t\t\t\tif (colors[m] == 'r' || colors[m] == 'i')\r\n\t\t\t\t\t\t\t\t\t\tif (n > 2)\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\tfor (int o = 0; o < 4; o++) {\r\n\t\t\t\t\t\t\t\t\t\tfor (int p = 0; p < board.getColors()[o].length; p++) {\r\n\t\t\t\t\t\t\t\t\t\t\tpiece2 = \"\" + colors[m] + n + p + o;\r\n\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece2)){\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor (int q = m+1; q < 7; q++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int r = 0; r < 6; r++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (colors[q] == 'r' || colors[q] == 'i')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (r > 2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int s = 0; s < 4; s++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int t = 0; t < board.getColors()[o].length; t++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpiece3 = \"\" + colors[q] + r + t + s;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece3)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int u = q + 1; u < 7; u++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int v = 0; v < 6; v++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (colors[u] == 'r' || colors[u] == 'i')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (v > 2)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int w = 0; w < 4; w++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (int x = 0; x < board.getColors()[w].length; x++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpiece4 = \"\" + colors[u] + v + x+ w;\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (board.isPieceValid(piece4)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfor (String solution : allSolutions){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (solution.contains(piece1) && solution.contains(piece2) && solution.contains(piece3) && solution.contains(piece4)){\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (allPuzzlesWithFourPieces.contains(piece1+piece2+piece3+piece4))\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tnotPuzzlesWithFourPieces.add(piece1+piece2+piece3+piece4);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tallPuzzlesWithFourPieces.add(piece1+piece2+piece3+piece4);\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\tallPuzzlesWithFourPieces.removeAll(notPuzzlesWithFourPieces);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * All solutions for puzzles with two pieces exclude solution(r041o121y400g540b342i010p202W)\r\n\t */\r\n\tpublic void isTwoPiecesPuzzlesCoveredAllSolutions(){\r\n\t\tSet<String> solutions = new HashSet<>(allSolutions);\r\n\r\n\t\tfor (String puzzles : allPuzzlesWithTwoPieces){\r\n\t\t\tfor (String solution : allSolutions){\r\n\t\t\t\tif (solution.contains(puzzles.substring(0,4)) && solution.contains(puzzles.substring(4,8)))\r\n\t\t\t\t\tsolutions.remove(solution);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (solutions.isEmpty())\r\n\t\t\tSystem.out.println(\"covered\");\r\n\t\telse System.out.println(solutions);\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * 2 or 3 stars given, and all stars in different  colors\r\n\t */\r\n\tpublic void getWizardPuzzles(){\r\n\t\tString last = \"W\";\r\n\t\tString puzzle;\r\n\t\tfor (int i = 0; i < 7; i++) {\r\n\t\t\tfor (int j = 0; j < 4; j++) {\r\n\t\t\t\tfor (int k = 0; k < board.getColors()[j].length; k++) {\r\n\t\t\t\t\tfor (int l = i + 1; l < 7; l++) {\r\n\t\t\t\t\t\tfor (int m = 0; m < 4; m++) {\r\n\t\t\t\t\t\t\tfor (int n = 0; n < board.getColors()[j].length; n++) {\r\n\t\t\t\t\t\t\t\tfor (int o = 0; o < 381; o++){\r\n\t\t\t\t\t\t\t\t\tBoard board = new Board();\r\n\t\t\t\t\t\t\t\t\tboard.setPuzzle(solutions[o]);\r\n\t\t\t\t\t\t\t\t\tif (board.getColor(\"\"+k+j) == colors[i] && board.getColor(\"\"+n+m) == colors[l]) {\r\n\t\t\t\t\t\t\t\t\t\tpuzzle = o + \"W\" + colors[i] + k + j + colors[l] + n + m;\r\n\t\t\t\t\t\t\t\t\t\tif (puzzle.substring(puzzle.indexOf('W')).equals(last.substring(last.indexOf('W')))) {\r\n\t\t\t\t\t\t\t\t\t\t\twizardPuzzles.remove(last);\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}else {\r\n\t\t\t\t\t\t\t\t\t\t\twizardPuzzles.add(puzzle);\r\n\t\t\t\t\t\t\t\t\t\t\tlast = puzzle;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static void main(String[] args) {\r\n\t\tPuzzle puzzle = new Puzzle();\r\n\r\n\t\tpuzzle.getAllSolution();\r\n\t\tSystem.out.println(\"All solutions:\");\r\n\t\tSystem.out.println(puzzle.allSolutions);\r\n\r\n\t\tpuzzle.getAllMasterPiece();\r\n\t\tSystem.out.println(\"All master puzzles\");\r\n\t\tSystem.out.println(puzzle.allMasterPuzzles);\r\n\r\n\t\tpuzzle.getAllPuzzlesWithTwoPieces();\r\n\t\tSystem.out.println(\"All two pieces puzzles with more than one solutions:\");\r\n\t\tSystem.out.println(puzzle.notPuzzlesWithTwoPieces);\r\n\t\tSystem.out.println(\"All puzzles with two pieces:\");\r\n\t\tSystem.out.println(puzzle.allPuzzlesWithTwoPieces);\r\n\r\n\t\t/* a few minutes\r\n\t\tpuzzle.getAllPuzzlesWithThreePieces();\r\n\t\tSystem.out.println(\"All three pieces puzzles with more than one solutions:\");\r\n\t\tSystem.out.println(puzzle.notPuzzlesWithThreePieces);\r\n\t\tSystem.out.println(\"All puzzles with three pieces:\");\r\n\t\tSystem.out.println(puzzle.allPuzzlesWithThreePieces);\r\n\t\t */\r\n\r\n\t\t/* too long run time\r\n\t\tpuzzle.getAllPuzzlesWithFourPieces();\r\n\t\tSystem.out.println(\"All four pieces puzzles with more than one solutions:\");\r\n\t\tSystem.out.println(puzzle.notPuzzlesWithFourPieces);\r\n\t\tSystem.out.println(\"All puzzles with four pieces:\");\r\n\t\tSystem.out.println(puzzle.allPuzzlesWithFourPieces);\r\n\t\t*/\r\n\r\n\t\t/*\r\n\t\tpuzzle.isTwoPiecesPuzzlesCoveredAllSolutions();\r\n\t\t */\r\n\r\n\t\t/*\r\n\t\tpuzzle.getWizardPuzzles();\r\n\t\tfor (String wizard : puzzle.wizardPuzzles)\r\n\t\t\tSystem.out.println(\"\\\"\"+wizard+\"\\\",\");\r\n\t\t */\r\n\r\n\t\tfor (int i = 0; i < 32; i++){\r\n\t\t\tString master = masters[i];\r\n\t\t\tSystem.out.println(master);\r\n\t\t\tSystem.out.println(getMasterSolution(i));\r\n\t\t}\r\n\r\n\t}\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/comp1110/ass2/Puzzle.java b/src/comp1110/ass2/Puzzle.java
--- a/src/comp1110/ass2/Puzzle.java	(revision e4d211b6872bb978bf935dfb5c03fa44ca15b61d)
+++ b/src/comp1110/ass2/Puzzle.java	(date 1632060064413)
@@ -4131,13 +4131,6 @@
 		for (String wizard : puzzle.wizardPuzzles)
 			System.out.println("\""+wizard+"\",");
 		 */
-
-		for (int i = 0; i < 32; i++){
-			String master = masters[i];
-			System.out.println(master);
-			System.out.println(getMasterSolution(i));
-		}
-
 	}
 
 }
Index: src/META-INF/MANIFEST.MF
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/META-INF/MANIFEST.MF b/src/META-INF/MANIFEST.MF
new file mode 100644
--- /dev/null	(date 1631950769771)
+++ b/src/META-INF/MANIFEST.MF	(date 1631950769771)
@@ -0,0 +1,3 @@
+Manifest-Version: 1.0
+Main-Class: comp1110.ass2.gui.Board
+
Index: .idea/artifacts/comp1110_ass2_jar.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/artifacts/comp1110_ass2_jar.xml b/.idea/artifacts/comp1110_ass2_jar.xml
new file mode 100644
--- /dev/null	(date 1631950769781)
+++ b/.idea/artifacts/comp1110_ass2_jar.xml	(date 1631950769781)
@@ -0,0 +1,17 @@
+<component name="ArtifactManager">
+  <artifact type="jar" build-on-make="true" name="comp1110-ass2:jar">
+    <output-path>$PROJECT_DIR$</output-path>
+    <root id="archive" name="game.jar">
+      <element id="module-output" name="comp1110-ass2" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/src.zip" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx-swt.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.web.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.base.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.fxml.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.media.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.swing.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.controls.jar" path-in-jar="/" />
+      <element id="extracted-dir" path="$PATH_TO_FX$/javafx.graphics.jar" path-in-jar="/" />
+    </root>
+  </artifact>
+</component>
\ No newline at end of file
Index: .gitlab-ci.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>image: steveblackburn/comp1110-2021-s2-gitlab-ci:0.1.2\r\n\r\nstages:\r\n  - checksum\r\n  - compliance\r\n  - build\r\n  - test\r\n\r\nbefore_script:\r\n  - export PATH_TO_FX=/usr/share/openjfx/lib\r\n  - export JAVAFX_OPTIONS=\"--module-path $PATH_TO_FX --add-modules javafx.controls,javafx.fxml,javafx.media\"\r\n  - export CP=src:/ass2/*:/shared/junit-platform-console-standalone-1.7.0.jar:$PATH_TO_FX/*\r\n  - export JUNIT=\"java $JAVAFX_OPTIONS -jar /shared/junit-platform-console-standalone-1.7.0.jar --class-path src:/ass2/comp1110-ass2.jar --disable-banner\"\r\n\r\nchecksum:\r\n  tags:\r\n    - comp1110\r\n  stage: checksum\r\n  script:\r\n    - python3 /validate.py --integrity comp1110-ass2\r\n\r\ncompliance:\r\n  tags:\r\n    - comp1110\r\n  stage: compliance\r\n  script:\r\n    - python3 /validate.py --gitlablogin ${GITLAB_USER_LOGIN} --gitlabuser \"${GITLAB_USER_NAME}\" --gitlabprojectname \"${CI_PROJECT_NAME}\" --assignment /compliance-ass2.yml\r\n\r\nbuild:\r\n  tags:\r\n    - comp1110\r\n  stage: build\r\n  script:\r\n    - javac -encoding utf-8 $JAVAFX_OPTIONS -cp $CP src/comp1110/ass2/*.java src/comp1110/ass2/*/*.java\r\n  artifacts:\r\n    paths:\r\n      - src/comp1110/ass2/*.class\r\n      - src/comp1110/ass2/*/*.class\r\n\r\ntask3:\r\n  tags:\r\n    - comp1110\r\n  stage: test\r\n  script:\r\n    - $JUNIT -c=comp1110.ass2.GameStringWellFormedTest\r\n  allow_failure: true\r\n\r\ntask4:\r\n  tags:\r\n    - comp1110\r\n  stage: test\r\n  script:\r\n    - $JUNIT -c=comp1110.ass2.GameStateStringWellFormedTest\r\n  allow_failure: true\r\n\r\ntask6:\r\n  tags:\r\n    - comp1110\r\n  stage: test\r\n  script:\r\n    - $JUNIT -c=comp1110.ass2.GameStateValidTest\r\n  allow_failure: true\r\n\r\ntask7:\r\n  tags:\r\n    - comp1110\r\n  stage: test\r\n  script:\r\n    - $JUNIT -c=comp1110.ass2.ViablePieceStringsTest\r\n  allow_failure: true\r\n\r\ntask10:\r\n  tags:\r\n    - comp1110\r\n  stage: test\r\n  script:\r\n    - $JUNIT -c=comp1110.ass2.SolutionsTest\r\n  allow_failure: true\r\n  \r\n## Local Variables:\r\n## mode: yaml\r\n## End:\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
--- a/.gitlab-ci.yml	(revision e4d211b6872bb978bf935dfb5c03fa44ca15b61d)
+++ b/.gitlab-ci.yml	(date 1631950769801)
@@ -13,7 +13,8 @@
   - export JUNIT="java $JAVAFX_OPTIONS -jar /shared/junit-platform-console-standalone-1.7.0.jar --class-path src:/ass2/comp1110-ass2.jar --disable-banner"
 
 checksum:
-  tags:
+  tags:java --module-path ${PATH_TO_FX} --add-modules=javafx.controls,javafx.fxml,javafx.media -jar game.jar
+
     - comp1110
   stage: checksum
   script:
